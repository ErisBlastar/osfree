group winstdbook;

   (**********************************************************************)
   (*                                                                    *)
   (*                          N O T E B O O K                           *)
   (*                                                                    *)
   (**********************************************************************)

   (**********************************************************************)
   (* Message ids                                                        *)
   (**********************************************************************)
   
constant BKM_CALCPAGERECT         = $0353;  (* Calc book/page rectangle  *)
constant BKM_DELETEPAGE           = $0354;  (* Delete page(s)            *)
constant BKM_INSERTPAGE           = $0355;  (* Insert page               *)
constant BKM_INVALIDATETABS       = $0356;  (* Invalidate tab area       *)
constant BKM_TURNTOPAGE           = $0357;  (* Turn to page              *)
constant BKM_QUERYPAGECOUNT       = $0358;  (* Query number of pages     *)
constant BKM_QUERYPAGEID          = $0359;  (* Query page identifier     *)
constant BKM_QUERYPAGEDATA        = $035a;  (* Query page user data      *)
constant BKM_QUERYPAGEWINDOWHWND  = $035b;  (* Query page window handle  *)
constant BKM_QUERYTABBITMAP       = $035c;  (* Query tab bitmap handle   *)
constant BKM_QUERYTABTEXT         = $035d;  (* Query tab text pointer    *)
constant BKM_SETDIMENSIONS        = $035e;  (* Set tab/dogear dimensions *)
constant BKM_SETPAGEDATA          = $035f;  (* Set page user data        *)
constant BKM_SETPAGEWINDOWHWND    = $0360;  (* Set page window handle    *)
constant BKM_SETSTATUSLINETEXT    = $0361;  (* Set status line text      *)
constant BKM_SETTABBITMAP         = $0362;  (* Set tab bitmap            *)
constant BKM_SETTABTEXT           = $0363;  (* Set tab text              *)
constant BKM_SETNOTEBOOKCOLORS    = $0364;  (* Set Notebook colors       *)
constant BKM_QUERYPAGESTYLE       = $0365;  (* Query page style          *)
constant BKM_QUERYSTATUSLINETEXT  = $0366;  (* Query status line text    *)
constant BKM_SETPAGEINFO          = $0367;   (* Set page information     *)
constant BKM_QUERYPAGEINFO        = $0368;   (* Query page information   *)
constant BKM_SETTABCOLOR          = $0374;  (* Set book tab color        *)
constant BKM_SETNOTEBOOKBUTTONS   = $0375;  (* Set common pushbuttons    *)

constant BKN_PAGESELECTED        = 130;     (* New page selected by user *)
constant BKN_NEWPAGESIZE         = 131;     (* App page size changed     *)
constant BKN_HELP                = 132;     (* Help notification         *)
constant BKN_PAGEDELETED         = 133;     (* Page deleted notification *)
constant BKN_PAGESELECTEDPENDING = 134;     (* New page selected by user *)

   (**********************************************************************)
   (* Page deletion flags (usDeleteFlag)                                 *)
   (**********************************************************************)
constant BKA_ALL                  = $0001;  (* all pages                 *)
constant BKA_SINGLE               = $0002;  (* single page               *)
constant BKA_TAB                  = $0004;  (* minor/major section       *)

   (**********************************************************************)
   (* Page insertion/query order (usPageOrder, usQueryOrder)             *)
   (**********************************************************************)
constant BKA_LAST                 = $0002;  (* Insert/Query last page    *)
constant BKA_FIRST                = $0004;  (* Insert/Query first page   *)
constant BKA_NEXT                 = $0008;  (* Insert/Query after page   *)
constant BKA_PREV                 = $0010;  (* Insert/Query before page  *)
constant BKA_TOP                  = $0020;  (* Query topmost page        *)

   (**********************************************************************)
   (* Notebook region types (usBookRegion, usType)                       *)
   (**********************************************************************)
constant BKA_MAJORTAB             = $0001;  (* Major Tab                 *)
constant BKA_MINORTAB             = $0002;  (* Minor Tab                 *)
constant BKA_PAGEBUTTON           = $0100;  (* Page Turning Button       *)

   (**********************************************************************)
   (* Page insertion/query styles (usPageStyle,usQueryEnd)               *)
   (**********************************************************************)
constant BKA_STATUSTEXTON         = $0001;  (* status area text          *)
constant BKA_MAJOR                = $0040;  (* Major Tab                 *)
constant BKA_MINOR                = $0080;  (* Minor Tab                 *)
constant BKA_AUTOPAGESIZE         = $0100;  (* Page window position/size *)
constant BKA_END                  = $0200;  (* Query to end of book      *)

   (**********************************************************************)
   (* Tab window contents (usTabDisplay)                                 *)
   (**********************************************************************)
constant BKA_TEXT                 = $0400;  (* text data                 *)
constant BKA_BITMAP               = $0800;  (* bitmap                    *)

   (**********************************************************************)
   (* Tabbed dialog-specific constants                                   *)
   (**********************************************************************)
constant BKA_AUTOCOLOR            = -1;    (* Automatically color tabs  *)
constant BKA_MAXBUTTONID          = 7999;    (* Max id for common buttons *)

   (**********************************************************************)
   (* Notebook window styles (ulNotebookStyles)                          *)
   (**********************************************************************)

   (**********************************************************************)
   (* Backpage Orientation                                               *)
   (**********************************************************************)
constant BKS_BACKPAGESBR          = $00000001;  (* Bottom right          *)
constant BKS_BACKPAGESBL          = $00000002;  (* Bottom left           *)
constant BKS_BACKPAGESTR          = $00000004;  (* Top right             *)
constant BKS_BACKPAGESTL          = $00000008;  (* Top left              *)

   (**********************************************************************)
   (* Major Tab Side                                                     *)
   (**********************************************************************)
constant BKS_MAJORTABRIGHT        = $00000010;  (* Major tabs right      *)
constant BKS_MAJORTABLEFT         = $00000020;  (* Major tabs left       *)
constant BKS_MAJORTABTOP          = $00000040;  (* Major tabs top        *)
constant BKS_MAJORTABBOTTOM       = $00000080;  (* Major tabs bottom     *)

   (**********************************************************************)
   (* Tab Type                                                           *)
   (**********************************************************************)
constant BKS_SQUARETABS           = $00000000;  (* Square edged tabs     *)
constant BKS_ROUNDEDTABS          = $00000100;  (* Round edged tabs      *)
constant BKS_POLYGONTABS          = $00000200;  (* Polygon edged tabs    *)

   (**********************************************************************)
   (* Binding type                                                       *)
   (**********************************************************************)
constant BKS_SOLIDBIND            = $00000000;  (* Solid binding         *)
constant BKS_SPIRALBIND           = $00000400;  (* Spiral binding        *)

   (**********************************************************************)
   (* Status line text justification                                     *)
   (**********************************************************************)
constant BKS_STATUSTEXTLEFT       = $00000000;  (* Left justify text     *)
constant BKS_STATUSTEXTRIGHT      = $00001000;  (* Right justify text    *)
constant BKS_STATUSTEXTCENTER     = $00002000;  (* Center text           *)

   (**********************************************************************)
   (* Tab text justification                                             *)
   (**********************************************************************)
constant BKS_TABTEXTLEFT          = $00000000;  (* Left justify tab text *)
constant BKS_TABTEXTRIGHT         = $00004000;  (* Right justify tab text*)
constant BKS_TABTEXTCENTER        = $00008000;  (* Center tab text       *)

   (**********************************************************************)
   (* Tabbed dialog styles                                               *)
   (**********************************************************************)
constant BKS_TABBEDDIALOG         = $00000800;  (* Tabbed dialog         *)
constant BKS_BUTTONAREA           = $00000200;  (* Reserve space for     *)

   (**********************************************************************)
   (* Notebook color presentation param attributes                       *)
   (**********************************************************************)
constant BKA_BACKGROUNDPAGECOLORINDEX  = $0001; (* Page Background       *)
constant BKA_BACKGROUNDPAGECOLOR       = $0002;
constant BKA_BACKGROUNDMAJORCOLORINDEX = $0003; (* Major Tab Background  *)
constant BKA_BACKGROUNDMAJORCOLOR      = $0004;
constant BKA_BACKGROUNDMINORCOLORINDEX = $0005; (* Minor Tab Background  *)
constant BKA_BACKGROUNDMINORCOLOR      = $0006;
constant BKA_FOREGROUNDMAJORCOLORINDEX = $0007; (* Major Tab Text        *)
constant BKA_FOREGROUNDMAJORCOLOR      = $0008;
constant BKA_FOREGROUNDMINORCOLORINDEX = $0009; (* Minor Tab Text        *)
constant BKA_FOREGROUNDMINORCOLOR      = $000A;

   (**********************************************************************)
   (* Error message ids                                                  *)
   (**********************************************************************)
constant BOOKERR_INVALID_PARAMETERS   = -1; (* Invalid parameters        *)

   (**********************************************************************)
   (* BKM_SETPAGINFO flags for bSetPageInfoFlags.                        *)
   (**********************************************************************)
constant BFA_PAGEDATA          = $00000001; (* Set page data            *)
constant BFA_PAGEFROMHWND      = $00000002; (* Set page window hwnd     *)
constant BFA_PAGEFROMDLGTEMPLATE = $00000004; (* Set page window hwnd   *)
   (* from dialog template     *)
constant BFA_PAGEFROMDLGRES    = $00000008; (* Set page window hwnd     *)
   (* from dialog resource     *)
constant BFA_STATUSLINE        = $00000010; (* Set status text          *)
constant BFA_MAJORTABBITMAP    = $00000020; (* Set major tab bitmap     *)
constant BFA_MINORTABBITMAP    = $00000040; (* Set minor tab bitmap     *)
constant BFA_MAJORTABTEXT      = $00000080; (* Set major tab text       *)
constant BFA_MINORTABTEXT      = $00000100; (* Set minor tab text       *)
constant BFA_BIDIINFO          = $00000200; (* Reserved: bidirectional  *)
   (* languages support.       *)
   (**********************************************************************)
   (* BKM_SETPAGINFO message structure.                                  *)
   (**********************************************************************)
   type BOOKPAGEINFO=structure     (* bkpginfo *)
           cb: ULONG;                         (* Page flags - BFA_         *)
           fl: ULONG;                         (* Page flags - BFA_         *)
           bLoadDlg: BOOL;                   (* TRUE: Load dialog now     *)
      (* FALSE: Load dialog on turn*)
           ulPageData: ULONG;                 (* data to associate w/page  *)
           hwndPage: HWND;                   (* hwnd to associate w/ page *)
           pfnPageDlgProc: PFN;             (* auto load of dialogs for  *)
           idPageDlg: ULONG;                  (* the application.          *)
           hmodPageDlg: HMODULE;                (* Resource info used for    *)
           pPageDlgCreateParams: PVOID;
           pdlgtPage: PDLGTEMPLATE;
           cbStatusLine: ULONG;               (* Page flags - BFA_         *)
           pszStatusLine: PSZ;              (* Status line text string   *)
           hbmMajorTab: HBITMAP;                (* Major tab bitmap handle   *)
           hbmMinorTab: HBITMAP;                (* Minor tab bitmap handle   *)
           cbMajorTab: ULONG;                 (* Page flags - BFA_         *)
           pszMajorTab: PSZ;                (* Major tab text string     *)
           cbMinorTab: ULONG;                 (* Page flags - BFA_         *)
           pszMinorTab: PSZ;                (* Minor tab text string     *)
           pBidiInfo: PVOID;                  (* Reserved: Bidirectional   *)
      (* language support.         *)
     end;
   type PBOOKPAGEINFO=^BOOKPAGEINFO;

   (**********************************************************************)
   (* BKM_QUERYTABTEXT and BKM_QUERYSTATUSLINETEXT message structure     *)
   (**********************************************************************)
   type BOOKTEXT=structure     (* booktxt *)
          pString: PSZ;                        (* ptr to string buffer      *)
          textLen: ULONG;                        (* length of string to query *)
     end;
   type PBOOKTEXT=^BOOKTEXT;

   (**********************************************************************)
   (* BKM_SETNOTEBOOKBUTTONS message structure                           *)
   (**********************************************************************)
   type NOTEBOOKBUTTON=structure   (* nbbutton *)
           pszText: PSZ;                (* Button text                     *)
           idButton: ULONG;               (* Button id ( < BKA_MAXBUTTONID)  *)
           hImage: LHANDLE;                 (* Handle for bitmap / icon        *)
           flStyle: LONG;                (* Button style                    *)
    end;
   type PNOTEBOOKBUTTON=^NOTEBOOKBUTTON;

   (**********************************************************************)
   (* BKN_PAGEDELETED notify message structure                           *)
   (**********************************************************************)
   type DELETENOTIFY=structure     (* delntfy *)
          hwndBook: HWND;                      (* Notebook window handle    *)
          hwndPage: HWND;                      (* App. page window handle   *)
          ulAppPageData: ULONG;                 (* App. page data            *)
          hbmTab: HBITMAP;                        (* App. tab bitmap handle    *)
     end;
   type PDELETENOTIFY=^DELETENOTIFY;

   (**********************************************************************)
   (* BKN_PAGESELECTED notify message structure                          *)
   (**********************************************************************)
   type PAGESELECTNOTIFY=structure     (* pgsntfy *)
         hwndBook: HWND;                      (* Notebook window handle    *)
         ulPageIdCur: ULONG;                   (* Previous top page id      *)
         ulPageIdNew: ULONG;                   (* New top Page id           *)
     end;
   type PPAGESELECTNOTIFY=^PAGESELECTNOTIFY;

end.
