#!ifdef DEBUG
#OPTS=/O+ /Ti /Gs+ /Tm+
#CV=/CO /MAP
#!else
#OPTS=/O- /Gs-
#!endif
msgbind=msgbind

CC = icc
CFLAGS = /DOS2 /W3 /Tl1 /Sm /Ss /Gm /Gd- /Gf /G5 /Gt /C $(OPTS)
MFLAGS = /DOS2 /W3 /Tl1 /Sm /Ss /Gm /Gd- /Gf /G5 /Gt $(OPTS)
LINKOPT = /NOI $(CV) /PM:VIO /STACK:10000 /ALIGN:4 /MAP /BASE:0x10000
WOPTS=/W3 /Wdcl /Weff /Wpar /Wpro /Wrea /Wret /Wuse


.c.obj:
   $(CC) $(CFLAGS) $(WOPTS) .\$*.c >$*.err
   type $*.err      

.obj.exe:
   ilink /NOFREE $*, $*, $*, LIBCONV LIBULS $(LINKOPT);
     echo <<$*.bnd
> $*.EXE
< $(IBMC)\HELP\\DDE4.MSG
*
<<KEEP
     $(msgbind) $*.bnd

ALL: F32MON.EXE F32PARTS.EXE CACHEF32.EXE F32STAT.EXE

diskinf0.obj : diskinf0.c fat32.h fat32def.h
diskinf1.obj : diskinf1.c fat32.h fat32def.h
diskinf2.obj : diskinf2.c fat32.h fat32def.h
monitor.obj  : monitor.c fat32def.h
cachef32.obj : cachef32.c fat32def.h
f32stat.obj  : f32stat.c fat32def.h

#DISKINFO.EXE : DISKINF0.C DISKINF1.C DISKINF2.C
#   $(CC) $(MFLAGS) $(WOPTS) /Fediskinfo.exe  /L $**

OBJS=diskinf0.OBJ diskinf1.OBJ diskinf2.OBJ
F32PARTS.EXE : $(OBJS)
        ilink /NOFREE @<<
$(RT_OBJS: = +^
) $(OBJS: = +^
)
$@
F32PARTS,
$(LINKOPT);
<<NOKEEP

F32MON.EXE : MONITOR.OBJ
        ilink /NOFREE @<<
MONITOR.OBJ
$@
F32MON,
$(LINKOPT);
<<NOKEEP

#MONITOR.EXE : MONITOR.OBJ
CACHEF32.EXE : CACHEF32.OBJ
F32STAT.EXE  : F32STAT.OBJ
