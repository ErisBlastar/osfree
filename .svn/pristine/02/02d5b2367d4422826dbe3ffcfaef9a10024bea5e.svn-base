#
# Makefile for Regina REXX Interpreter
#
# Using C Set/2 under OS/2
# FIXME, FGC: How to set "unsigned char" as default char type?
#
#
SRCDIR=g:\regina
CEXTRA = -DOS2 -Q

!ifdef DEBUG
EEXTRA = /DEBUG /MAP:FULL
DEBUGFLAG  = /Ti+ /O-
!else
EEXTRA = /PACKCODE /PACKDATA
DEBUGFLAG  = -DNDEBUG /Ti- /O+
!endif

DYN_COMP = /Ge- /DDYNAMIC
LIBS = #libc.lib
SHL_TARGETS= regina.exe rxtest1.dll rxtest2.dll
LD     = link386
LIBFLAGS = /OUT:rexx.lib
LIBLINK = regina.lib
LINKSHL = regina.lib
DLLDIR = dll-obj
LD_RXLIB1=link386 $@ /DEF:$(SRCDIR)\$*.def
LD_RXLIB2= regina.lib
MV= -ren
CC=icc

CC2O=/Fo$@
#
# Include the common rules for the interpreter
#

#
# Some settings that you may wish to change, these are used only
# for the 'install' target:
#
#   TOPDIR    The top of the directory hierarchy in which to install
#   BINDIR    Where to install the compiled 'rexx' program
#   LIBDIR    Where to install the 'regina' library
#   MANEXT    The extention of the manual page
#   MANDIR    Where to install the manual page
#   PROGNAME  What to call the compiled program
#
BINDIR = $(TOPDIR)/bin
LIBDIR = $(TOPDIR)/lib
ABI=2.0
VER=20
VERDOT=2.0

MISCDEFS = -DFGC -I$(SRCDIR)

COPT = $(DEBUGFLAG) $(CEXTRA) $(MISCDEFS)
LINKOPT = $(EEXTRA)
OTHERCOPT = $(DEBUGFLAG) $(CEXTRA) $(MISCDEFS)

README = $(SRCDIR)/README.??? COPYING-LIB

FILES = funcs builtin error variable interprt debug dbgfuncs \
        memory parsing files misc unxfuncs os2funcs cmsfuncs shell rexxext stack \
        tracing interp cmath convert strings library strmath signals \
        macros envir wrappers options os_os2

CSRCFILES = $(SRCDIR)/funcs.c $(SRCDIR)/builtin.c $(SRCDIR)/error.c $(SRCDIR)/variable.c \
        $(SRCDIR)/interprt.c $(SRCDIR)/debug.c $(SRCDIR)/dbgfuncs.c $(SRCDIR)/memory.c $(SRCDIR)/parsing.c $(SRCDIR)/files.c \
        $(SRCDIR)/misc.c $(SRCDIR)/unxfuncs.c $(SRCDIR)/cmsfuncs.c $(SRCDIR)/os2funcs.c $(SRCDIR)/shell.c $(SRCDIR)/rexxext.c $(SRCDIR)/stack.c \
        $(SRCDIR)/tracing.c $(SRCDIR)/interp.c $(SRCDIR)/cmath.c $(SRCDIR)/convert.c $(SRCDIR)/strings.c $(SRCDIR)/library.c \
        $(SRCDIR)/strmath.c $(SRCDIR)/signals.c $(SRCDIR)/macros.c $(SRCDIR)/envir.c $(SRCDIR)/expr.c \
        $(SRCDIR)/wrappers.c $(SRCDIR)/options.c $(SRCDIR)/os_os2.c

OFILES = funcs.obj builtin.obj error.obj variable.obj \
        interprt.obj debug.obj dbgfuncs.obj memory.obj parsing.obj files.obj \
        misc.obj unxfuncs.obj cmsfuncs.obj shell.obj os2funcs.obj rexxext.obj stack.obj \
        tracing.obj interp.obj cmath.obj convert.obj strings.obj library.obj \
        strmath.obj signals.obj macros.obj envir.obj expr.obj \
        yaccsrc.obj lexsrc.obj options.obj os_os2.obj wrappers.obj

SHOFILES = $(DLLDIR)\funcs.obj $(DLLDIR)\builtin.obj $(DLLDIR)\error.obj $(DLLDIR)\variable.obj \
        $(DLLDIR)\interprt.obj $(DLLDIR)\debug.obj $(DLLDIR)\dbgfuncs.obj $(DLLDIR)\memory.obj $(DLLDIR)\parsing.obj $(DLLDIR)\files.obj \
        $(DLLDIR)\misc.obj $(DLLDIR)\unxfuncs.obj $(DLLDIR)\cmsfuncs.obj $(DLLDIR)\os2funcs.obj $(DLLDIR)\shell.obj $(DLLDIR)\rexxext.obj $(DLLDIR)\stack.obj \
        $(DLLDIR)\tracing.obj $(DLLDIR)\interp.obj $(DLLDIR)\cmath.obj $(DLLDIR)\convert.obj $(DLLDIR)\strings.obj $(DLLDIR)\library.obj \
        $(DLLDIR)\strmath.obj $(DLLDIR)\signals.obj $(DLLDIR)\macros.obj $(DLLDIR)\envir.obj $(DLLDIR)\expr.obj \
        $(DLLDIR)\yaccsrc.obj $(DLLDIR)\lexsrc.obj $(DLLDIR)\wrappers.obj $(DLLDIR)\options.obj $(DLLDIR)\os_os2.obj \
        $(DLLDIR)\rexx.obj $(DLLDIR)\client.obj $(DLLDIR)\rexxsaa.obj

DEMODIR = $(SRCDIR)/demo
DEMOFILES = $(DEMODIR)/*
TRIPDIR = $(SRCDIR)/trip
TRIPFILES = $(TRIPDIR)/*
UNIXFILES = $(SRCDIR)/*.in $(SRCDIR)/configure $(SRCDIR)/config.sub \
        $(SRCDIR)/config.guess $(SRCDIR)/aclocal.m4 $(SRCDIR)/install-sh \
        $(SRCDIR)/INSTALL $(SRCDIR)/yaccsrc.y $(SRCDIR)/lexsrc.l

ALLSRC = $(CFILES) $(HFILES)

HFILES = $(SRCDIR)/rexx.h $(SRCDIR)/defs.h $(SRCDIR)/extern.h $(SRCDIR)/regina_t.h \
                $(SRCDIR)/config.h $(SRCDIR)/strings.h $(SRCDIR)/configur.h $(SRCDIR)/yaccsrc.h \
                $(SRCDIR)/rxiface.h $(SRCDIR)/rexxsaa.h $(SRCDIR)/utsname.h
CFILES = $(SRCDIR)/yaccsrc.c $(SRCDIR)/lexsrc.c $(CSRCFILES) $(SRCDIR)/execiser.c \
                $(SRCDIR)/rexxsaa.c $(SRCDIR)/rexx.c $(SRCDIR)/regina.c $(SRCDIR)/client.c \
                $(SRCDIR)/r2perl.c $(SRCDIR)/test1.c $(SRCDIR)/test2.c

#.SUFFIXES: .sho $(SUFFIXES)
#
# Do not use default suffixes rule
#
.SUFFIXES:

all : rexx.exe execiser.exe $(SHL_TARGETS)

$(CSRCFILES) : $(SRCDIR)/rexx.h

$(SRCDIR)/rexx.h : $(SRCDIR)/extern.h $(SRCDIR)/strings.h $(SRCDIR)/defs.h $(SRCDIR)/regina_t.h

$(DLLDIR):
        mkdir $(DLLDIR)

rexx.exe : $(OFILES) rexx.obj
         $(LD) $(LINKOPT) $(STATIC_LDFLAGS) /OUT:rexx.exe $(OFILES) rexx.obj $(LIBS)

regina.exe : regina.dll regina.obj reginaw32exe.obj
         $(LD) $(LINKOPT) $(DYNAMIC_LDFLAGS) /OUT:regina.exe regina.obj reginaw32exe.obj $(LINKSHL) $(LIBS) $(SHLIBS)

execiser.exe : execiser.obj regina.dll
         $(LD) $(LINKOPT) /OUT:execiser.exe execiser.obj $(LIBLINK) $(SHLIBS)

rexx.lib: $(OFILES) client.obj drexx.obj rexxsaa.obj
        lib $(LIBFLAGS) $(OBJECTS) client.obj drexx.obj rexxsaa.obj

regina.dll: $(SHOFILES) reginaw32dll.obj
        link $(EEXTRA) /NOLOGO /DLL /OUT:regina.dll /IMPLIB:regina.lib /DEF:$(SRCDIR)\regina.def reginaw32dll.obj $(DLLDIR)\*.obj

#
# Rules for static objects
#
funcs.obj :   $(SRCDIR)/funcs.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/funcs.c

builtin.obj : $(SRCDIR)/builtin.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/builtin.c

error.obj :   $(SRCDIR)/error.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/error.c

variable.obj :$(SRCDIR)/variable.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/variable.c

interprt.obj :$(SRCDIR)/interprt.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/interprt.c

debug.obj :   $(SRCDIR)/debug.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/debug.c

dbgfuncs.obj :$(SRCDIR)/dbgfuncs.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/dbgfuncs.c

memory.obj :  $(SRCDIR)/memory.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/memory.c

parsing.obj : $(SRCDIR)/parsing.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/parsing.c

files.obj :   $(SRCDIR)/files.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/files.c

misc.obj :    $(SRCDIR)/misc.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/misc.c

unxfuncs.obj :$(SRCDIR)/unxfuncs.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/unxfuncs.c

os2funcs.obj :$(SRCDIR)/os2funcs.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/os2funcs.c

cmsfuncs.obj :$(SRCDIR)/cmsfuncs.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/cmsfuncs.c

shell.obj :   $(SRCDIR)/shell.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/shell.c

rexxext.obj : $(SRCDIR)/rexxext.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/rexxext.c

stack.obj :   $(SRCDIR)/stack.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/stack.c

tracing.obj : $(SRCDIR)/tracing.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/tracing.c

interp.obj :  $(SRCDIR)/interp.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/interp.c

cmath.obj :   $(SRCDIR)/cmath.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/cmath.c

convert.obj : $(SRCDIR)/convert.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/convert.c

strings.obj : $(SRCDIR)/strings.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/strings.c

library.obj : $(SRCDIR)/library.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/library.c

strmath.obj : $(SRCDIR)/strmath.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/strmath.c

signals.obj : $(SRCDIR)/signals.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/signals.c

macros.obj :  $(SRCDIR)/macros.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/macros.c

envir.obj :   $(SRCDIR)/envir.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/envir.c

expr.obj :    $(SRCDIR)/expr.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/expr.c

wrappers.obj :$(SRCDIR)/wrappers.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/wrappers.c

options.obj : $(SRCDIR)/options.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/options.c

os_os2.obj :  $(SRCDIR)/os_os2.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/os_os2.c

rexx.obj :    $(SRCDIR)/rexx.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/rexx.c

client.obj :    $(SRCDIR)/client.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/client.c

rexxsaa.obj :    $(SRCDIR)/rexxsaa.c   $(SRCDIR)\rexxsaa.h
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/rexxsaa.c

regina.obj :  $(SRCDIR)/regina.c
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/regina.c

drexx.obj : $(SRCDIR)/rexx.c
        $(CC) $(COPT) -c -DRXLIB $(CC2O) $(SRCDIR)/rexx.c

lexsrc.obj : $(SRCDIR)/lexsrc.c $(SRCDIR)/rexx.h $(SRCDIR)/yaccsrc.h
        $(CC) $(OTHERCOPT) $(CC2O) -c $(SRCDIR)/lexsrc.c

yaccsrc.obj : $(SRCDIR)/yaccsrc.c $(SRCDIR)/defs.h $(SRCDIR)/rexx.h
        $(CC) $(OTHERCOPT) $(CC2O) -c -DYYMAXDEPTH=10000 $(SRCDIR)/yaccsrc.c

execiser.obj : $(SRCDIR)/execiser.c $(SRCDIR)/rexx.h
        $(CC) $(COPT) $(CC2O) -c $(SRCDIR)/execiser.c

#
# Rules for shared objects
#
$(DLLDIR)\funcs.obj :   $(SRCDIR)/funcs.c $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/funcs.c

$(DLLDIR)\builtin.obj : $(SRCDIR)/builtin.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/builtin.c

$(DLLDIR)\error.obj :   $(SRCDIR)/error.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/error.c

$(DLLDIR)\variable.obj :$(SRCDIR)/variable.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/variable.c

$(DLLDIR)\interprt.obj :$(SRCDIR)/interprt.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/interprt.c

$(DLLDIR)\debug.obj :   $(SRCDIR)/debug.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/debug.c

$(DLLDIR)\dbgfuncs.obj :$(SRCDIR)/dbgfuncs.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/dbgfuncs.c

$(DLLDIR)\memory.obj :  $(SRCDIR)/memory.c    $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/memory.c

$(DLLDIR)\parsing.obj : $(SRCDIR)/parsing.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/parsing.c

$(DLLDIR)\files.obj :   $(SRCDIR)/files.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/files.c

$(DLLDIR)\misc.obj :    $(SRCDIR)/misc.c      $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/misc.c

$(DLLDIR)\unxfuncs.obj :$(SRCDIR)/unxfuncs.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/unxfuncs.c

$(DLLDIR)\os2funcs.obj :$(SRCDIR)/os2funcs.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/os2funcs.c

$(DLLDIR)\cmsfuncs.obj :$(SRCDIR)/cmsfuncs.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/cmsfuncs.c

$(DLLDIR)\shell.obj :   $(SRCDIR)/shell.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/shell.c

$(DLLDIR)\rexxext.obj : $(SRCDIR)/rexxext.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/rexxext.c

$(DLLDIR)\stack.obj :   $(SRCDIR)/stack.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/stack.c

$(DLLDIR)\tracing.obj : $(SRCDIR)/tracing.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/tracing.c

$(DLLDIR)\interp.obj :  $(SRCDIR)/interp.c    $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/interp.c

$(DLLDIR)\cmath.obj :   $(SRCDIR)/cmath.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/cmath.c

$(DLLDIR)\convert.obj : $(SRCDIR)/convert.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/convert.c

$(DLLDIR)\strings.obj : $(SRCDIR)/strings.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/strings.c

$(DLLDIR)\library.obj : $(SRCDIR)/library.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/library.c

$(DLLDIR)\strmath.obj : $(SRCDIR)/strmath.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/strmath.c

$(DLLDIR)\signals.obj : $(SRCDIR)/signals.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/signals.c

$(DLLDIR)\macros.obj :  $(SRCDIR)/macros.c    $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/macros.c

$(DLLDIR)\envir.obj :   $(SRCDIR)/envir.c     $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/envir.c

$(DLLDIR)\expr.obj :    $(SRCDIR)/expr.c      $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/expr.c

$(DLLDIR)\wrappers.obj :$(SRCDIR)/wrappers.c  $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/wrappers.c

$(DLLDIR)\options.obj : $(SRCDIR)/options.c   $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/options.c

$(DLLDIR)\os_os2.obj :  $(SRCDIR)/os_os2.c    $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/os_os2.c

$(DLLDIR)\client.obj :  $(SRCDIR)/client.c    $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/client.c

$(DLLDIR)\rexxsaa.obj :  $(SRCDIR)/rexxsaa.c  $(SRCDIR)\rexxsaa.h $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/rexxsaa.c

$(DLLDIR)\rexx.obj : $(SRCDIR)/rexx.c         $(DLLDIR)
        $(CC) $(COPT) $(CC2O) $(DYN_COMP) -c -DRXLIB $(SRCDIR)/rexx.c

$(DLLDIR)\lexsrc.obj : $(SRCDIR)/lexsrc.c $(SRCDIR)/rexx.h $(SRCDIR)/yaccsrc.h $(DLLDIR)
        $(CC) $(OTHERCOPT) $(CC2O) $(DYN_COMP) -c $(SRCDIR)/lexsrc.c

$(DLLDIR)\yaccsrc.obj : $(SRCDIR)/yaccsrc.c $(SRCDIR)/defs.h $(SRCDIR)/rexx.h  $(DLLDIR)
        $(CC) $(OTHERCOPT) $(CC2O) $(DYN_COMP) -c -DYYMAXDEPTH=10000 $(SRCDIR)/yaccsrc.c

#
# Rules for sample programs
#
test1.obj: $(SRCDIR)/test1.c
        $(CC) -c $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/test1.c

rxtest1.dll: test1.obj regina.dll
        $(LD_RXLIB1) test1.obj $(LD_RXLIB2)

test2.obj: $(SRCDIR)/test2.c
        $(CC) -c $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/test2.c

rxtest2.dll: test2.obj regina.dll
        $(LD_RXLIB1) test2.obj $(LD_RXLIB2)

#
# Rules for resources
#
reginaw32dll.obj reginaw32dll.res: $(SRCDIR)/reginaw32dll.rc
        copy $(SRCDIR)\reginaw32.ico .
        rc /r /foreginaw32dll.res /i$(SRCDIR) $(SRCDIR)\reginaw32dll.rc
        cvtres /MACHINE:IX86 /NOLOGO /OUT:reginaw32dll.obj reginaw32dll.res
#
reginaw32exe.obj reginaw32exe.res: $(SRCDIR)/reginaw32exe.rc
        copy $(SRCDIR)\reginaw32.ico .
        rc /r /foreginaw32exe.res /i$(SRCDIR)\ $(SRCDIR)\reginaw32exe.rc
        cvtres /MACHINE:IX86 /NOLOGO /OUT:reginaw32exe.obj reginaw32exe.res
#

ARCHIVE_FILES = $(ALLSRC) $(README) $(SRCDIR)/makefile* $(SRCDIR)/*.rsp \
        $(SRCDIR)/*.def $(DEMOFILES) $(TRIPFILES) $(UNIXFILES)

dist:
        tar -cvf - $(ARCHIVE_FILES) | gzip > Regina_$(VERDOT).tar.gz

tar:
        tar -cvf - $(ARCHIVE_FILES) | compress > Regina_$(VERDOT).tar.Z

zip:
        zip regna$(VER) $(ARCHIVE_FILES)

