/* generated from moduledf.idl */
/* internal conditional is SOM_Module_moduledf_Source */
#ifndef SOM_Module_moduledf_Header_xh
	#define SOM_Module_moduledf_Header_xh 1
	#include <som.xh>
	#include <containd.xh>
	#include <somobj.xh>
	#include <containr.xh>
	class ModuleDef;
	#ifndef _IDL_SEQUENCE_ModuleDef_defined
		#define _IDL_SEQUENCE_ModuleDef_defined
		SOM_SEQUENCE_TYPEDEF_NAME(ModuleDef * ,sequence(ModuleDef));
	#endif /* _IDL_SEQUENCE_ModuleDef_defined */
#ifndef ModuleDef_API
#define ModuleDef_API
	typedef struct ModuleDef_ModuleDescription
	{
		Identifier name;
		RepositoryId id;
		RepositoryId defined_in;
	} ModuleDef_ModuleDescription;
	#ifndef _IDL_SEQUENCE_ModuleDef_ModuleDescription_defined
		#define _IDL_SEQUENCE_ModuleDef_ModuleDescription_defined
		SOM_SEQUENCE_TYPEDEF(ModuleDef_ModuleDescription);
	#endif /* _IDL_SEQUENCE_ModuleDef_ModuleDescription_defined */
	#ifndef SOM_DONT_USE_SHORT_NAMES
		#ifndef SOMGD_ModuleDescription
			#if defined(ModuleDescription)
				#undef ModuleDescription
				#define SOMGD_ModuleDescription
			#else
				#define ModuleDescription ModuleDef_ModuleDescription
			#endif
		#endif /* SOMGD_ModuleDescription */
	#endif /* SOM_DONT_USE_SHORT_NAMES */
	#ifndef SOM_DONT_USE_SHORT_NAMES
		#ifndef _IDL_SEQUENCE_ModuleDescription_defined
			#define _IDL_SEQUENCE_ModuleDescription_defined
			#define _IDL_SEQUENCE_ModuleDescription _IDL_SEQUENCE_ModuleDef_ModuleDescription
		#endif /* _IDL_SEQUENCE_ModuleDescription_defined */
	#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_defined_in
		#error somTD_ModuleDef__set_defined_in already defined
	#else /* somTD_ModuleDef__set_defined_in */
		#define somTD_ModuleDef__set_defined_in somTD_ModuleDef_somC_set_defined_in
	#endif /* somTD_ModuleDef__set_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__set_defined_in
		#error somTP_ModuleDef__set_defined_in already defined
	#else /* somTP_ModuleDef__set_defined_in */
		#define somTP_ModuleDef__set_defined_in somTP_ModuleDef_somC_set_defined_in
	#endif /* somTP_ModuleDef__set_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_ModuleDef__set_defined_in)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ RepositoryId defined_in);
		#pragma linkage(somTP_ModuleDef__set_defined_in,system)
		typedef somTP_ModuleDef__set_defined_in *somTD_ModuleDef__set_defined_in;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_defined_in
		#error somTD_ModuleDef__set_defined_in already defined
	#else /* somTD_ModuleDef__set_defined_in */
		#define somTD_ModuleDef__set_defined_in somTD_ModuleDef_somC_set_defined_in
	#endif /* somTD_ModuleDef__set_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_ModuleDef__set_defined_in)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ RepositoryId defined_in);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_defined_in
		#error somTD_ModuleDef__get_defined_in already defined
	#else /* somTD_ModuleDef__get_defined_in */
		#define somTD_ModuleDef__get_defined_in somTD_ModuleDef_somC_get_defined_in
	#endif /* somTD_ModuleDef__get_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__get_defined_in
		#error somTP_ModuleDef__get_defined_in already defined
	#else /* somTP_ModuleDef__get_defined_in */
		#define somTP_ModuleDef__get_defined_in somTP_ModuleDef_somC_get_defined_in
	#endif /* somTP_ModuleDef__get_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef RepositoryId (somTP_ModuleDef__get_defined_in)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef__get_defined_in,system)
		typedef somTP_ModuleDef__get_defined_in *somTD_ModuleDef__get_defined_in;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_defined_in
		#error somTD_ModuleDef__get_defined_in already defined
	#else /* somTD_ModuleDef__get_defined_in */
		#define somTD_ModuleDef__get_defined_in somTD_ModuleDef_somC_get_defined_in
	#endif /* somTD_ModuleDef__get_defined_in */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef RepositoryId (SOMLINK * somTD_ModuleDef__get_defined_in)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_name
		#error somTD_ModuleDef__set_name already defined
	#else /* somTD_ModuleDef__set_name */
		#define somTD_ModuleDef__set_name somTD_ModuleDef_somC_set_name
	#endif /* somTD_ModuleDef__set_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__set_name
		#error somTP_ModuleDef__set_name already defined
	#else /* somTP_ModuleDef__set_name */
		#define somTP_ModuleDef__set_name somTP_ModuleDef_somC_set_name
	#endif /* somTP_ModuleDef__set_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_ModuleDef__set_name)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Identifier name);
		#pragma linkage(somTP_ModuleDef__set_name,system)
		typedef somTP_ModuleDef__set_name *somTD_ModuleDef__set_name;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_name
		#error somTD_ModuleDef__set_name already defined
	#else /* somTD_ModuleDef__set_name */
		#define somTD_ModuleDef__set_name somTD_ModuleDef_somC_set_name
	#endif /* somTD_ModuleDef__set_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_ModuleDef__set_name)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Identifier name);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_name
		#error somTD_ModuleDef__get_name already defined
	#else /* somTD_ModuleDef__get_name */
		#define somTD_ModuleDef__get_name somTD_ModuleDef_somC_get_name
	#endif /* somTD_ModuleDef__get_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__get_name
		#error somTP_ModuleDef__get_name already defined
	#else /* somTP_ModuleDef__get_name */
		#define somTP_ModuleDef__get_name somTP_ModuleDef_somC_get_name
	#endif /* somTP_ModuleDef__get_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef Identifier (somTP_ModuleDef__get_name)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef__get_name,system)
		typedef somTP_ModuleDef__get_name *somTD_ModuleDef__get_name;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_name
		#error somTD_ModuleDef__get_name already defined
	#else /* somTD_ModuleDef__get_name */
		#define somTD_ModuleDef__get_name somTD_ModuleDef_somC_get_name
	#endif /* somTD_ModuleDef__get_name */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef Identifier (SOMLINK * somTD_ModuleDef__get_name)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_id
		#error somTD_ModuleDef__set_id already defined
	#else /* somTD_ModuleDef__set_id */
		#define somTD_ModuleDef__set_id somTD_ModuleDef_somC_set_id
	#endif /* somTD_ModuleDef__set_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__set_id
		#error somTP_ModuleDef__set_id already defined
	#else /* somTP_ModuleDef__set_id */
		#define somTP_ModuleDef__set_id somTP_ModuleDef_somC_set_id
	#endif /* somTP_ModuleDef__set_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_ModuleDef__set_id)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ RepositoryId id);
		#pragma linkage(somTP_ModuleDef__set_id,system)
		typedef somTP_ModuleDef__set_id *somTD_ModuleDef__set_id;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_id
		#error somTD_ModuleDef__set_id already defined
	#else /* somTD_ModuleDef__set_id */
		#define somTD_ModuleDef__set_id somTD_ModuleDef_somC_set_id
	#endif /* somTD_ModuleDef__set_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_ModuleDef__set_id)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ RepositoryId id);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_id
		#error somTD_ModuleDef__get_id already defined
	#else /* somTD_ModuleDef__get_id */
		#define somTD_ModuleDef__get_id somTD_ModuleDef_somC_get_id
	#endif /* somTD_ModuleDef__get_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__get_id
		#error somTP_ModuleDef__get_id already defined
	#else /* somTP_ModuleDef__get_id */
		#define somTP_ModuleDef__get_id somTP_ModuleDef_somC_get_id
	#endif /* somTP_ModuleDef__get_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef RepositoryId (somTP_ModuleDef__get_id)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef__get_id,system)
		typedef somTP_ModuleDef__get_id *somTD_ModuleDef__get_id;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_id
		#error somTD_ModuleDef__get_id already defined
	#else /* somTD_ModuleDef__get_id */
		#define somTD_ModuleDef__get_id somTD_ModuleDef_somC_get_id
	#endif /* somTD_ModuleDef__get_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef RepositoryId (SOMLINK * somTD_ModuleDef__get_id)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_somModifiers
		#error somTD_ModuleDef__set_somModifiers already defined
	#else /* somTD_ModuleDef__set_somModifiers */
		#define somTD_ModuleDef__set_somModifiers somTD_ModuleDef_somC_set_somModifiers
	#endif /* somTD_ModuleDef__set_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__set_somModifiers
		#error somTP_ModuleDef__set_somModifiers already defined
	#else /* somTP_ModuleDef__set_somModifiers */
		#define somTP_ModuleDef__set_somModifiers somTP_ModuleDef_somC_set_somModifiers
	#endif /* somTP_ModuleDef__set_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_ModuleDef__set_somModifiers)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Contained_somModifierSeq *somModifiers);
		#pragma linkage(somTP_ModuleDef__set_somModifiers,system)
		typedef somTP_ModuleDef__set_somModifiers *somTD_ModuleDef__set_somModifiers;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__set_somModifiers
		#error somTD_ModuleDef__set_somModifiers already defined
	#else /* somTD_ModuleDef__set_somModifiers */
		#define somTD_ModuleDef__set_somModifiers somTD_ModuleDef_somC_set_somModifiers
	#endif /* somTD_ModuleDef__set_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_ModuleDef__set_somModifiers)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Contained_somModifierSeq *somModifiers);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_somModifiers
		#error somTD_ModuleDef__get_somModifiers already defined
	#else /* somTD_ModuleDef__get_somModifiers */
		#define somTD_ModuleDef__get_somModifiers somTD_ModuleDef_somC_get_somModifiers
	#endif /* somTD_ModuleDef__get_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_ModuleDef__get_somModifiers
		#error somTP_ModuleDef__get_somModifiers already defined
	#else /* somTP_ModuleDef__get_somModifiers */
		#define somTP_ModuleDef__get_somModifiers somTP_ModuleDef_somC_get_somModifiers
	#endif /* somTP_ModuleDef__get_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef Contained_somModifierSeq (somTP_ModuleDef__get_somModifiers)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef__get_somModifiers,system)
		typedef somTP_ModuleDef__get_somModifiers *somTD_ModuleDef__get_somModifiers;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_ModuleDef__get_somModifiers
		#error somTD_ModuleDef__get_somModifiers already defined
	#else /* somTD_ModuleDef__get_somModifiers */
		#define somTD_ModuleDef__get_somModifiers somTD_ModuleDef_somC_get_somModifiers
	#endif /* somTD_ModuleDef__get_somModifiers */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef Contained_somModifierSeq (SOMLINK * somTD_ModuleDef__get_somModifiers)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef Contained_ContainerSeq (somTP_ModuleDef_within)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef_within,system)
		typedef somTP_ModuleDef_within *somTD_ModuleDef_within;
	#else /* __IBMC__ */
		typedef Contained_ContainerSeq (SOMLINK * somTD_ModuleDef_within)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef Contained_Description (somTP_ModuleDef_describe)(
			ModuleDef * somSelf,
			Environment *ev);
		#pragma linkage(somTP_ModuleDef_describe,system)
		typedef somTP_ModuleDef_describe *somTD_ModuleDef_describe;
	#else /* __IBMC__ */
		typedef Contained_Description (SOMLINK * somTD_ModuleDef_describe)(
			ModuleDef * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somInit)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somInit,system)
		typedef somTP_ModuleDef_somInit *somTD_ModuleDef_somInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somInit)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somUninit)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somUninit,system)
		typedef somTP_ModuleDef_somUninit *somTD_ModuleDef_somUninit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somUninit)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somFree)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somFree,system)
		typedef somTP_ModuleDef_somFree *somTD_ModuleDef_somFree;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somFree)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMClass * (somTP_ModuleDef_somGetClass)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somGetClass,system)
		typedef somTP_ModuleDef_somGetClass *somTD_ModuleDef_somGetClass;
	#else /* __IBMC__ */
		typedef SOMClass * (SOMLINK * somTD_ModuleDef_somGetClass)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef string (somTP_ModuleDef_somGetClassName)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somGetClassName,system)
		typedef somTP_ModuleDef_somGetClassName *somTD_ModuleDef_somGetClassName;
	#else /* __IBMC__ */
		typedef string (SOMLINK * somTD_ModuleDef_somGetClassName)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef long (somTP_ModuleDef_somGetSize)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somGetSize,system)
		typedef somTP_ModuleDef_somGetSize *somTD_ModuleDef_somGetSize;
	#else /* __IBMC__ */
		typedef long (SOMLINK * somTD_ModuleDef_somGetSize)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somIsA)(
			ModuleDef * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_ModuleDef_somIsA,system)
		typedef somTP_ModuleDef_somIsA *somTD_ModuleDef_somIsA;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somIsA)(
			ModuleDef * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somIsInstanceOf)(
			ModuleDef * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_ModuleDef_somIsInstanceOf,system)
		typedef somTP_ModuleDef_somIsInstanceOf *somTD_ModuleDef_somIsInstanceOf;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somIsInstanceOf)(
			ModuleDef * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somRespondsTo)(
			ModuleDef * somSelf,
			/* in */ somId mId);
		#pragma linkage(somTP_ModuleDef_somRespondsTo,system)
		typedef somTP_ModuleDef_somRespondsTo *somTD_ModuleDef_somRespondsTo;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somRespondsTo)(
			ModuleDef * somSelf,
			/* in */ somId mId);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somDispatch)(
			ModuleDef * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_ModuleDef_somDispatch,system)
		typedef somTP_ModuleDef_somDispatch *somTD_ModuleDef_somDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somDispatch)(
			ModuleDef * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somClassDispatch)(
			ModuleDef * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_ModuleDef_somClassDispatch,system)
		typedef somTP_ModuleDef_somClassDispatch *somTD_ModuleDef_somClassDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somClassDispatch)(
			ModuleDef * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somCastObj)(
			ModuleDef * somSelf,
			/* in */ SOMClass * castedCls);
		#pragma linkage(somTP_ModuleDef_somCastObj,system)
		typedef somTP_ModuleDef_somCastObj *somTD_ModuleDef_somCastObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somCastObj)(
			ModuleDef * somSelf,
			/* in */ SOMClass * castedCls);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_ModuleDef_somResetObj)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somResetObj,system)
		typedef somTP_ModuleDef_somResetObj *somTD_ModuleDef_somResetObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_ModuleDef_somResetObj)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_ModuleDef_somPrintSelf)(
			ModuleDef * somSelf);
		#pragma linkage(somTP_ModuleDef_somPrintSelf,system)
		typedef somTP_ModuleDef_somPrintSelf *somTD_ModuleDef_somPrintSelf;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_ModuleDef_somPrintSelf)(
			ModuleDef * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDumpSelf)(
			ModuleDef * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_ModuleDef_somDumpSelf,system)
		typedef somTP_ModuleDef_somDumpSelf *somTD_ModuleDef_somDumpSelf;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDumpSelf)(
			ModuleDef * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDumpSelfInt)(
			ModuleDef * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_ModuleDef_somDumpSelfInt,system)
		typedef somTP_ModuleDef_somDumpSelfInt *somTD_ModuleDef_somDumpSelfInt;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDumpSelfInt)(
			ModuleDef * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDefaultInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl);
		#pragma linkage(somTP_ModuleDef_somDefaultInit,system)
		typedef somTP_ModuleDef_somDefaultInit *somTD_ModuleDef_somDefaultInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDefaultInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDefaultCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultCopyInit,system)
		typedef somTP_ModuleDef_somDefaultCopyInit *somTD_ModuleDef_somDefaultCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDefaultCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDefaultConstCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultConstCopyInit,system)
		typedef somTP_ModuleDef_somDefaultConstCopyInit *somTD_ModuleDef_somDefaultConstCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDefaultConstCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDefaultVCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultVCopyInit,system)
		typedef somTP_ModuleDef_somDefaultVCopyInit *somTD_ModuleDef_somDefaultVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDefaultVCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDefaultConstVCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultConstVCopyInit,system)
		typedef somTP_ModuleDef_somDefaultConstVCopyInit *somTD_ModuleDef_somDefaultConstVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDefaultConstVCopyInit)(
			ModuleDef * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_ModuleDef_somDefaultAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultAssign,system)
		typedef somTP_ModuleDef_somDefaultAssign *somTD_ModuleDef_somDefaultAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_ModuleDef_somDefaultAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_ModuleDef_somDefaultConstAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultConstAssign,system)
		typedef somTP_ModuleDef_somDefaultConstAssign *somTD_ModuleDef_somDefaultConstAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_ModuleDef_somDefaultConstAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_ModuleDef_somDefaultVAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultVAssign,system)
		typedef somTP_ModuleDef_somDefaultVAssign *somTD_ModuleDef_somDefaultVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_ModuleDef_somDefaultVAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_ModuleDef_somDefaultConstVAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_ModuleDef_somDefaultConstVAssign,system)
		typedef somTP_ModuleDef_somDefaultConstVAssign *somTD_ModuleDef_somDefaultConstVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_ModuleDef_somDefaultConstVAssign)(
			ModuleDef * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_ModuleDef_somDestruct)(
			ModuleDef * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
		#pragma linkage(somTP_ModuleDef_somDestruct,system)
		typedef somTP_ModuleDef_somDestruct *somTD_ModuleDef_somDestruct;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_ModuleDef_somDestruct)(
			ModuleDef * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef Container_ContainedSeq (somTP_ModuleDef_contents)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited);
		#pragma linkage(somTP_ModuleDef_contents,system)
		typedef somTP_ModuleDef_contents *somTD_ModuleDef_contents;
	#else /* __IBMC__ */
		typedef Container_ContainedSeq (SOMLINK * somTD_ModuleDef_contents)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef Container_ContainedSeq (somTP_ModuleDef_lookup_name)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Identifier search_name,
			/* in */ long levels_to_search,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited);
		#pragma linkage(somTP_ModuleDef_lookup_name,system)
		typedef somTP_ModuleDef_lookup_name *somTD_ModuleDef_lookup_name;
	#else /* __IBMC__ */
		typedef Container_ContainedSeq (SOMLINK * somTD_ModuleDef_lookup_name)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Identifier search_name,
			/* in */ long levels_to_search,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef Container_ContainerDescriptionSeq (somTP_ModuleDef_describe_contents)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited,
			/* in */ long max_returned_objs);
		#pragma linkage(somTP_ModuleDef_describe_contents,system)
		typedef somTP_ModuleDef_describe_contents *somTD_ModuleDef_describe_contents;
	#else /* __IBMC__ */
		typedef Container_ContainerDescriptionSeq (SOMLINK * somTD_ModuleDef_describe_contents)(
			ModuleDef * somSelf,
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited,
			/* in */ long max_returned_objs);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
	#ifndef ModuleDef_MajorVersion
		#define ModuleDef_MajorVersion   2
	#endif /* ModuleDef_MajorVersion */
	#ifndef ModuleDef_MinorVersion
		#define ModuleDef_MinorVersion   1
	#endif /* ModuleDef_MinorVersion */
	typedef struct ModuleDefClassDataStructure
	{
		SOMClass * classObject;
	} ModuleDefClassDataStructure;
	typedef struct ModuleDefCClassDataStructure
	{
		somMethodTabs parentMtab;
		somDToken instanceDataToken;
	} ModuleDefCClassDataStructure;
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_moduledf_Source) || defined(ModuleDef_Class_Source)
			SOMEXTERN struct ModuleDefClassDataStructure _ModuleDefClassData;
			#ifndef ModuleDefClassData
				#define ModuleDefClassData    _ModuleDefClassData
			#endif /* ModuleDefClassData */
		#else
			SOMEXTERN struct ModuleDefClassDataStructure * SOMLINK resolve_ModuleDefClassData(void);
			#ifndef ModuleDefClassData
				#define ModuleDefClassData    (*(resolve_ModuleDefClassData()))
			#endif /* ModuleDefClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_moduledf_Source) || defined(ModuleDef_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
		struct ModuleDefClassDataStructure SOMDLINK ModuleDefClassData;
	#endif /* SOM_RESOLVE_DATA */
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_moduledf_Source) || defined(ModuleDef_Class_Source)
			SOMEXTERN struct ModuleDefCClassDataStructure _ModuleDefCClassData;
			#ifndef ModuleDefCClassData
				#define ModuleDefCClassData    _ModuleDefCClassData
			#endif /* ModuleDefCClassData */
		#else
			SOMEXTERN struct ModuleDefCClassDataStructure * SOMLINK resolve_ModuleDefCClassData(void);
			#ifndef ModuleDefCClassData
				#define ModuleDefCClassData    (*(resolve_ModuleDefCClassData()))
			#endif /* ModuleDefCClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_moduledf_Source) || defined(ModuleDef_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
		struct ModuleDefCClassDataStructure SOMDLINK ModuleDefCClassData;
	#endif /* SOM_RESOLVE_DATA */
	extern "C" {
	extern 
	#if defined(SOM_Module_moduledf_Source) || defined(ModuleDef_Class_Source)
		#ifdef SOMDLLEXPORT
			SOMDLLEXPORT
		#endif /* SOMDLLEXPORT */
	#else /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
		#ifdef SOMDLLIMPORT
			SOMDLLIMPORT
		#endif /* SOMDLLIMPORT */
	#endif /* SOM_Module_moduledf_Source || ModuleDef_Class_Source */
	SOMClass * SOMLINK ModuleDefNewClass
			(integer4 somtmajorVersion,integer4 somtminorVersion);
	}
	#define _SOMCLASS_ModuleDef (ModuleDefClassData.classObject)
	#ifndef SOMGD_ModuleDef
		#if (defined(_ModuleDef) || defined(__ModuleDef))
			#undef _ModuleDef
			#undef __ModuleDef
			#define SOMGD_ModuleDef 1
		#else
			#define _ModuleDef _SOMCLASS_ModuleDef
		#endif /* _ModuleDef */
	#endif /* SOMGD_ModuleDef */
	#define ModuleDef_classObj _SOMCLASS_ModuleDef
	#define _SOMMTOKEN_ModuleDef(method) ((somMToken)(ModuleDefClassData.method))
#endif /* ModuleDef_API */

	class ModuleDef : public Contained, public Container
	{
	protected:
		ModuleDef(somMethodTab & mtab)
			: Contained(mtab)
			, Container(mtab)
		{}
	public:

		inline void operator delete(void *x)
			{ ((SOMObject *)x)->somFree(); };

		inline void * operator new(size_t /* len */)
		{ if (!ModuleDefClassData.classObject)
			{ ModuleDefNewClass(ModuleDef_MajorVersion,ModuleDef_MinorVersion); }
			return (void *)SOM_Resolve((SOMObject *)(void *)ModuleDefClassData.classObject,
				SOMClass,somNewNoInit)((SOMClass *)(void *)ModuleDefClassData.classObject);
		};
		ModuleDef()
			: Contained(*(ModuleDefCClassData.parentMtab->mtab))
			, Container(*(ModuleDefCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==ModuleDefCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultInit(0); }
		ModuleDef(ModuleDef *fromObj)
			: Contained(*(ModuleDefCClassData.parentMtab->mtab))
			, Container(*(ModuleDefCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==ModuleDefCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
		inline void _set_defined_in(
			Environment *ev,
			/* in */ RepositoryId defined_in)
		{
			SOM_Resolve((void *)this,Contained,_set_defined_in)
					((Contained *)(void *)this,ev,defined_in);
		};
		inline RepositoryId _get_defined_in(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,_get_defined_in)
					((Contained *)(void *)this,ev);
		};
		inline void _set_name(
			Environment *ev,
			/* in */ Identifier name)
		{
			SOM_Resolve((void *)this,Contained,_set_name)
					((Contained *)(void *)this,ev,name);
		};
		inline Identifier _get_name(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,_get_name)
					((Contained *)(void *)this,ev);
		};
		inline void _set_id(
			Environment *ev,
			/* in */ RepositoryId id)
		{
			SOM_Resolve((void *)this,Contained,_set_id)
					((Contained *)(void *)this,ev,id);
		};
		inline RepositoryId _get_id(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,_get_id)
					((Contained *)(void *)this,ev);
		};
		inline void _set_somModifiers(
			Environment *ev,
			/* in */ Contained_somModifierSeq *somModifiers)
		{
			SOM_Resolve((void *)this,Contained,_set_somModifiers)
					((Contained *)(void *)this,ev,somModifiers);
		};
		inline Contained_somModifierSeq _get_somModifiers(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,_get_somModifiers)
					((Contained *)(void *)this,ev);
		};
		inline Contained_ContainerSeq within(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,within)
					((Contained *)(void *)this,ev);
		};
		inline Contained_Description describe(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Contained,describe)
					((Contained *)(void *)this,ev);
		};
		inline void somInit(
			)
		{
			SOM_Resolve((void *)this,SOMObject,somInit)
					((SOMObject *)(void *)this);
		};
		inline void somUninit(
			)
		{
			SOM_Resolve((void *)this,SOMObject,somUninit)
					((SOMObject *)(void *)this);
		};
		inline void somFree(
			)
		{
			SOM_Resolve((void *)this,SOMObject,somFree)
					((SOMObject *)(void *)this);
		};
		inline SOMClass * somGetClass(
			)
		{
			return SOM_Resolve((void *)this,SOMObject,somGetClass)
					((SOMObject *)(void *)this);
		};
		inline string somGetClassName(
			)
		{
			return SOM_Resolve((void *)this,SOMObject,somGetClassName)
					((SOMObject *)(void *)this);
		};
		inline long somGetSize(
			)
		{
			return SOM_Resolve((void *)this,SOMObject,somGetSize)
					((SOMObject *)(void *)this);
		};
		inline boolean somIsA(
			/* in */ SOMClass * aClassObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somIsA)
					((SOMObject *)(void *)this,aClassObj);
		};
		inline boolean somIsInstanceOf(
			/* in */ SOMClass * aClassObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somIsInstanceOf)
					((SOMObject *)(void *)this,aClassObj);
		};
		inline boolean somRespondsTo(
			/* in */ somId mId)
		{
			return SOM_Resolve((void *)this,SOMObject,somRespondsTo)
					((SOMObject *)(void *)this,mId);
		};
		inline boolean SOMObject_somDispatch(
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap)
		{
			return SOM_Resolve((void *)this,SOMObject,somDispatch)
					((SOMObject *)(void *)this,retValue,methodId,ap);
		};
		inline boolean somDispatch(
				somToken *retValue,
				somId methodId,
				...)
		{
			boolean _somC_result;
			va_list ap;
			va_start(ap,methodId);
			_somC_result=SOM_Resolve(this,SOMObject,somDispatch)
					((SOMObject *)(void *)this,retValue,methodId,ap);
			va_end(ap);
			return _somC_result;
		};
		inline boolean SOMObject_somClassDispatch(
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap)
		{
			return SOM_Resolve((void *)this,SOMObject,somClassDispatch)
					((SOMObject *)(void *)this,clsObj,retValue,methodId,ap);
		};
		inline boolean somClassDispatch(
				SOMClass * clsObj,
				somToken *retValue,
				somId methodId,
				...)
		{
			boolean _somC_result;
			va_list ap;
			va_start(ap,methodId);
			_somC_result=SOM_Resolve(this,SOMObject,somClassDispatch)
					((SOMObject *)(void *)this,clsObj,retValue,methodId,ap);
			va_end(ap);
			return _somC_result;
		};
		inline boolean somCastObj(
			/* in */ SOMClass * castedCls)
		{
			return SOM_Resolve((void *)this,SOMObject,somCastObj)
					((SOMObject *)(void *)this,castedCls);
		};
		inline boolean somResetObj(
			)
		{
			return SOM_Resolve((void *)this,SOMObject,somResetObj)
					((SOMObject *)(void *)this);
		};
		inline SOMObject * somPrintSelf(
			)
		{
			return SOM_Resolve((void *)this,SOMObject,somPrintSelf)
					((SOMObject *)(void *)this);
		};
		inline void somDumpSelf(
			/* in */ long level)
		{
			SOM_Resolve((void *)this,SOMObject,somDumpSelf)
					((SOMObject *)(void *)this,level);
		};
		inline void somDumpSelfInt(
			/* in */ long level)
		{
			SOM_Resolve((void *)this,SOMObject,somDumpSelfInt)
					((SOMObject *)(void *)this,level);
		};
		inline void somDefaultInit(
			/* inout */ somInitCtrl *ctrl)
		{
			SOM_Resolve((void *)this,SOMObject,somDefaultInit)
					((SOMObject *)(void *)this,ctrl);
		};
		inline void somDefaultCopyInit(
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			SOM_Resolve((void *)this,SOMObject,somDefaultCopyInit)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline void somDefaultConstCopyInit(
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			SOM_Resolve((void *)this,SOMObject,somDefaultConstCopyInit)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline void somDefaultVCopyInit(
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			SOM_Resolve((void *)this,SOMObject,somDefaultVCopyInit)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline void somDefaultConstVCopyInit(
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			SOM_Resolve((void *)this,SOMObject,somDefaultConstVCopyInit)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline SOMObject * somDefaultAssign(
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somDefaultAssign)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline SOMObject * somDefaultConstAssign(
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somDefaultConstAssign)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline SOMObject * somDefaultVAssign(
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somDefaultVAssign)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline SOMObject * somDefaultConstVAssign(
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj)
		{
			return SOM_Resolve((void *)this,SOMObject,somDefaultConstVAssign)
					((SOMObject *)(void *)this,ctrl,fromObj);
		};
		inline void somDestruct(
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl)
		{
			SOM_Resolve((void *)this,SOMObject,somDestruct)
					((SOMObject *)(void *)this,doFree,ctrl);
		};
		inline Container_ContainedSeq contents(
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited)
		{
			return SOM_Resolve((void *)this,Container,contents)
					((Container *)(void *)this,ev,limit_type,exclude_inherited);
		};
		inline Container_ContainedSeq lookup_name(
			Environment *ev,
			/* in */ Identifier search_name,
			/* in */ long levels_to_search,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited)
		{
			return SOM_Resolve((void *)this,Container,lookup_name)
					((Container *)(void *)this,ev,search_name,levels_to_search,limit_type,exclude_inherited);
		};
		inline Container_ContainerDescriptionSeq describe_contents(
			Environment *ev,
			/* in */ Container_InterfaceName limit_type,
			/* in */ boolean exclude_inherited,
			/* in */ long max_returned_objs)
		{
			return SOM_Resolve((void *)this,Container,describe_contents)
					((Container *)(void *)this,ev,limit_type,exclude_inherited,max_returned_objs);
		};
	};
#endif /* SOM_Module_moduledf_Header_xh */
