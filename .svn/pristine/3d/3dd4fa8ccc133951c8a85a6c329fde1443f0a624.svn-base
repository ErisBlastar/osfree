/* generated from naming.idl */
/* internal conditional is SOM_Module_naming_Source */
#ifndef SOM_Module_naming_Header_xh
	#define SOM_Module_naming_Header_xh 1
	#include <som.xh>
	#include <somobj.xh>
		class CosNaming_BindingIterator;
		#ifndef _IDL_SEQUENCE_CosNaming_BindingIterator_defined
			#define _IDL_SEQUENCE_CosNaming_BindingIterator_defined
			SOM_SEQUENCE_TYPEDEF_NAME(CosNaming_BindingIterator * ,sequence(CosNaming_BindingIterator));
		#endif /* _IDL_SEQUENCE_CosNaming_BindingIterator_defined */
		class CosNaming_NamingContext;
		#ifndef _IDL_SEQUENCE_CosNaming_NamingContext_defined
			#define _IDL_SEQUENCE_CosNaming_NamingContext_defined
			SOM_SEQUENCE_TYPEDEF_NAME(CosNaming_NamingContext * ,sequence(CosNaming_NamingContext));
		#endif /* _IDL_SEQUENCE_CosNaming_NamingContext_defined */
		class CosNaming_NamingContextExt;
		#ifndef _IDL_SEQUENCE_CosNaming_NamingContextExt_defined
			#define _IDL_SEQUENCE_CosNaming_NamingContextExt_defined
			SOM_SEQUENCE_TYPEDEF_NAME(CosNaming_NamingContextExt * ,sequence(CosNaming_NamingContextExt));
		#endif /* _IDL_SEQUENCE_CosNaming_NamingContextExt_defined */
		typedef string CosNaming_Istring;
		#ifndef _IDL_SEQUENCE_string_defined
			#define _IDL_SEQUENCE_string_defined
			SOM_SEQUENCE_TYPEDEF(string);
		#endif /* _IDL_SEQUENCE_string_defined */
		typedef struct CosNaming_NameComponent
		{
			CosNaming_Istring id;
			CosNaming_Istring kind;
		} CosNaming_NameComponent;
		#ifndef _IDL_SEQUENCE_CosNaming_NameComponent_defined
			#define _IDL_SEQUENCE_CosNaming_NameComponent_defined
			SOM_SEQUENCE_TYPEDEF(CosNaming_NameComponent);
		#endif /* _IDL_SEQUENCE_CosNaming_NameComponent_defined */
		#ifndef SOM_DONT_USE_SHORT_NAMES
			#ifndef SOMGD_NameComponent
				#if defined(NameComponent)
					#undef NameComponent
					#define SOMGD_NameComponent
				#else
					#define NameComponent CosNaming_NameComponent
				#endif
			#endif /* SOMGD_NameComponent */
		#endif /* SOM_DONT_USE_SHORT_NAMES */
		#ifndef SOM_DONT_USE_SHORT_NAMES
			#ifndef _IDL_SEQUENCE_NameComponent_defined
				#define _IDL_SEQUENCE_NameComponent_defined
				#define _IDL_SEQUENCE_NameComponent _IDL_SEQUENCE_CosNaming_NameComponent
			#endif /* _IDL_SEQUENCE_NameComponent_defined */
		#endif /* SOM_DONT_USE_SHORT_NAMES */
		typedef _IDL_SEQUENCE_CosNaming_NameComponent CosNaming_Name;
		#ifndef _IDL_SEQUENCE_CosNaming_Name_defined
			#define _IDL_SEQUENCE_CosNaming_Name_defined
			SOM_SEQUENCE_TYPEDEF(CosNaming_Name);
		#endif /* _IDL_SEQUENCE_CosNaming_Name_defined */
		#ifndef CosNaming_BindingType_defined
			#define CosNaming_BindingType_defined
			typedef unsigned long CosNaming_BindingType;
			#ifndef CosNaming_nobject
				#define CosNaming_nobject 1UL
			#endif /* CosNaming_nobject */
			#ifndef CosNaming_ncontext
				#define CosNaming_ncontext 2UL
			#endif /* CosNaming_ncontext */
			#ifndef SOM_DONT_USE_SHORT_NAMES
				#ifndef SOMGD_BindingType
					#if defined(BindingType)
						#undef BindingType
						#define SOMGD_BindingType
					#else
						#define BindingType CosNaming_BindingType
					#endif
				#endif /* SOMGD_BindingType */
			#endif /* SOM_DONT_USE_SHORT_NAMES */
		#endif /* CosNaming_BindingType_defined */
		typedef struct CosNaming_Binding
		{
			CosNaming_Name binding_name;
			CosNaming_BindingType binding_type;
		} CosNaming_Binding;
		#ifndef _IDL_SEQUENCE_CosNaming_Binding_defined
			#define _IDL_SEQUENCE_CosNaming_Binding_defined
			SOM_SEQUENCE_TYPEDEF(CosNaming_Binding);
		#endif /* _IDL_SEQUENCE_CosNaming_Binding_defined */
		#ifndef SOM_DONT_USE_SHORT_NAMES
			#ifndef SOMGD_Binding
				#if defined(Binding)
					#undef Binding
					#define SOMGD_Binding
				#else
					#define Binding CosNaming_Binding
				#endif
			#endif /* SOMGD_Binding */
		#endif /* SOM_DONT_USE_SHORT_NAMES */
		#ifndef SOM_DONT_USE_SHORT_NAMES
			#ifndef _IDL_SEQUENCE_Binding_defined
				#define _IDL_SEQUENCE_Binding_defined
				#define _IDL_SEQUENCE_Binding _IDL_SEQUENCE_CosNaming_Binding
			#endif /* _IDL_SEQUENCE_Binding_defined */
		#endif /* SOM_DONT_USE_SHORT_NAMES */
		typedef _IDL_SEQUENCE_CosNaming_Binding CosNaming_BindingList;
		#ifndef _IDL_SEQUENCE_CosNaming_BindingList_defined
			#define _IDL_SEQUENCE_CosNaming_BindingList_defined
			SOM_SEQUENCE_TYPEDEF(CosNaming_BindingList);
		#endif /* _IDL_SEQUENCE_CosNaming_BindingList_defined */
#ifndef CosNaming_BindingIterator_API
#define CosNaming_BindingIterator_API
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_next_one)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev,
				/* out */ CosNaming_Binding *b);
			#pragma linkage(somTP_CosNaming_BindingIterator_next_one,system)
			typedef somTP_CosNaming_BindingIterator_next_one *somTD_CosNaming_BindingIterator_next_one;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_next_one)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev,
				/* out */ CosNaming_Binding *b);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_next_n)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl);
			#pragma linkage(somTP_CosNaming_BindingIterator_next_n,system)
			typedef somTP_CosNaming_BindingIterator_next_n *somTD_CosNaming_BindingIterator_next_n;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_next_n)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_destroy)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev);
			#pragma linkage(somTP_CosNaming_BindingIterator_destroy,system)
			typedef somTP_CosNaming_BindingIterator_destroy *somTD_CosNaming_BindingIterator_destroy;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_destroy)(
				CosNaming_BindingIterator * somSelf,
				Environment *ev);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somInit)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somInit,system)
			typedef somTP_CosNaming_BindingIterator_somInit *somTD_CosNaming_BindingIterator_somInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somInit)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somUninit)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somUninit,system)
			typedef somTP_CosNaming_BindingIterator_somUninit *somTD_CosNaming_BindingIterator_somUninit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somUninit)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somFree)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somFree,system)
			typedef somTP_CosNaming_BindingIterator_somFree *somTD_CosNaming_BindingIterator_somFree;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somFree)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMClass * (somTP_CosNaming_BindingIterator_somGetClass)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somGetClass,system)
			typedef somTP_CosNaming_BindingIterator_somGetClass *somTD_CosNaming_BindingIterator_somGetClass;
		#else /* __IBMC__ */
			typedef SOMClass * (SOMLINK * somTD_CosNaming_BindingIterator_somGetClass)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef string (somTP_CosNaming_BindingIterator_somGetClassName)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somGetClassName,system)
			typedef somTP_CosNaming_BindingIterator_somGetClassName *somTD_CosNaming_BindingIterator_somGetClassName;
		#else /* __IBMC__ */
			typedef string (SOMLINK * somTD_CosNaming_BindingIterator_somGetClassName)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef long (somTP_CosNaming_BindingIterator_somGetSize)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somGetSize,system)
			typedef somTP_CosNaming_BindingIterator_somGetSize *somTD_CosNaming_BindingIterator_somGetSize;
		#else /* __IBMC__ */
			typedef long (SOMLINK * somTD_CosNaming_BindingIterator_somGetSize)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somIsA)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somIsA,system)
			typedef somTP_CosNaming_BindingIterator_somIsA *somTD_CosNaming_BindingIterator_somIsA;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somIsA)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somIsInstanceOf)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somIsInstanceOf,system)
			typedef somTP_CosNaming_BindingIterator_somIsInstanceOf *somTD_CosNaming_BindingIterator_somIsInstanceOf;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somIsInstanceOf)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somRespondsTo)(
				CosNaming_BindingIterator * somSelf,
				/* in */ somId mId);
			#pragma linkage(somTP_CosNaming_BindingIterator_somRespondsTo,system)
			typedef somTP_CosNaming_BindingIterator_somRespondsTo *somTD_CosNaming_BindingIterator_somRespondsTo;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somRespondsTo)(
				CosNaming_BindingIterator * somSelf,
				/* in */ somId mId);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somDispatch)(
				CosNaming_BindingIterator * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDispatch,system)
			typedef somTP_CosNaming_BindingIterator_somDispatch *somTD_CosNaming_BindingIterator_somDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somDispatch)(
				CosNaming_BindingIterator * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somClassDispatch)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_BindingIterator_somClassDispatch,system)
			typedef somTP_CosNaming_BindingIterator_somClassDispatch *somTD_CosNaming_BindingIterator_somClassDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somClassDispatch)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somCastObj)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * castedCls);
			#pragma linkage(somTP_CosNaming_BindingIterator_somCastObj,system)
			typedef somTP_CosNaming_BindingIterator_somCastObj *somTD_CosNaming_BindingIterator_somCastObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somCastObj)(
				CosNaming_BindingIterator * somSelf,
				/* in */ SOMClass * castedCls);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_BindingIterator_somResetObj)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somResetObj,system)
			typedef somTP_CosNaming_BindingIterator_somResetObj *somTD_CosNaming_BindingIterator_somResetObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_BindingIterator_somResetObj)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_BindingIterator_somPrintSelf)(
				CosNaming_BindingIterator * somSelf);
			#pragma linkage(somTP_CosNaming_BindingIterator_somPrintSelf,system)
			typedef somTP_CosNaming_BindingIterator_somPrintSelf *somTD_CosNaming_BindingIterator_somPrintSelf;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_BindingIterator_somPrintSelf)(
				CosNaming_BindingIterator * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDumpSelf)(
				CosNaming_BindingIterator * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDumpSelf,system)
			typedef somTP_CosNaming_BindingIterator_somDumpSelf *somTD_CosNaming_BindingIterator_somDumpSelf;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDumpSelf)(
				CosNaming_BindingIterator * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDumpSelfInt)(
				CosNaming_BindingIterator * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDumpSelfInt,system)
			typedef somTP_CosNaming_BindingIterator_somDumpSelfInt *somTD_CosNaming_BindingIterator_somDumpSelfInt;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDumpSelfInt)(
				CosNaming_BindingIterator * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDefaultInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultInit,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultInit *somTD_CosNaming_BindingIterator_somDefaultInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDefaultCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultCopyInit,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultCopyInit *somTD_CosNaming_BindingIterator_somDefaultCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDefaultConstCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultConstCopyInit,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultConstCopyInit *somTD_CosNaming_BindingIterator_somDefaultConstCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultConstCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDefaultVCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultVCopyInit,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultVCopyInit *somTD_CosNaming_BindingIterator_somDefaultVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultVCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDefaultConstVCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultConstVCopyInit,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultConstVCopyInit *somTD_CosNaming_BindingIterator_somDefaultConstVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultConstVCopyInit)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_BindingIterator_somDefaultAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultAssign,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultAssign *somTD_CosNaming_BindingIterator_somDefaultAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_BindingIterator_somDefaultConstAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultConstAssign,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultConstAssign *somTD_CosNaming_BindingIterator_somDefaultConstAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultConstAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_BindingIterator_somDefaultVAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultVAssign,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultVAssign *somTD_CosNaming_BindingIterator_somDefaultVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultVAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_BindingIterator_somDefaultConstVAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDefaultConstVAssign,system)
			typedef somTP_CosNaming_BindingIterator_somDefaultConstVAssign *somTD_CosNaming_BindingIterator_somDefaultConstVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_BindingIterator_somDefaultConstVAssign)(
				CosNaming_BindingIterator * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_BindingIterator_somDestruct)(
				CosNaming_BindingIterator * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_BindingIterator_somDestruct,system)
			typedef somTP_CosNaming_BindingIterator_somDestruct *somTD_CosNaming_BindingIterator_somDestruct;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_BindingIterator_somDestruct)(
				CosNaming_BindingIterator * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
		#ifndef CosNaming_BindingIterator_MajorVersion
			#define CosNaming_BindingIterator_MajorVersion   3
		#endif /* CosNaming_BindingIterator_MajorVersion */
		#ifndef CosNaming_BindingIterator_MinorVersion
			#define CosNaming_BindingIterator_MinorVersion   0
		#endif /* CosNaming_BindingIterator_MinorVersion */
		typedef struct CosNaming_BindingIteratorClassDataStructure
		{
			SOMClass * classObject;
			somMToken next_one;
			somMToken next_n;
			somMToken destroy;
		} CosNaming_BindingIteratorClassDataStructure;
		typedef struct CosNaming_BindingIteratorCClassDataStructure
		{
			somMethodTabs parentMtab;
			somDToken instanceDataToken;
		} CosNaming_BindingIteratorCClassDataStructure;
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_BindingIterator_Class_Source)
				SOMEXTERN struct CosNaming_BindingIteratorClassDataStructure _CosNaming_BindingIteratorClassData;
				#ifndef CosNaming_BindingIteratorClassData
					#define CosNaming_BindingIteratorClassData    _CosNaming_BindingIteratorClassData
				#endif /* CosNaming_BindingIteratorClassData */
			#else
				SOMEXTERN struct CosNaming_BindingIteratorClassDataStructure * SOMLINK resolve_CosNaming_BindingIteratorClassData(void);
				#ifndef CosNaming_BindingIteratorClassData
					#define CosNaming_BindingIteratorClassData    (*(resolve_CosNaming_BindingIteratorClassData()))
				#endif /* CosNaming_BindingIteratorClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_BindingIterator_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
			struct CosNaming_BindingIteratorClassDataStructure SOMDLINK CosNaming_BindingIteratorClassData;
		#endif /* SOM_RESOLVE_DATA */
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_BindingIterator_Class_Source)
				SOMEXTERN struct CosNaming_BindingIteratorCClassDataStructure _CosNaming_BindingIteratorCClassData;
				#ifndef CosNaming_BindingIteratorCClassData
					#define CosNaming_BindingIteratorCClassData    _CosNaming_BindingIteratorCClassData
				#endif /* CosNaming_BindingIteratorCClassData */
			#else
				SOMEXTERN struct CosNaming_BindingIteratorCClassDataStructure * SOMLINK resolve_CosNaming_BindingIteratorCClassData(void);
				#ifndef CosNaming_BindingIteratorCClassData
					#define CosNaming_BindingIteratorCClassData    (*(resolve_CosNaming_BindingIteratorCClassData()))
				#endif /* CosNaming_BindingIteratorCClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_BindingIterator_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
			struct CosNaming_BindingIteratorCClassDataStructure SOMDLINK CosNaming_BindingIteratorCClassData;
		#endif /* SOM_RESOLVE_DATA */
		extern "C" {
		extern 
		#if defined(SOM_Module_naming_Source) || defined(CosNaming_BindingIterator_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_naming_Source || CosNaming_BindingIterator_Class_Source */
		SOMClass * SOMLINK CosNaming_BindingIteratorNewClass
				(integer4 somtmajorVersion,integer4 somtminorVersion);
		}
		#define _SOMCLASS_CosNaming_BindingIterator (CosNaming_BindingIteratorClassData.classObject)
		#ifndef SOMGD_CosNaming_BindingIterator
			#if (defined(_CosNaming_BindingIterator) || defined(__CosNaming_BindingIterator))
				#undef _CosNaming_BindingIterator
				#undef __CosNaming_BindingIterator
				#define SOMGD_CosNaming_BindingIterator 1
			#else
				#define _CosNaming_BindingIterator _SOMCLASS_CosNaming_BindingIterator
			#endif /* _CosNaming_BindingIterator */
		#endif /* SOMGD_CosNaming_BindingIterator */
		#define CosNaming_BindingIterator_classObj _SOMCLASS_CosNaming_BindingIterator
		#define _SOMMTOKEN_CosNaming_BindingIterator(method) ((somMToken)(CosNaming_BindingIteratorClassData.method))
#endif /* CosNaming_BindingIterator_API */

		class CosNaming_BindingIterator : public SOMObject
		{
		protected:
			CosNaming_BindingIterator(somMethodTab & mtab)
				: SOMObject(mtab)
			{}
		public:

			inline boolean next_one(
			Environment *ev,
			/* out */ CosNaming_Binding *b)
			{
				return SOM_Resolve((void *)this,CosNaming_BindingIterator,next_one)
						((CosNaming_BindingIterator *)(void *)this,ev,b);
			};

			inline boolean next_n(
			Environment *ev,
			/* in */ unsigned long how_many,
			/* out */ CosNaming_BindingList *bl)
			{
				return SOM_Resolve((void *)this,CosNaming_BindingIterator,next_n)
						((CosNaming_BindingIterator *)(void *)this,ev,how_many,bl);
			};

			inline void destroy(
			Environment *ev)
			{
				SOM_Resolve((void *)this,CosNaming_BindingIterator,destroy)
						((CosNaming_BindingIterator *)(void *)this,ev);
			};

			inline void operator delete(void *x)
				{ ((SOMObject *)x)->somFree(); };

			inline void * operator new(size_t /* len */)
			{ if (!CosNaming_BindingIteratorClassData.classObject)
				{ CosNaming_BindingIteratorNewClass(CosNaming_BindingIterator_MajorVersion,CosNaming_BindingIterator_MinorVersion); }
				return (void *)SOM_Resolve((SOMObject *)(void *)CosNaming_BindingIteratorClassData.classObject,
					SOMClass,somNewNoInit)((SOMClass *)(void *)CosNaming_BindingIteratorClassData.classObject);
			};
			CosNaming_BindingIterator()
				: SOMObject(*(CosNaming_BindingIteratorCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_BindingIteratorCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultInit(0); }
			CosNaming_BindingIterator(CosNaming_BindingIterator *fromObj)
				: SOMObject(*(CosNaming_BindingIteratorCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_BindingIteratorCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
		};
#ifndef CosNaming_NamingContext_API
#define CosNaming_NamingContext_API
		#ifndef CosNaming_NamingContext_NotFoundReason_defined
			#define CosNaming_NamingContext_NotFoundReason_defined
			typedef unsigned long CosNaming_NamingContext_NotFoundReason;
			#ifndef CosNaming_NamingContext_missing_node
				#define CosNaming_NamingContext_missing_node 1UL
			#endif /* CosNaming_NamingContext_missing_node */
			#ifndef CosNaming_NamingContext_not_context
				#define CosNaming_NamingContext_not_context 2UL
			#endif /* CosNaming_NamingContext_not_context */
			#ifndef CosNaming_NamingContext_not_object
				#define CosNaming_NamingContext_not_object 3UL
			#endif /* CosNaming_NamingContext_not_object */
			#ifndef SOM_DONT_USE_SHORT_NAMES
				#ifndef SOMGD_NotFoundReason
					#if defined(NotFoundReason)
						#undef NotFoundReason
						#define SOMGD_NotFoundReason
					#else
						#define NotFoundReason CosNaming_NamingContext_NotFoundReason
					#endif
				#endif /* SOMGD_NotFoundReason */
			#endif /* SOM_DONT_USE_SHORT_NAMES */
		#endif /* CosNaming_NamingContext_NotFoundReason_defined */
#define ex_CosNaming_NamingContext_NotFound   "::CosNaming::NamingContext::NotFound"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_NotFound
#ifndef ex_NotFound
#define ex_NotFound  ex_CosNaming_NamingContext_NotFound
#else
#define SOMTGD_ex_NotFound
#undef ex_NotFound
#endif /* ex_NotFound */
#endif /* SOMTGD_ex_NotFound */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContext_NotFound
{
	CosNaming_NamingContext_NotFoundReason why;
	CosNaming_Name rest_of_name;
} CosNaming_NamingContext_NotFound;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_NotFound
		#if defined(NotFound)
			#undef NotFound
			#define SOMGD_NotFound
		#else
			#define NotFound CosNaming_NamingContext_NotFound
		#endif
	#endif /* SOMGD_NotFound */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_CosNaming_NamingContext_CannotProceed   "::CosNaming::NamingContext::CannotProceed"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_CannotProceed
#ifndef ex_CannotProceed
#define ex_CannotProceed  ex_CosNaming_NamingContext_CannotProceed
#else
#define SOMTGD_ex_CannotProceed
#undef ex_CannotProceed
#endif /* ex_CannotProceed */
#endif /* SOMTGD_ex_CannotProceed */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContext_CannotProceed
{
	CosNaming_NamingContext * cxt;
	CosNaming_Name rest_of_name;
} CosNaming_NamingContext_CannotProceed;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_CannotProceed
		#if defined(CannotProceed)
			#undef CannotProceed
			#define SOMGD_CannotProceed
		#else
			#define CannotProceed CosNaming_NamingContext_CannotProceed
		#endif
	#endif /* SOMGD_CannotProceed */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_CosNaming_NamingContext_InvalidName   "::CosNaming::NamingContext::InvalidName"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_InvalidName
#ifndef ex_InvalidName
#define ex_InvalidName  ex_CosNaming_NamingContext_InvalidName
#else
#define SOMTGD_ex_InvalidName
#undef ex_InvalidName
#endif /* ex_InvalidName */
#endif /* SOMTGD_ex_InvalidName */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContext_InvalidName
{
	CosNaming_Name name;
} CosNaming_NamingContext_InvalidName;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_InvalidName
		#if defined(InvalidName)
			#undef InvalidName
			#define SOMGD_InvalidName
		#else
			#define InvalidName CosNaming_NamingContext_InvalidName
		#endif
	#endif /* SOMGD_InvalidName */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_CosNaming_NamingContext_AlreadyBound   "::CosNaming::NamingContext::AlreadyBound"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_AlreadyBound
#ifndef ex_AlreadyBound
#define ex_AlreadyBound  ex_CosNaming_NamingContext_AlreadyBound
#else
#define SOMTGD_ex_AlreadyBound
#undef ex_AlreadyBound
#endif /* ex_AlreadyBound */
#endif /* SOMTGD_ex_AlreadyBound */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContext_AlreadyBound CosNaming_NamingContext_AlreadyBound;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_AlreadyBound
		#if defined(AlreadyBound)
			#undef AlreadyBound
			#define SOMGD_AlreadyBound
		#else
			#define AlreadyBound CosNaming_NamingContext_AlreadyBound
		#endif
	#endif /* SOMGD_AlreadyBound */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_CosNaming_NamingContext_NotEmpty   "::CosNaming::NamingContext::NotEmpty"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_NotEmpty
#ifndef ex_NotEmpty
#define ex_NotEmpty  ex_CosNaming_NamingContext_NotEmpty
#else
#define SOMTGD_ex_NotEmpty
#undef ex_NotEmpty
#endif /* ex_NotEmpty */
#endif /* SOMTGD_ex_NotEmpty */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContext_NotEmpty CosNaming_NamingContext_NotEmpty;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_NotEmpty
		#if defined(NotEmpty)
			#undef NotEmpty
			#define SOMGD_NotEmpty
		#else
			#define NotEmpty CosNaming_NamingContext_NotEmpty
		#endif
	#endif /* SOMGD_NotEmpty */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_bind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
			#pragma linkage(somTP_CosNaming_NamingContext_bind,system)
			typedef somTP_CosNaming_NamingContext_bind *somTD_CosNaming_NamingContext_bind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_bind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_rebind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
			#pragma linkage(somTP_CosNaming_NamingContext_rebind,system)
			typedef somTP_CosNaming_NamingContext_rebind *somTD_CosNaming_NamingContext_rebind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_rebind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_bind_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
			#pragma linkage(somTP_CosNaming_NamingContext_bind_context,system)
			typedef somTP_CosNaming_NamingContext_bind_context *somTD_CosNaming_NamingContext_bind_context;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_bind_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_rebind_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
			#pragma linkage(somTP_CosNaming_NamingContext_rebind_context,system)
			typedef somTP_CosNaming_NamingContext_rebind_context *somTD_CosNaming_NamingContext_rebind_context;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_rebind_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_resolve)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContext_resolve,system)
			typedef somTP_CosNaming_NamingContext_resolve *somTD_CosNaming_NamingContext_resolve;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_resolve)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_unbind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContext_unbind,system)
			typedef somTP_CosNaming_NamingContext_unbind *somTD_CosNaming_NamingContext_unbind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_unbind)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContext * (somTP_CosNaming_NamingContext_new_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev);
			#pragma linkage(somTP_CosNaming_NamingContext_new_context,system)
			typedef somTP_CosNaming_NamingContext_new_context *somTD_CosNaming_NamingContext_new_context;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContext * (SOMLINK * somTD_CosNaming_NamingContext_new_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContext * (somTP_CosNaming_NamingContext_bind_new_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContext_bind_new_context,system)
			typedef somTP_CosNaming_NamingContext_bind_new_context *somTD_CosNaming_NamingContext_bind_new_context;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContext * (SOMLINK * somTD_CosNaming_NamingContext_bind_new_context)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_destroy)(
				CosNaming_NamingContext * somSelf,
				Environment *ev);
			#pragma linkage(somTP_CosNaming_NamingContext_destroy,system)
			typedef somTP_CosNaming_NamingContext_destroy *somTD_CosNaming_NamingContext_destroy;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_destroy)(
				CosNaming_NamingContext * somSelf,
				Environment *ev);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_list)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl,
				/* out */ CosNaming_BindingIterator * *bi);
			#pragma linkage(somTP_CosNaming_NamingContext_list,system)
			typedef somTP_CosNaming_NamingContext_list *somTD_CosNaming_NamingContext_list;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_list)(
				CosNaming_NamingContext * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl,
				/* out */ CosNaming_BindingIterator * *bi);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somInit)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somInit,system)
			typedef somTP_CosNaming_NamingContext_somInit *somTD_CosNaming_NamingContext_somInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somInit)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somUninit)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somUninit,system)
			typedef somTP_CosNaming_NamingContext_somUninit *somTD_CosNaming_NamingContext_somUninit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somUninit)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somFree)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somFree,system)
			typedef somTP_CosNaming_NamingContext_somFree *somTD_CosNaming_NamingContext_somFree;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somFree)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMClass * (somTP_CosNaming_NamingContext_somGetClass)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somGetClass,system)
			typedef somTP_CosNaming_NamingContext_somGetClass *somTD_CosNaming_NamingContext_somGetClass;
		#else /* __IBMC__ */
			typedef SOMClass * (SOMLINK * somTD_CosNaming_NamingContext_somGetClass)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef string (somTP_CosNaming_NamingContext_somGetClassName)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somGetClassName,system)
			typedef somTP_CosNaming_NamingContext_somGetClassName *somTD_CosNaming_NamingContext_somGetClassName;
		#else /* __IBMC__ */
			typedef string (SOMLINK * somTD_CosNaming_NamingContext_somGetClassName)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef long (somTP_CosNaming_NamingContext_somGetSize)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somGetSize,system)
			typedef somTP_CosNaming_NamingContext_somGetSize *somTD_CosNaming_NamingContext_somGetSize;
		#else /* __IBMC__ */
			typedef long (SOMLINK * somTD_CosNaming_NamingContext_somGetSize)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somIsA)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somIsA,system)
			typedef somTP_CosNaming_NamingContext_somIsA *somTD_CosNaming_NamingContext_somIsA;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somIsA)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somIsInstanceOf)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somIsInstanceOf,system)
			typedef somTP_CosNaming_NamingContext_somIsInstanceOf *somTD_CosNaming_NamingContext_somIsInstanceOf;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somIsInstanceOf)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somRespondsTo)(
				CosNaming_NamingContext * somSelf,
				/* in */ somId mId);
			#pragma linkage(somTP_CosNaming_NamingContext_somRespondsTo,system)
			typedef somTP_CosNaming_NamingContext_somRespondsTo *somTD_CosNaming_NamingContext_somRespondsTo;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somRespondsTo)(
				CosNaming_NamingContext * somSelf,
				/* in */ somId mId);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somDispatch)(
				CosNaming_NamingContext * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_NamingContext_somDispatch,system)
			typedef somTP_CosNaming_NamingContext_somDispatch *somTD_CosNaming_NamingContext_somDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somDispatch)(
				CosNaming_NamingContext * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somClassDispatch)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_NamingContext_somClassDispatch,system)
			typedef somTP_CosNaming_NamingContext_somClassDispatch *somTD_CosNaming_NamingContext_somClassDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somClassDispatch)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somCastObj)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * castedCls);
			#pragma linkage(somTP_CosNaming_NamingContext_somCastObj,system)
			typedef somTP_CosNaming_NamingContext_somCastObj *somTD_CosNaming_NamingContext_somCastObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somCastObj)(
				CosNaming_NamingContext * somSelf,
				/* in */ SOMClass * castedCls);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContext_somResetObj)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somResetObj,system)
			typedef somTP_CosNaming_NamingContext_somResetObj *somTD_CosNaming_NamingContext_somResetObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContext_somResetObj)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_somPrintSelf)(
				CosNaming_NamingContext * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContext_somPrintSelf,system)
			typedef somTP_CosNaming_NamingContext_somPrintSelf *somTD_CosNaming_NamingContext_somPrintSelf;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_somPrintSelf)(
				CosNaming_NamingContext * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDumpSelf)(
				CosNaming_NamingContext * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_NamingContext_somDumpSelf,system)
			typedef somTP_CosNaming_NamingContext_somDumpSelf *somTD_CosNaming_NamingContext_somDumpSelf;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDumpSelf)(
				CosNaming_NamingContext * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDumpSelfInt)(
				CosNaming_NamingContext * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_NamingContext_somDumpSelfInt,system)
			typedef somTP_CosNaming_NamingContext_somDumpSelfInt *somTD_CosNaming_NamingContext_somDumpSelfInt;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDumpSelfInt)(
				CosNaming_NamingContext * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDefaultInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultInit,system)
			typedef somTP_CosNaming_NamingContext_somDefaultInit *somTD_CosNaming_NamingContext_somDefaultInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDefaultInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDefaultCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultCopyInit,system)
			typedef somTP_CosNaming_NamingContext_somDefaultCopyInit *somTD_CosNaming_NamingContext_somDefaultCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDefaultCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDefaultConstCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultConstCopyInit,system)
			typedef somTP_CosNaming_NamingContext_somDefaultConstCopyInit *somTD_CosNaming_NamingContext_somDefaultConstCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDefaultConstCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDefaultVCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultVCopyInit,system)
			typedef somTP_CosNaming_NamingContext_somDefaultVCopyInit *somTD_CosNaming_NamingContext_somDefaultVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDefaultVCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDefaultConstVCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultConstVCopyInit,system)
			typedef somTP_CosNaming_NamingContext_somDefaultConstVCopyInit *somTD_CosNaming_NamingContext_somDefaultConstVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDefaultConstVCopyInit)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_somDefaultAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultAssign,system)
			typedef somTP_CosNaming_NamingContext_somDefaultAssign *somTD_CosNaming_NamingContext_somDefaultAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_somDefaultAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_somDefaultConstAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultConstAssign,system)
			typedef somTP_CosNaming_NamingContext_somDefaultConstAssign *somTD_CosNaming_NamingContext_somDefaultConstAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_somDefaultConstAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_somDefaultVAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultVAssign,system)
			typedef somTP_CosNaming_NamingContext_somDefaultVAssign *somTD_CosNaming_NamingContext_somDefaultVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_somDefaultVAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContext_somDefaultConstVAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContext_somDefaultConstVAssign,system)
			typedef somTP_CosNaming_NamingContext_somDefaultConstVAssign *somTD_CosNaming_NamingContext_somDefaultConstVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContext_somDefaultConstVAssign)(
				CosNaming_NamingContext * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContext_somDestruct)(
				CosNaming_NamingContext * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_NamingContext_somDestruct,system)
			typedef somTP_CosNaming_NamingContext_somDestruct *somTD_CosNaming_NamingContext_somDestruct;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContext_somDestruct)(
				CosNaming_NamingContext * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
		#ifndef CosNaming_NamingContext_MajorVersion
			#define CosNaming_NamingContext_MajorVersion   3
		#endif /* CosNaming_NamingContext_MajorVersion */
		#ifndef CosNaming_NamingContext_MinorVersion
			#define CosNaming_NamingContext_MinorVersion   0
		#endif /* CosNaming_NamingContext_MinorVersion */
		typedef struct CosNaming_NamingContextClassDataStructure
		{
			SOMClass * classObject;
			somMToken bind;
			somMToken rebind;
			somMToken bind_context;
			somMToken rebind_context;
			somMToken resolve;
			somMToken unbind;
			somMToken new_context;
			somMToken bind_new_context;
			somMToken destroy;
			somMToken list;
			somMToken private10;
		} CosNaming_NamingContextClassDataStructure;
		typedef struct CosNaming_NamingContextCClassDataStructure
		{
			somMethodTabs parentMtab;
			somDToken instanceDataToken;
		} CosNaming_NamingContextCClassDataStructure;
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContext_Class_Source)
				SOMEXTERN struct CosNaming_NamingContextClassDataStructure _CosNaming_NamingContextClassData;
				#ifndef CosNaming_NamingContextClassData
					#define CosNaming_NamingContextClassData    _CosNaming_NamingContextClassData
				#endif /* CosNaming_NamingContextClassData */
			#else
				SOMEXTERN struct CosNaming_NamingContextClassDataStructure * SOMLINK resolve_CosNaming_NamingContextClassData(void);
				#ifndef CosNaming_NamingContextClassData
					#define CosNaming_NamingContextClassData    (*(resolve_CosNaming_NamingContextClassData()))
				#endif /* CosNaming_NamingContextClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContext_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
			struct CosNaming_NamingContextClassDataStructure SOMDLINK CosNaming_NamingContextClassData;
		#endif /* SOM_RESOLVE_DATA */
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContext_Class_Source)
				SOMEXTERN struct CosNaming_NamingContextCClassDataStructure _CosNaming_NamingContextCClassData;
				#ifndef CosNaming_NamingContextCClassData
					#define CosNaming_NamingContextCClassData    _CosNaming_NamingContextCClassData
				#endif /* CosNaming_NamingContextCClassData */
			#else
				SOMEXTERN struct CosNaming_NamingContextCClassDataStructure * SOMLINK resolve_CosNaming_NamingContextCClassData(void);
				#ifndef CosNaming_NamingContextCClassData
					#define CosNaming_NamingContextCClassData    (*(resolve_CosNaming_NamingContextCClassData()))
				#endif /* CosNaming_NamingContextCClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContext_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
			struct CosNaming_NamingContextCClassDataStructure SOMDLINK CosNaming_NamingContextCClassData;
		#endif /* SOM_RESOLVE_DATA */
		extern "C" {
		extern 
		#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContext_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_naming_Source || CosNaming_NamingContext_Class_Source */
		SOMClass * SOMLINK CosNaming_NamingContextNewClass
				(integer4 somtmajorVersion,integer4 somtminorVersion);
		}
		#define _SOMCLASS_CosNaming_NamingContext (CosNaming_NamingContextClassData.classObject)
		#ifndef SOMGD_CosNaming_NamingContext
			#if (defined(_CosNaming_NamingContext) || defined(__CosNaming_NamingContext))
				#undef _CosNaming_NamingContext
				#undef __CosNaming_NamingContext
				#define SOMGD_CosNaming_NamingContext 1
			#else
				#define _CosNaming_NamingContext _SOMCLASS_CosNaming_NamingContext
			#endif /* _CosNaming_NamingContext */
		#endif /* SOMGD_CosNaming_NamingContext */
		#define CosNaming_NamingContext_classObj _SOMCLASS_CosNaming_NamingContext
		#define _SOMMTOKEN_CosNaming_NamingContext(method) ((somMToken)(CosNaming_NamingContextClassData.method))
#endif /* CosNaming_NamingContext_API */

		class CosNaming_NamingContext : public SOMObject
		{
		protected:
			CosNaming_NamingContext(somMethodTab & mtab)
				: SOMObject(mtab)
			{}
		public:

			inline void bind(
			Environment *ev,
			/* in */ CosNaming_Name *n,
			/* in */ SOMObject * obj)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,bind)
						((CosNaming_NamingContext *)(void *)this,ev,n,obj);
			};

			inline void rebind(
			Environment *ev,
			/* in */ CosNaming_Name *n,
			/* in */ SOMObject * obj)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,rebind)
						((CosNaming_NamingContext *)(void *)this,ev,n,obj);
			};

			inline void bind_context(
			Environment *ev,
			/* in */ CosNaming_Name *n,
			/* in */ CosNaming_NamingContext * nc)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,bind_context)
						((CosNaming_NamingContext *)(void *)this,ev,n,nc);
			};

			inline void rebind_context(
			Environment *ev,
			/* in */ CosNaming_Name *n,
			/* in */ CosNaming_NamingContext * nc)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,rebind_context)
						((CosNaming_NamingContext *)(void *)this,ev,n,nc);
			};

			inline SOMObject * resolve(
			Environment *ev,
			/* in */ CosNaming_Name *n)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContext,resolve)
						((CosNaming_NamingContext *)(void *)this,ev,n);
			};

			inline void unbind(
			Environment *ev,
			/* in */ CosNaming_Name *n)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,unbind)
						((CosNaming_NamingContext *)(void *)this,ev,n);
			};

			inline CosNaming_NamingContext * new_context(
			Environment *ev)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContext,new_context)
						((CosNaming_NamingContext *)(void *)this,ev);
			};

			inline CosNaming_NamingContext * bind_new_context(
			Environment *ev,
			/* in */ CosNaming_Name *n)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContext,bind_new_context)
						((CosNaming_NamingContext *)(void *)this,ev,n);
			};

			inline void destroy(
			Environment *ev)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,destroy)
						((CosNaming_NamingContext *)(void *)this,ev);
			};

			inline void list(
			Environment *ev,
			/* in */ unsigned long how_many,
			/* out */ CosNaming_BindingList *bl,
			/* out */ CosNaming_BindingIterator * *bi)
			{
				SOM_Resolve((void *)this,CosNaming_NamingContext,list)
						((CosNaming_NamingContext *)(void *)this,ev,how_many,bl,bi);
			};

			inline void operator delete(void *x)
				{ ((SOMObject *)x)->somFree(); };

			inline void * operator new(size_t /* len */)
			{ if (!CosNaming_NamingContextClassData.classObject)
				{ CosNaming_NamingContextNewClass(CosNaming_NamingContext_MajorVersion,CosNaming_NamingContext_MinorVersion); }
				return (void *)SOM_Resolve((SOMObject *)(void *)CosNaming_NamingContextClassData.classObject,
					SOMClass,somNewNoInit)((SOMClass *)(void *)CosNaming_NamingContextClassData.classObject);
			};
			CosNaming_NamingContext()
				: SOMObject(*(CosNaming_NamingContextCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_NamingContextCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultInit(0); }
			CosNaming_NamingContext(CosNaming_NamingContext *fromObj)
				: SOMObject(*(CosNaming_NamingContextCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_NamingContextCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
		};
#ifndef CosNaming_NamingContextExt_API
#define CosNaming_NamingContextExt_API
		typedef string CosNaming_NamingContextExt_StringName;
		typedef string CosNaming_NamingContextExt_Address;
		typedef string CosNaming_NamingContextExt_URLString;
#define ex_CosNaming_NamingContextExt_InvalidAddress   "::CosNaming::NamingContextExt::InvalidAddress"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_InvalidAddress
#ifndef ex_InvalidAddress
#define ex_InvalidAddress  ex_CosNaming_NamingContextExt_InvalidAddress
#else
#define SOMTGD_ex_InvalidAddress
#undef ex_InvalidAddress
#endif /* ex_InvalidAddress */
#endif /* SOMTGD_ex_InvalidAddress */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct CosNaming_NamingContextExt_InvalidAddress CosNaming_NamingContextExt_InvalidAddress;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_InvalidAddress
		#if defined(InvalidAddress)
			#undef InvalidAddress
			#define SOMGD_InvalidAddress
		#else
			#define InvalidAddress CosNaming_NamingContextExt_InvalidAddress
		#endif
	#endif /* SOMGD_InvalidAddress */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContextExt_StringName (somTP_CosNaming_NamingContextExt_to_string)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContextExt_to_string,system)
			typedef somTP_CosNaming_NamingContextExt_to_string *somTD_CosNaming_NamingContextExt_to_string;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContextExt_StringName (SOMLINK * somTD_CosNaming_NamingContextExt_to_string)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_Name (somTP_CosNaming_NamingContextExt_to_name)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_StringName sn);
			#pragma linkage(somTP_CosNaming_NamingContextExt_to_name,system)
			typedef somTP_CosNaming_NamingContextExt_to_name *somTD_CosNaming_NamingContextExt_to_name;
		#else /* __IBMC__ */
			typedef CosNaming_Name (SOMLINK * somTD_CosNaming_NamingContextExt_to_name)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_StringName sn);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContextExt_URLString (somTP_CosNaming_NamingContextExt_to_url)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_Address addr,
				/* in */ CosNaming_NamingContextExt_StringName sn);
			#pragma linkage(somTP_CosNaming_NamingContextExt_to_url,system)
			typedef somTP_CosNaming_NamingContextExt_to_url *somTD_CosNaming_NamingContextExt_to_url;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContextExt_URLString (SOMLINK * somTD_CosNaming_NamingContextExt_to_url)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_Address addr,
				/* in */ CosNaming_NamingContextExt_StringName sn);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_resolve_str)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_StringName n);
			#pragma linkage(somTP_CosNaming_NamingContextExt_resolve_str,system)
			typedef somTP_CosNaming_NamingContextExt_resolve_str *somTD_CosNaming_NamingContextExt_resolve_str;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_resolve_str)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_NamingContextExt_StringName n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_bind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_bind,system)
			typedef somTP_CosNaming_NamingContextExt_bind *somTD_CosNaming_NamingContextExt_bind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_bind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_rebind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_rebind,system)
			typedef somTP_CosNaming_NamingContextExt_rebind *somTD_CosNaming_NamingContextExt_rebind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_rebind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ SOMObject * obj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_bind_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
			#pragma linkage(somTP_CosNaming_NamingContextExt_bind_context,system)
			typedef somTP_CosNaming_NamingContextExt_bind_context *somTD_CosNaming_NamingContextExt_bind_context;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_bind_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_rebind_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
			#pragma linkage(somTP_CosNaming_NamingContextExt_rebind_context,system)
			typedef somTP_CosNaming_NamingContextExt_rebind_context *somTD_CosNaming_NamingContextExt_rebind_context;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_rebind_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n,
				/* in */ CosNaming_NamingContext * nc);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_resolve)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContextExt_resolve,system)
			typedef somTP_CosNaming_NamingContextExt_resolve *somTD_CosNaming_NamingContextExt_resolve;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_resolve)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_unbind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContextExt_unbind,system)
			typedef somTP_CosNaming_NamingContextExt_unbind *somTD_CosNaming_NamingContextExt_unbind;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_unbind)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContext * (somTP_CosNaming_NamingContextExt_new_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev);
			#pragma linkage(somTP_CosNaming_NamingContextExt_new_context,system)
			typedef somTP_CosNaming_NamingContextExt_new_context *somTD_CosNaming_NamingContextExt_new_context;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContext * (SOMLINK * somTD_CosNaming_NamingContextExt_new_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef CosNaming_NamingContext * (somTP_CosNaming_NamingContextExt_bind_new_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
			#pragma linkage(somTP_CosNaming_NamingContextExt_bind_new_context,system)
			typedef somTP_CosNaming_NamingContextExt_bind_new_context *somTD_CosNaming_NamingContextExt_bind_new_context;
		#else /* __IBMC__ */
			typedef CosNaming_NamingContext * (SOMLINK * somTD_CosNaming_NamingContextExt_bind_new_context)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ CosNaming_Name *n);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_destroy)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev);
			#pragma linkage(somTP_CosNaming_NamingContextExt_destroy,system)
			typedef somTP_CosNaming_NamingContextExt_destroy *somTD_CosNaming_NamingContextExt_destroy;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_destroy)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_list)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl,
				/* out */ CosNaming_BindingIterator * *bi);
			#pragma linkage(somTP_CosNaming_NamingContextExt_list,system)
			typedef somTP_CosNaming_NamingContextExt_list *somTD_CosNaming_NamingContextExt_list;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_list)(
				CosNaming_NamingContextExt * somSelf,
				Environment *ev,
				/* in */ unsigned long how_many,
				/* out */ CosNaming_BindingList *bl,
				/* out */ CosNaming_BindingIterator * *bi);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somInit)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somInit,system)
			typedef somTP_CosNaming_NamingContextExt_somInit *somTD_CosNaming_NamingContextExt_somInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somInit)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somUninit)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somUninit,system)
			typedef somTP_CosNaming_NamingContextExt_somUninit *somTD_CosNaming_NamingContextExt_somUninit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somUninit)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somFree)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somFree,system)
			typedef somTP_CosNaming_NamingContextExt_somFree *somTD_CosNaming_NamingContextExt_somFree;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somFree)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMClass * (somTP_CosNaming_NamingContextExt_somGetClass)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somGetClass,system)
			typedef somTP_CosNaming_NamingContextExt_somGetClass *somTD_CosNaming_NamingContextExt_somGetClass;
		#else /* __IBMC__ */
			typedef SOMClass * (SOMLINK * somTD_CosNaming_NamingContextExt_somGetClass)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef string (somTP_CosNaming_NamingContextExt_somGetClassName)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somGetClassName,system)
			typedef somTP_CosNaming_NamingContextExt_somGetClassName *somTD_CosNaming_NamingContextExt_somGetClassName;
		#else /* __IBMC__ */
			typedef string (SOMLINK * somTD_CosNaming_NamingContextExt_somGetClassName)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef long (somTP_CosNaming_NamingContextExt_somGetSize)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somGetSize,system)
			typedef somTP_CosNaming_NamingContextExt_somGetSize *somTD_CosNaming_NamingContextExt_somGetSize;
		#else /* __IBMC__ */
			typedef long (SOMLINK * somTD_CosNaming_NamingContextExt_somGetSize)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somIsA)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somIsA,system)
			typedef somTP_CosNaming_NamingContextExt_somIsA *somTD_CosNaming_NamingContextExt_somIsA;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somIsA)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somIsInstanceOf)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * aClassObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somIsInstanceOf,system)
			typedef somTP_CosNaming_NamingContextExt_somIsInstanceOf *somTD_CosNaming_NamingContextExt_somIsInstanceOf;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somIsInstanceOf)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * aClassObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somRespondsTo)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ somId mId);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somRespondsTo,system)
			typedef somTP_CosNaming_NamingContextExt_somRespondsTo *somTD_CosNaming_NamingContextExt_somRespondsTo;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somRespondsTo)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ somId mId);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somDispatch)(
				CosNaming_NamingContextExt * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDispatch,system)
			typedef somTP_CosNaming_NamingContextExt_somDispatch *somTD_CosNaming_NamingContextExt_somDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somDispatch)(
				CosNaming_NamingContextExt * somSelf,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somClassDispatch)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somClassDispatch,system)
			typedef somTP_CosNaming_NamingContextExt_somClassDispatch *somTD_CosNaming_NamingContextExt_somClassDispatch;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somClassDispatch)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * clsObj,
				/* out */ somToken *retValue,
				/* in */ somId methodId,
				/* in */ va_list ap);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somCastObj)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * castedCls);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somCastObj,system)
			typedef somTP_CosNaming_NamingContextExt_somCastObj *somTD_CosNaming_NamingContextExt_somCastObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somCastObj)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ SOMClass * castedCls);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef boolean (somTP_CosNaming_NamingContextExt_somResetObj)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somResetObj,system)
			typedef somTP_CosNaming_NamingContextExt_somResetObj *somTD_CosNaming_NamingContextExt_somResetObj;
		#else /* __IBMC__ */
			typedef boolean (SOMLINK * somTD_CosNaming_NamingContextExt_somResetObj)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_somPrintSelf)(
				CosNaming_NamingContextExt * somSelf);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somPrintSelf,system)
			typedef somTP_CosNaming_NamingContextExt_somPrintSelf *somTD_CosNaming_NamingContextExt_somPrintSelf;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_somPrintSelf)(
				CosNaming_NamingContextExt * somSelf);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDumpSelf)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDumpSelf,system)
			typedef somTP_CosNaming_NamingContextExt_somDumpSelf *somTD_CosNaming_NamingContextExt_somDumpSelf;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDumpSelf)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDumpSelfInt)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ long level);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDumpSelfInt,system)
			typedef somTP_CosNaming_NamingContextExt_somDumpSelfInt *somTD_CosNaming_NamingContextExt_somDumpSelfInt;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDumpSelfInt)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ long level);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDefaultInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultInit,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultInit *somTD_CosNaming_NamingContextExt_somDefaultInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDefaultCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultCopyInit,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultCopyInit *somTD_CosNaming_NamingContextExt_somDefaultCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDefaultConstCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultConstCopyInit,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultConstCopyInit *somTD_CosNaming_NamingContextExt_somDefaultConstCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultConstCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDefaultVCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultVCopyInit,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultVCopyInit *somTD_CosNaming_NamingContextExt_somDefaultVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultVCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDefaultConstVCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultConstVCopyInit,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultConstVCopyInit *somTD_CosNaming_NamingContextExt_somDefaultConstVCopyInit;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultConstVCopyInit)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somInitCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_somDefaultAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultAssign,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultAssign *somTD_CosNaming_NamingContextExt_somDefaultAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_somDefaultConstAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultConstAssign,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultConstAssign *somTD_CosNaming_NamingContextExt_somDefaultConstAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultConstAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_somDefaultVAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultVAssign,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultVAssign *somTD_CosNaming_NamingContextExt_somDefaultVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultVAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef SOMObject * (somTP_CosNaming_NamingContextExt_somDefaultConstVAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDefaultConstVAssign,system)
			typedef somTP_CosNaming_NamingContextExt_somDefaultConstVAssign *somTD_CosNaming_NamingContextExt_somDefaultConstVAssign;
		#else /* __IBMC__ */
			typedef SOMObject * (SOMLINK * somTD_CosNaming_NamingContextExt_somDefaultConstVAssign)(
				CosNaming_NamingContextExt * somSelf,
				/* inout */ somAssignCtrl *ctrl,
				/* in */ SOMObject * fromObj);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
#ifdef SOM_EXTERN_C_STATIC
		extern "C" {
#endif
		#ifdef __IBMC__
			typedef void (somTP_CosNaming_NamingContextExt_somDestruct)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
			#pragma linkage(somTP_CosNaming_NamingContextExt_somDestruct,system)
			typedef somTP_CosNaming_NamingContextExt_somDestruct *somTD_CosNaming_NamingContextExt_somDestruct;
		#else /* __IBMC__ */
			typedef void (SOMLINK * somTD_CosNaming_NamingContextExt_somDestruct)(
				CosNaming_NamingContextExt * somSelf,
				/* in */ octet doFree,
				/* inout */ somDestructCtrl *ctrl);
		#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
		}
#endif
		#ifndef CosNaming_NamingContextExt_MajorVersion
			#define CosNaming_NamingContextExt_MajorVersion   0
		#endif /* CosNaming_NamingContextExt_MajorVersion */
		#ifndef CosNaming_NamingContextExt_MinorVersion
			#define CosNaming_NamingContextExt_MinorVersion   0
		#endif /* CosNaming_NamingContextExt_MinorVersion */
		typedef struct CosNaming_NamingContextExtClassDataStructure
		{
			SOMClass * classObject;
			somMToken to_string;
			somMToken to_name;
			somMToken to_url;
			somMToken resolve_str;
		} CosNaming_NamingContextExtClassDataStructure;
		typedef struct CosNaming_NamingContextExtCClassDataStructure
		{
			somMethodTabs parentMtab;
			somDToken instanceDataToken;
		} CosNaming_NamingContextExtCClassDataStructure;
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContextExt_Class_Source)
				SOMEXTERN struct CosNaming_NamingContextExtClassDataStructure _CosNaming_NamingContextExtClassData;
				#ifndef CosNaming_NamingContextExtClassData
					#define CosNaming_NamingContextExtClassData    _CosNaming_NamingContextExtClassData
				#endif /* CosNaming_NamingContextExtClassData */
			#else
				SOMEXTERN struct CosNaming_NamingContextExtClassDataStructure * SOMLINK resolve_CosNaming_NamingContextExtClassData(void);
				#ifndef CosNaming_NamingContextExtClassData
					#define CosNaming_NamingContextExtClassData    (*(resolve_CosNaming_NamingContextExtClassData()))
				#endif /* CosNaming_NamingContextExtClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContextExt_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
			struct CosNaming_NamingContextExtClassDataStructure SOMDLINK CosNaming_NamingContextExtClassData;
		#endif /* SOM_RESOLVE_DATA */
		#ifdef SOM_RESOLVE_DATA
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContextExt_Class_Source)
				SOMEXTERN struct CosNaming_NamingContextExtCClassDataStructure _CosNaming_NamingContextExtCClassData;
				#ifndef CosNaming_NamingContextExtCClassData
					#define CosNaming_NamingContextExtCClassData    _CosNaming_NamingContextExtCClassData
				#endif /* CosNaming_NamingContextExtCClassData */
			#else
				SOMEXTERN struct CosNaming_NamingContextExtCClassDataStructure * SOMLINK resolve_CosNaming_NamingContextExtCClassData(void);
				#ifndef CosNaming_NamingContextExtCClassData
					#define CosNaming_NamingContextExtCClassData    (*(resolve_CosNaming_NamingContextExtCClassData()))
				#endif /* CosNaming_NamingContextExtCClassData */
			#endif
		#else /* SOM_RESOLVE_DATA */
			SOMEXTERN 
			#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContextExt_Class_Source)
				#ifdef SOMDLLEXPORT
					SOMDLLEXPORT
				#endif /* SOMDLLEXPORT */
			#else /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
				#ifdef SOMDLLIMPORT
					SOMDLLIMPORT
				#endif /* SOMDLLIMPORT */
			#endif /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
			struct CosNaming_NamingContextExtCClassDataStructure SOMDLINK CosNaming_NamingContextExtCClassData;
		#endif /* SOM_RESOLVE_DATA */
		extern "C" {
		extern 
		#if defined(SOM_Module_naming_Source) || defined(CosNaming_NamingContextExt_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_naming_Source || CosNaming_NamingContextExt_Class_Source */
		SOMClass * SOMLINK CosNaming_NamingContextExtNewClass
				(integer4 somtmajorVersion,integer4 somtminorVersion);
		}
		#define _SOMCLASS_CosNaming_NamingContextExt (CosNaming_NamingContextExtClassData.classObject)
		#ifndef SOMGD_CosNaming_NamingContextExt
			#if (defined(_CosNaming_NamingContextExt) || defined(__CosNaming_NamingContextExt))
				#undef _CosNaming_NamingContextExt
				#undef __CosNaming_NamingContextExt
				#define SOMGD_CosNaming_NamingContextExt 1
			#else
				#define _CosNaming_NamingContextExt _SOMCLASS_CosNaming_NamingContextExt
			#endif /* _CosNaming_NamingContextExt */
		#endif /* SOMGD_CosNaming_NamingContextExt */
		#define CosNaming_NamingContextExt_classObj _SOMCLASS_CosNaming_NamingContextExt
		#define _SOMMTOKEN_CosNaming_NamingContextExt(method) ((somMToken)(CosNaming_NamingContextExtClassData.method))
#endif /* CosNaming_NamingContextExt_API */

		class CosNaming_NamingContextExt : public CosNaming_NamingContext
		{
		protected:
			CosNaming_NamingContextExt(somMethodTab & mtab)
				: CosNaming_NamingContext(mtab)
			{}
		public:

			inline CosNaming_NamingContextExt_StringName to_string(
			Environment *ev,
			/* in */ CosNaming_Name *n)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContextExt,to_string)
						((CosNaming_NamingContextExt *)(void *)this,ev,n);
			};

			inline CosNaming_Name to_name(
			Environment *ev,
			/* in */ CosNaming_NamingContextExt_StringName sn)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContextExt,to_name)
						((CosNaming_NamingContextExt *)(void *)this,ev,sn);
			};

			inline CosNaming_NamingContextExt_URLString to_url(
			Environment *ev,
			/* in */ CosNaming_NamingContextExt_Address addr,
			/* in */ CosNaming_NamingContextExt_StringName sn)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContextExt,to_url)
						((CosNaming_NamingContextExt *)(void *)this,ev,addr,sn);
			};

			inline SOMObject * resolve_str(
			Environment *ev,
			/* in */ CosNaming_NamingContextExt_StringName n)
			{
				return SOM_Resolve((void *)this,CosNaming_NamingContextExt,resolve_str)
						((CosNaming_NamingContextExt *)(void *)this,ev,n);
			};

			inline void operator delete(void *x)
				{ ((SOMObject *)x)->somFree(); };

			inline void * operator new(size_t /* len */)
			{ if (!CosNaming_NamingContextExtClassData.classObject)
				{ CosNaming_NamingContextExtNewClass(CosNaming_NamingContextExt_MajorVersion,CosNaming_NamingContextExt_MinorVersion); }
				return (void *)SOM_Resolve((SOMObject *)(void *)CosNaming_NamingContextExtClassData.classObject,
					SOMClass,somNewNoInit)((SOMClass *)(void *)CosNaming_NamingContextExtClassData.classObject);
			};
			CosNaming_NamingContextExt()
				: CosNaming_NamingContext(*(CosNaming_NamingContextExtCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_NamingContextExtCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultInit(0); }
			CosNaming_NamingContextExt(CosNaming_NamingContextExt *fromObj)
				: CosNaming_NamingContext(*(CosNaming_NamingContextExtCClassData.parentMtab->mtab))
			{ if ((*(void **)(void *)this)==CosNaming_NamingContextExtCClassData.parentMtab->mtab)
				((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
		};
#endif /* SOM_Module_naming_Header_xh */
