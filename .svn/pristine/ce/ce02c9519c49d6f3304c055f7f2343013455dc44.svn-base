! This program is to test the switch code generated by Sun's 2.0.1 compiler
! Classic "form H" ("hashed"; see switch paper for details)
! Compiled on machine "salamis" (UQ), which has Sun's 2.0.1 compiler, using
! cc -O2 -S switch_sparse.c
! A few edits (e.g. remove underscores) were needed to allow the Solaris
! assembler to handle the resultant assembler file

	.seg	"text"			! [internal]
	.proc	4
	.global	main
	.type	main,#function
main:
!#PROLOGUE# 0
!#PROLOGUE# 1
	save	%sp,-104,%sp
	sethi	%hi(L31),%o0
	call	printf,1
	or	%o0,%lo(L31),%o0	! [internal]
	sethi	%hi(L33),%o0
	or	%o0,%lo(L33),%o0	! [internal]
	call	scanf,2
	add	%fp,-4,%o1
	ld	[%fp-4],%o0
	sethi	0x1dcd64,%o1
	inc	1022,%o1
	dec	2,%o0
	cmp	%o0,%o1
	bgu	L77012
	sethi	%hi(L2000000),%o2
	srl	%o0,4,%o1
	add	%o1,%o0,%o1
	and	%o1,15,%o1
	sll	%o1,3,%o4
	or	%o2,%lo(L2000000),%o2
LY1:					! [internal]
	ld	[%o4+%o2],%o3
	cmp	%o3,%o0
	be,a	LY3
	add	%o4,%o2,%o4
	cmp	%o3,-1
	be,a	LY2
	sethi	%hi(L57),%o0
	inc	8,%o4
	b	LY1
	and	%o4,120,%o4
L77002:
	sethi	%hi(L37),%o0
	call	printf,1
	or	%o0,%lo(L37),%o0	! [internal]
	b	L77015
	nop
L77003:
	sethi	%hi(L39),%o0
	call	printf,1
	or	%o0,%lo(L39),%o0	! [internal]
	b	L77015
	nop
L77004:
	sethi	%hi(L41),%o0
	call	printf,1
	or	%o0,%lo(L41),%o0	! [internal]
	b	L77015
	nop
L77005:
	sethi	%hi(L43),%o0
	call	printf,1
	or	%o0,%lo(L43),%o0	! [internal]
	b	L77015
	nop
L77006:
	sethi	%hi(L45),%o0
	call	printf,1
	or	%o0,%lo(L45),%o0	! [internal]
	b	L77015
	nop
L77007:
	sethi	%hi(L47),%o0
	call	printf,1
	or	%o0,%lo(L47),%o0	! [internal]
	b	L77015
	nop
L77008:
	sethi	%hi(L49),%o0
	call	printf,1
	or	%o0,%lo(L49),%o0	! [internal]
	b	L77015
	nop
L77009:
	sethi	%hi(L51),%o0
	call	printf,1
	or	%o0,%lo(L51),%o0	! [internal]
	b	L77015
	nop
L77010:
	sethi	%hi(L53),%o0
	call	printf,1
	or	%o0,%lo(L53),%o0	! [internal]
	b	L77015
	nop
L77011:
	sethi	%hi(L55),%o0
	call	printf,1
	or	%o0,%lo(L55),%o0	! [internal]
	b	L77015
	nop
L77012:
	sethi	%hi(L57),%o0
LY2:					! [internal]
	call	printf,1
	or	%o0,%lo(L57),%o0	! [internal]
	b	L77015
	nop
LY3:					! [internal]
	ld	[%o4+4],%o0
	jmp	%o0
	nop
L2000000:
	.word	0
	.word	L77002
	.word	0x30d3e
	.word	L77007
	.word	198
	.word	L77004
	.word	18
	.word	L77003
	.word	0x773593fe
	.word	L77011
	.word	0x1e847e
	.word	L77008
	.word	-1
	.word	L77012
	.word	-1
	.word	L77012
	.word	-1
	.word	L77012
	.word	-1
	.word	L77012
	.word	0x7ce
	.word	L77005
	.word	-1
	.word	L77012
	.word	-1
	.word	L77012
	.word	0x1312cfe
	.word	L77009
	.word	0xbebc1fe
	.word	L77010
	.word	0x4e1e
	.word	L77006
L77015:
	ret
	restore	%g0,0,%o0
	.seg	"data"			! [internal]
	.seg	"data1"			! [internal]
L31:
	.ascii	"Input a number, please: \0"
L33:
	.ascii	"%d\0"
L37:
	.ascii	"Two!\n\0"
L39:
	.ascii	"Twenty!\n\0"
L41:
	.ascii	"Two Hundred!\n\0"
L43:
	.ascii	"Two thousand!\n\0"
L45:
	.ascii	"Twenty thousand!\n\0"
L47:
	.ascii	"Two hundred thousand!\n\0"
L49:
	.ascii	"Two million!\n\0"
L51:
	.ascii	"Twenty million!\n\0"
L53:
	.ascii	"Two hundred million!\n\0"
L55:
	.ascii	"Two billion!\n\0"
L57:
	.ascii	"Other!\n\0"
