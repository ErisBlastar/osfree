/* generated from lname.idl */
/* internal conditional is SOM_Module_lname_Source */
#ifndef SOM_Module_lname_Header_xh
	#define SOM_Module_lname_Header_xh 1
	#include <som.xh>
	#include <lnamec.xh>
	#include <xnaming.xh>
	#include <naming.xh>
	#include <somobj.xh>
	class LName;
	#ifndef _IDL_SEQUENCE_LName_defined
		#define _IDL_SEQUENCE_LName_defined
		SOM_SEQUENCE_TYPEDEF_NAME(LName * ,sequence(LName));
	#endif /* _IDL_SEQUENCE_LName_defined */
#ifndef LName_API
#define LName_API
#define ex_LName_NoComponent   "::LName::NoComponent"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_NoComponent
#ifndef ex_NoComponent
#define ex_NoComponent  ex_LName_NoComponent
#else
#define SOMTGD_ex_NoComponent
#undef ex_NoComponent
#endif /* ex_NoComponent */
#endif /* SOMTGD_ex_NoComponent */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct LName_NoComponent LName_NoComponent;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_NoComponent
		#if defined(NoComponent)
			#undef NoComponent
			#define SOMGD_NoComponent
		#else
			#define NoComponent LName_NoComponent
		#endif
	#endif /* SOMGD_NoComponent */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_LName_OverFlow   "::LName::OverFlow"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_OverFlow
#ifndef ex_OverFlow
#define ex_OverFlow  ex_LName_OverFlow
#else
#define SOMTGD_ex_OverFlow
#undef ex_OverFlow
#endif /* ex_OverFlow */
#endif /* SOMTGD_ex_OverFlow */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct LName_OverFlow LName_OverFlow;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_OverFlow
		#if defined(OverFlow)
			#undef OverFlow
			#define SOMGD_OverFlow
		#else
			#define OverFlow LName_OverFlow
		#endif
	#endif /* SOMGD_OverFlow */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#define ex_LName_InvalidName   "::LName::InvalidName"
#ifndef SOM_DONT_USE_SHORT_NAMES
#ifndef SOMTGD_ex_InvalidName
#ifndef ex_InvalidName
#define ex_InvalidName  ex_LName_InvalidName
#else
#define SOMTGD_ex_InvalidName
#undef ex_InvalidName
#endif /* ex_InvalidName */
#endif /* SOMTGD_ex_InvalidName */
#endif /* SOM_DONT_USE_SHORT_NAMES */
typedef struct LName_InvalidName LName_InvalidName;
#ifndef SOM_DONT_USE_SHORT_NAMES
	#ifndef SOMGD_InvalidName
		#if defined(InvalidName)
			#undef InvalidName
			#define SOMGD_InvalidName
		#else
			#define InvalidName LName_InvalidName
		#endif
	#endif /* SOMGD_InvalidName */
#endif /* SOM_DONT_USE_SHORT_NAMES */
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef LName * (somTP_LName_insert_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i,
			/* in */ LNameComponent * n);
		#pragma linkage(somTP_LName_insert_component,system)
		typedef somTP_LName_insert_component *somTD_LName_insert_component;
	#else /* __IBMC__ */
		typedef LName * (SOMLINK * somTD_LName_insert_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i,
			/* in */ LNameComponent * n);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef LNameComponent * (somTP_LName_get_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i);
		#pragma linkage(somTP_LName_get_component,system)
		typedef somTP_LName_get_component *somTD_LName_get_component;
	#else /* __IBMC__ */
		typedef LNameComponent * (SOMLINK * somTD_LName_get_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef LNameComponent * (somTP_LName_delete_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i);
		#pragma linkage(somTP_LName_delete_component,system)
		typedef somTP_LName_delete_component *somTD_LName_delete_component;
	#else /* __IBMC__ */
		typedef LNameComponent * (SOMLINK * somTD_LName_delete_component)(
			LName * somSelf,
			Environment *ev,
			/* in */ unsigned long i);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef unsigned long (somTP_LName_num_components)(
			LName * somSelf,
			Environment *ev);
		#pragma linkage(somTP_LName_num_components,system)
		typedef somTP_LName_num_components *somTD_LName_num_components;
	#else /* __IBMC__ */
		typedef unsigned long (SOMLINK * somTD_LName_num_components)(
			LName * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_equal)(
			LName * somSelf,
			Environment *ev,
			/* in */ LName * ln);
		#pragma linkage(somTP_LName_equal,system)
		typedef somTP_LName_equal *somTD_LName_equal;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_equal)(
			LName * somSelf,
			Environment *ev,
			/* in */ LName * ln);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_less_than)(
			LName * somSelf,
			Environment *ev,
			/* in */ LName * ln);
		#pragma linkage(somTP_LName_less_than,system)
		typedef somTP_LName_less_than *somTD_LName_less_than;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_less_than)(
			LName * somSelf,
			Environment *ev,
			/* in */ LName * ln);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef CosNaming_Name (somTP_LName_to_idl_form)(
			LName * somSelf,
			Environment *ev);
		#pragma linkage(somTP_LName_to_idl_form,system)
		typedef somTP_LName_to_idl_form *somTD_LName_to_idl_form;
	#else /* __IBMC__ */
		typedef CosNaming_Name (SOMLINK * somTD_LName_to_idl_form)(
			LName * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_from_idl_form)(
			LName * somSelf,
			Environment *ev,
			/* in */ CosNaming_Name *n);
		#pragma linkage(somTP_LName_from_idl_form,system)
		typedef somTP_LName_from_idl_form *somTD_LName_from_idl_form;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_from_idl_form)(
			LName * somSelf,
			Environment *ev,
			/* in */ CosNaming_Name *n);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_destroy)(
			LName * somSelf,
			Environment *ev);
		#pragma linkage(somTP_LName_destroy,system)
		typedef somTP_LName_destroy *somTD_LName_destroy;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_destroy)(
			LName * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somInit)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somInit,system)
		typedef somTP_LName_somInit *somTD_LName_somInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somInit)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somUninit)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somUninit,system)
		typedef somTP_LName_somUninit *somTD_LName_somUninit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somUninit)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somFree)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somFree,system)
		typedef somTP_LName_somFree *somTD_LName_somFree;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somFree)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMClass * (somTP_LName_somGetClass)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somGetClass,system)
		typedef somTP_LName_somGetClass *somTD_LName_somGetClass;
	#else /* __IBMC__ */
		typedef SOMClass * (SOMLINK * somTD_LName_somGetClass)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef string (somTP_LName_somGetClassName)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somGetClassName,system)
		typedef somTP_LName_somGetClassName *somTD_LName_somGetClassName;
	#else /* __IBMC__ */
		typedef string (SOMLINK * somTD_LName_somGetClassName)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef long (somTP_LName_somGetSize)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somGetSize,system)
		typedef somTP_LName_somGetSize *somTD_LName_somGetSize;
	#else /* __IBMC__ */
		typedef long (SOMLINK * somTD_LName_somGetSize)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somIsA)(
			LName * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_LName_somIsA,system)
		typedef somTP_LName_somIsA *somTD_LName_somIsA;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somIsA)(
			LName * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somIsInstanceOf)(
			LName * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_LName_somIsInstanceOf,system)
		typedef somTP_LName_somIsInstanceOf *somTD_LName_somIsInstanceOf;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somIsInstanceOf)(
			LName * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somRespondsTo)(
			LName * somSelf,
			/* in */ somId mId);
		#pragma linkage(somTP_LName_somRespondsTo,system)
		typedef somTP_LName_somRespondsTo *somTD_LName_somRespondsTo;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somRespondsTo)(
			LName * somSelf,
			/* in */ somId mId);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somDispatch)(
			LName * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_LName_somDispatch,system)
		typedef somTP_LName_somDispatch *somTD_LName_somDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somDispatch)(
			LName * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somClassDispatch)(
			LName * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_LName_somClassDispatch,system)
		typedef somTP_LName_somClassDispatch *somTD_LName_somClassDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somClassDispatch)(
			LName * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somCastObj)(
			LName * somSelf,
			/* in */ SOMClass * castedCls);
		#pragma linkage(somTP_LName_somCastObj,system)
		typedef somTP_LName_somCastObj *somTD_LName_somCastObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somCastObj)(
			LName * somSelf,
			/* in */ SOMClass * castedCls);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_LName_somResetObj)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somResetObj,system)
		typedef somTP_LName_somResetObj *somTD_LName_somResetObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_LName_somResetObj)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_LName_somPrintSelf)(
			LName * somSelf);
		#pragma linkage(somTP_LName_somPrintSelf,system)
		typedef somTP_LName_somPrintSelf *somTD_LName_somPrintSelf;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_LName_somPrintSelf)(
			LName * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDumpSelf)(
			LName * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_LName_somDumpSelf,system)
		typedef somTP_LName_somDumpSelf *somTD_LName_somDumpSelf;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDumpSelf)(
			LName * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDumpSelfInt)(
			LName * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_LName_somDumpSelfInt,system)
		typedef somTP_LName_somDumpSelfInt *somTD_LName_somDumpSelfInt;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDumpSelfInt)(
			LName * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDefaultInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl);
		#pragma linkage(somTP_LName_somDefaultInit,system)
		typedef somTP_LName_somDefaultInit *somTD_LName_somDefaultInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDefaultInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDefaultCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultCopyInit,system)
		typedef somTP_LName_somDefaultCopyInit *somTD_LName_somDefaultCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDefaultCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDefaultConstCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultConstCopyInit,system)
		typedef somTP_LName_somDefaultConstCopyInit *somTD_LName_somDefaultConstCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDefaultConstCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDefaultVCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultVCopyInit,system)
		typedef somTP_LName_somDefaultVCopyInit *somTD_LName_somDefaultVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDefaultVCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDefaultConstVCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultConstVCopyInit,system)
		typedef somTP_LName_somDefaultConstVCopyInit *somTD_LName_somDefaultConstVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDefaultConstVCopyInit)(
			LName * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_LName_somDefaultAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultAssign,system)
		typedef somTP_LName_somDefaultAssign *somTD_LName_somDefaultAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_LName_somDefaultAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_LName_somDefaultConstAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultConstAssign,system)
		typedef somTP_LName_somDefaultConstAssign *somTD_LName_somDefaultConstAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_LName_somDefaultConstAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_LName_somDefaultVAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultVAssign,system)
		typedef somTP_LName_somDefaultVAssign *somTD_LName_somDefaultVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_LName_somDefaultVAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_LName_somDefaultConstVAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_LName_somDefaultConstVAssign,system)
		typedef somTP_LName_somDefaultConstVAssign *somTD_LName_somDefaultConstVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_LName_somDefaultConstVAssign)(
			LName * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_LName_somDestruct)(
			LName * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
		#pragma linkage(somTP_LName_somDestruct,system)
		typedef somTP_LName_somDestruct *somTD_LName_somDestruct;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_LName_somDestruct)(
			LName * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
	#ifndef LName_MajorVersion
		#define LName_MajorVersion   3
	#endif /* LName_MajorVersion */
	#ifndef LName_MinorVersion
		#define LName_MinorVersion   0
	#endif /* LName_MinorVersion */
	typedef struct LNameClassDataStructure
	{
		SOMClass * classObject;
		somMToken to_idl_form;
		somMToken insert_component;
		somMToken get_component;
		somMToken delete_component;
		somMToken num_components;
		somMToken equal;
		somMToken less_than;
		somMToken from_idl_form;
		somMToken destroy;
	} LNameClassDataStructure;
	typedef struct LNameCClassDataStructure
	{
		somMethodTabs parentMtab;
		somDToken instanceDataToken;
	} LNameCClassDataStructure;
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_lname_Source) || defined(LName_Class_Source)
			SOMEXTERN struct LNameClassDataStructure _LNameClassData;
			#ifndef LNameClassData
				#define LNameClassData    _LNameClassData
			#endif /* LNameClassData */
		#else
			SOMEXTERN struct LNameClassDataStructure * SOMLINK resolve_LNameClassData(void);
			#ifndef LNameClassData
				#define LNameClassData    (*(resolve_LNameClassData()))
			#endif /* LNameClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_lname_Source) || defined(LName_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_lname_Source || LName_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_lname_Source || LName_Class_Source */
		struct LNameClassDataStructure SOMDLINK LNameClassData;
	#endif /* SOM_RESOLVE_DATA */
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_lname_Source) || defined(LName_Class_Source)
			SOMEXTERN struct LNameCClassDataStructure _LNameCClassData;
			#ifndef LNameCClassData
				#define LNameCClassData    _LNameCClassData
			#endif /* LNameCClassData */
		#else
			SOMEXTERN struct LNameCClassDataStructure * SOMLINK resolve_LNameCClassData(void);
			#ifndef LNameCClassData
				#define LNameCClassData    (*(resolve_LNameCClassData()))
			#endif /* LNameCClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_lname_Source) || defined(LName_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_lname_Source || LName_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_lname_Source || LName_Class_Source */
		struct LNameCClassDataStructure SOMDLINK LNameCClassData;
	#endif /* SOM_RESOLVE_DATA */
	extern "C" {
	extern 
	#if defined(SOM_Module_lname_Source) || defined(LName_Class_Source)
		#ifdef SOMDLLEXPORT
			SOMDLLEXPORT
		#endif /* SOMDLLEXPORT */
	#else /* SOM_Module_lname_Source || LName_Class_Source */
		#ifdef SOMDLLIMPORT
			SOMDLLIMPORT
		#endif /* SOMDLLIMPORT */
	#endif /* SOM_Module_lname_Source || LName_Class_Source */
	SOMClass * SOMLINK LNameNewClass
			(integer4 somtmajorVersion,integer4 somtminorVersion);
	}
	#define _SOMCLASS_LName (LNameClassData.classObject)
	#ifndef SOMGD_LName
		#if (defined(_LName) || defined(__LName))
			#undef _LName
			#undef __LName
			#define SOMGD_LName 1
		#else
			#define _LName _SOMCLASS_LName
		#endif /* _LName */
	#endif /* SOMGD_LName */
	#define LName_classObj _SOMCLASS_LName
	#define _SOMMTOKEN_LName(method) ((somMToken)(LNameClassData.method))
#endif /* LName_API */

	class LName : public SOMObject
	{
	protected:
		LName(somMethodTab & mtab)
			: SOMObject(mtab)
		{}
	public:

		inline LName * insert_component(
			Environment *ev,
			/* in */ unsigned long i,
			/* in */ LNameComponent * n)
		{
			return SOM_Resolve((void *)this,LName,insert_component)
					((LName *)(void *)this,ev,i,n);
		};

		inline LNameComponent * get_component(
			Environment *ev,
			/* in */ unsigned long i)
		{
			return SOM_Resolve((void *)this,LName,get_component)
					((LName *)(void *)this,ev,i);
		};

		inline LNameComponent * delete_component(
			Environment *ev,
			/* in */ unsigned long i)
		{
			return SOM_Resolve((void *)this,LName,delete_component)
					((LName *)(void *)this,ev,i);
		};

		inline unsigned long num_components(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,LName,num_components)
					((LName *)(void *)this,ev);
		};

		inline boolean equal(
			Environment *ev,
			/* in */ LName * ln)
		{
			return SOM_Resolve((void *)this,LName,equal)
					((LName *)(void *)this,ev,ln);
		};

		inline boolean less_than(
			Environment *ev,
			/* in */ LName * ln)
		{
			return SOM_Resolve((void *)this,LName,less_than)
					((LName *)(void *)this,ev,ln);
		};

		inline CosNaming_Name to_idl_form(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,LName,to_idl_form)
					((LName *)(void *)this,ev);
		};

		inline void from_idl_form(
			Environment *ev,
			/* in */ CosNaming_Name *n)
		{
			SOM_Resolve((void *)this,LName,from_idl_form)
					((LName *)(void *)this,ev,n);
		};

		inline void destroy(
			Environment *ev)
		{
			SOM_Resolve((void *)this,LName,destroy)
					((LName *)(void *)this,ev);
		};

		inline void operator delete(void *x)
			{ ((SOMObject *)x)->somFree(); };

		inline void * operator new(size_t /* len */)
		{ if (!LNameClassData.classObject)
			{ LNameNewClass(LName_MajorVersion,LName_MinorVersion); }
			return (void *)SOM_Resolve((SOMObject *)(void *)LNameClassData.classObject,
				SOMClass,somNewNoInit)((SOMClass *)(void *)LNameClassData.classObject);
		};
		LName()
			: SOMObject(*(LNameCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==LNameCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultInit(0); }
		LName(LName *fromObj)
			: SOMObject(*(LNameCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==LNameCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
	};
#endif /* SOM_Module_lname_Header_xh */
