#
# Makefile for Regina REXX Interpreter
#
# Using gcc/emx on DOS or OS/2 with GNU make
# Usage:
#    make -f makefile.dos.emx [DEBUG=Y [TRACEMEM=Y]] [FLISTS=N]
#
# generated files without giving a target on the command line:
# rexx.exe    statically bounded REXX interpreter
# regina.a    static link library of the REXX interpreter, place anywhere
#             in a directory of your LIBRARY_PATH-variable.
#
# WARNING: If you really like to produce debugging code, you must either
#        disable the bounds checking (simply comment out "-fbounds-checking"
#        and "-lcheck") or you have to modify the file yaccsrc.c. Look at
#        yaccsrc.bound for an instruction guide.
#        TRACEMEM and FLISTS will both be disabled in case of bounds
#        checking inside rexx.h.
#

SRCDIR=$(REGINA_SRCDIR)
#
#                      USER CONFIGURABLE VARIABLES
#
# Please specify the current directory of the sources:
#
#SRCDIR=path_to_this_file

CC = gcc
LD = gcc

include $(SRCDIR)\regina.ver
VERDOT = $(VER_DOT)
VERDATE = $(VER_DATE)

ifeq ($(DEBUG),Y)
OPTIMIZE = -g  -fbounds-checking -Wall -Wno-char-subscripts
LDOPT = -g
LIBS = -lcheck
SHLIBS = -lcheck
else
OPTIMIZE = -O3 -fomit-frame-pointer -Wall -DNDEBUG -Wno-char-subscripts
LDOPT = -O3
LIBS =
SHLIBS =
endif

ifeq ($(TRACEMEM),Y)
MEMTRACE = -DTRACEMEM
else
MEMTRACE =
endif

ifeq ($(FLISTS),N)
USEFLISTS = -DNOFLISTS
else
USEFLISTS =
endif

CEXTRA = -DDOS -DEMX -DNO_EXTERNAL_QUEUES -funsigned-char -DREGINA_VERSION_DATE=\"$(VER_DATE)\" -DREGINA_VERSION_MAJOR=\"$(VER_MAJOR)\" -DREGINA_VERSION_MINOR=\"$(VER_MINOR)\" -DREGINA_VERSION_SUPP=\"$(VER_SUPP)\"
EXTQUEUE_OBJS = #extstack.$(OBJ) rexxbif.$(OBJ)
EXTQUEUE_SHOBJS = #extstack.sho rexxbif.sho
EEXTRA =
DYN_COMP =
THREADING =
MT_FILE = mt_notmt
OS_FILE = os_other
SHL = dll
OBJ=o
LD_RXLIB1=ld
LD_RXLIB2=-lc -L. -lregina
SHL_LD=ld -o $(LIBPRE)$(LIBFILE).$(SHL).$(VERDOT) -rpath . -shared -no_archive $(SHOFILES) -lc
SHL_TARGETS =
LDEXTRA=emxbind $@ -acm
LIBPRE =
LIBFILE = regina
LIBEXE = ar
LIBPST = a
LIBFLAGS = cr $(LIBFILE).$(LIBPST)
LIBLINK = $(LIBFILE).$(LIBPST)
OBJECTS = $(OFILES)
OSAVE = .o.save
MV=-ren
RM=-del

RANLIB_LIB=#ranlib $(LIBFILE).a

#
# If your compiler can handle the combination of: -c -o file.sho, then
# uncomment the macro CC2O and comment out the 3 macros before CC2O
#
CC2O=-o $@
#
# Include the common rules for the interpreter
#
include $(SRCDIR)/makefile.com
#
# End of makefile
#
