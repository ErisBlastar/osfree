/* generated from request.idl */
/* internal conditional is SOM_Module_request_Source */
#ifndef SOM_Module_request_Header_xh
	#define SOM_Module_request_Header_xh 1
	#include <som.xh>
	#include <somobj.xh>
	#include <somdtype.xh>
	#include <containd.xh>
	class Request;
	#ifndef _IDL_SEQUENCE_Request_defined
		#define _IDL_SEQUENCE_Request_defined
		SOM_SEQUENCE_TYPEDEF_NAME(Request * ,sequence(Request));
	#endif /* _IDL_SEQUENCE_Request_defined */
#ifndef Request_API
#define Request_API
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_Request_add_arg)(
			Request * somSelf,
			Environment *ev,
			/* in */ Identifier name,
			/* in */ TypeCode arg_type,
			/* in */ void *value,
			/* in */ long len,
			/* in */ Flags arg_flags);
		#pragma linkage(somTP_Request_add_arg,system)
		typedef somTP_Request_add_arg *somTD_Request_add_arg;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_Request_add_arg)(
			Request * somSelf,
			Environment *ev,
			/* in */ Identifier name,
			/* in */ TypeCode arg_type,
			/* in */ void *value,
			/* in */ long len,
			/* in */ Flags arg_flags);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_Request_invoke)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags invoke_flags);
		#pragma linkage(somTP_Request_invoke,system)
		typedef somTP_Request_invoke *somTD_Request_invoke;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_Request_invoke)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags invoke_flags);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_Request_send)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags invoke_flags);
		#pragma linkage(somTP_Request_send,system)
		typedef somTP_Request_send *somTD_Request_send;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_Request_send)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags invoke_flags);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_Request_get_response)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags response_flags);
		#pragma linkage(somTP_Request_get_response,system)
		typedef somTP_Request_get_response *somTD_Request_get_response;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_Request_get_response)(
			Request * somSelf,
			Environment *ev,
			/* in */ Flags response_flags);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_Request_destroy)(
			Request * somSelf,
			Environment *ev);
		#pragma linkage(somTP_Request_destroy,system)
		typedef somTP_Request_destroy *somTD_Request_destroy;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_Request_destroy)(
			Request * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somInit)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somInit,system)
		typedef somTP_Request_somInit *somTD_Request_somInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somInit)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somUninit)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somUninit,system)
		typedef somTP_Request_somUninit *somTD_Request_somUninit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somUninit)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somFree)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somFree,system)
		typedef somTP_Request_somFree *somTD_Request_somFree;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somFree)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMClass * (somTP_Request_somGetClass)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somGetClass,system)
		typedef somTP_Request_somGetClass *somTD_Request_somGetClass;
	#else /* __IBMC__ */
		typedef SOMClass * (SOMLINK * somTD_Request_somGetClass)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef string (somTP_Request_somGetClassName)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somGetClassName,system)
		typedef somTP_Request_somGetClassName *somTD_Request_somGetClassName;
	#else /* __IBMC__ */
		typedef string (SOMLINK * somTD_Request_somGetClassName)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef long (somTP_Request_somGetSize)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somGetSize,system)
		typedef somTP_Request_somGetSize *somTD_Request_somGetSize;
	#else /* __IBMC__ */
		typedef long (SOMLINK * somTD_Request_somGetSize)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somIsA)(
			Request * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_Request_somIsA,system)
		typedef somTP_Request_somIsA *somTD_Request_somIsA;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somIsA)(
			Request * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somIsInstanceOf)(
			Request * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_Request_somIsInstanceOf,system)
		typedef somTP_Request_somIsInstanceOf *somTD_Request_somIsInstanceOf;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somIsInstanceOf)(
			Request * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somRespondsTo)(
			Request * somSelf,
			/* in */ somId mId);
		#pragma linkage(somTP_Request_somRespondsTo,system)
		typedef somTP_Request_somRespondsTo *somTD_Request_somRespondsTo;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somRespondsTo)(
			Request * somSelf,
			/* in */ somId mId);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somDispatch)(
			Request * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_Request_somDispatch,system)
		typedef somTP_Request_somDispatch *somTD_Request_somDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somDispatch)(
			Request * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somClassDispatch)(
			Request * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_Request_somClassDispatch,system)
		typedef somTP_Request_somClassDispatch *somTD_Request_somClassDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somClassDispatch)(
			Request * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somCastObj)(
			Request * somSelf,
			/* in */ SOMClass * castedCls);
		#pragma linkage(somTP_Request_somCastObj,system)
		typedef somTP_Request_somCastObj *somTD_Request_somCastObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somCastObj)(
			Request * somSelf,
			/* in */ SOMClass * castedCls);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Request_somResetObj)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somResetObj,system)
		typedef somTP_Request_somResetObj *somTD_Request_somResetObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Request_somResetObj)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Request_somPrintSelf)(
			Request * somSelf);
		#pragma linkage(somTP_Request_somPrintSelf,system)
		typedef somTP_Request_somPrintSelf *somTD_Request_somPrintSelf;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Request_somPrintSelf)(
			Request * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDumpSelf)(
			Request * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_Request_somDumpSelf,system)
		typedef somTP_Request_somDumpSelf *somTD_Request_somDumpSelf;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDumpSelf)(
			Request * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDumpSelfInt)(
			Request * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_Request_somDumpSelfInt,system)
		typedef somTP_Request_somDumpSelfInt *somTD_Request_somDumpSelfInt;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDumpSelfInt)(
			Request * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDefaultInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl);
		#pragma linkage(somTP_Request_somDefaultInit,system)
		typedef somTP_Request_somDefaultInit *somTD_Request_somDefaultInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDefaultInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDefaultCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultCopyInit,system)
		typedef somTP_Request_somDefaultCopyInit *somTD_Request_somDefaultCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDefaultCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDefaultConstCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultConstCopyInit,system)
		typedef somTP_Request_somDefaultConstCopyInit *somTD_Request_somDefaultConstCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDefaultConstCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDefaultVCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultVCopyInit,system)
		typedef somTP_Request_somDefaultVCopyInit *somTD_Request_somDefaultVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDefaultVCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDefaultConstVCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultConstVCopyInit,system)
		typedef somTP_Request_somDefaultConstVCopyInit *somTD_Request_somDefaultConstVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDefaultConstVCopyInit)(
			Request * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Request_somDefaultAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultAssign,system)
		typedef somTP_Request_somDefaultAssign *somTD_Request_somDefaultAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Request_somDefaultAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Request_somDefaultConstAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultConstAssign,system)
		typedef somTP_Request_somDefaultConstAssign *somTD_Request_somDefaultConstAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Request_somDefaultConstAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Request_somDefaultVAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultVAssign,system)
		typedef somTP_Request_somDefaultVAssign *somTD_Request_somDefaultVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Request_somDefaultVAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Request_somDefaultConstVAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Request_somDefaultConstVAssign,system)
		typedef somTP_Request_somDefaultConstVAssign *somTD_Request_somDefaultConstVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Request_somDefaultConstVAssign)(
			Request * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Request_somDestruct)(
			Request * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
		#pragma linkage(somTP_Request_somDestruct,system)
		typedef somTP_Request_somDestruct *somTD_Request_somDestruct;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Request_somDestruct)(
			Request * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
	#ifndef Request_MajorVersion
		#define Request_MajorVersion   2
	#endif /* Request_MajorVersion */
	#ifndef Request_MinorVersion
		#define Request_MinorVersion   2
	#endif /* Request_MinorVersion */
	typedef struct RequestClassDataStructure
	{
		SOMClass * classObject;
		somMToken add_arg;
		somMToken invoke;
		somMToken send;
		somMToken get_response;
		somMToken destroy;
		somMToken _get_c_request;
		somMToken _set_c_request;
	} RequestClassDataStructure;
	typedef struct RequestCClassDataStructure
	{
		somMethodTabs parentMtab;
		somDToken instanceDataToken;
	} RequestCClassDataStructure;
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_request_Source) || defined(Request_Class_Source)
			SOMEXTERN struct RequestClassDataStructure _RequestClassData;
			#ifndef RequestClassData
				#define RequestClassData    _RequestClassData
			#endif /* RequestClassData */
		#else
			SOMEXTERN struct RequestClassDataStructure * SOMLINK resolve_RequestClassData(void);
			#ifndef RequestClassData
				#define RequestClassData    (*(resolve_RequestClassData()))
			#endif /* RequestClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_request_Source) || defined(Request_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_request_Source || Request_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_request_Source || Request_Class_Source */
		struct RequestClassDataStructure SOMDLINK RequestClassData;
	#endif /* SOM_RESOLVE_DATA */
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_request_Source) || defined(Request_Class_Source)
			SOMEXTERN struct RequestCClassDataStructure _RequestCClassData;
			#ifndef RequestCClassData
				#define RequestCClassData    _RequestCClassData
			#endif /* RequestCClassData */
		#else
			SOMEXTERN struct RequestCClassDataStructure * SOMLINK resolve_RequestCClassData(void);
			#ifndef RequestCClassData
				#define RequestCClassData    (*(resolve_RequestCClassData()))
			#endif /* RequestCClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_request_Source) || defined(Request_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_request_Source || Request_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_request_Source || Request_Class_Source */
		struct RequestCClassDataStructure SOMDLINK RequestCClassData;
	#endif /* SOM_RESOLVE_DATA */
	extern "C" {
	extern 
	#if defined(SOM_Module_request_Source) || defined(Request_Class_Source)
		#ifdef SOMDLLEXPORT
			SOMDLLEXPORT
		#endif /* SOMDLLEXPORT */
	#else /* SOM_Module_request_Source || Request_Class_Source */
		#ifdef SOMDLLIMPORT
			SOMDLLIMPORT
		#endif /* SOMDLLIMPORT */
	#endif /* SOM_Module_request_Source || Request_Class_Source */
	SOMClass * SOMLINK RequestNewClass
			(integer4 somtmajorVersion,integer4 somtminorVersion);
	}
	#define _SOMCLASS_Request (RequestClassData.classObject)
	#ifndef SOMGD_Request
		#if (defined(_Request) || defined(__Request))
			#undef _Request
			#undef __Request
			#define SOMGD_Request 1
		#else
			#define _Request _SOMCLASS_Request
		#endif /* _Request */
	#endif /* SOMGD_Request */
	#define Request_classObj _SOMCLASS_Request
	#define _SOMMTOKEN_Request(method) ((somMToken)(RequestClassData.method))
#endif /* Request_API */

	class Request : public SOMObject
	{
	protected:
		Request(somMethodTab & mtab)
			: SOMObject(mtab)
		{}
	public:

		inline ORBStatus add_arg(
			Environment *ev,
			/* in */ Identifier name,
			/* in */ TypeCode arg_type,
			/* in */ void *value,
			/* in */ long len,
			/* in */ Flags arg_flags)
		{
			return SOM_Resolve((void *)this,Request,add_arg)
					((Request *)(void *)this,ev,name,arg_type,value,len,arg_flags);
		};

		inline ORBStatus invoke(
			Environment *ev,
			/* in */ Flags invoke_flags)
		{
			return SOM_Resolve((void *)this,Request,invoke)
					((Request *)(void *)this,ev,invoke_flags);
		};

		inline ORBStatus send(
			Environment *ev,
			/* in */ Flags invoke_flags)
		{
			return SOM_Resolve((void *)this,Request,send)
					((Request *)(void *)this,ev,invoke_flags);
		};

		inline ORBStatus get_response(
			Environment *ev,
			/* in */ Flags response_flags)
		{
			return SOM_Resolve((void *)this,Request,get_response)
					((Request *)(void *)this,ev,response_flags);
		};

		inline ORBStatus destroy(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Request,destroy)
					((Request *)(void *)this,ev);
		};

		inline void operator delete(void *x)
			{ ((SOMObject *)x)->somFree(); };

		inline void * operator new(size_t /* len */)
		{ if (!RequestClassData.classObject)
			{ RequestNewClass(Request_MajorVersion,Request_MinorVersion); }
			return (void *)SOM_Resolve((SOMObject *)(void *)RequestClassData.classObject,
				SOMClass,somNewNoInit)((SOMClass *)(void *)RequestClassData.classObject);
		};
		Request()
			: SOMObject(*(RequestCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==RequestCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultInit(0); }
		Request(Request *fromObj)
			: SOMObject(*(RequestCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==RequestCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
	};
#define ARG_IN				0x00000001
#define ARG_OUT			0x00000002
#define ARG_INOUT			0x00000004
#define IN_COPY_VALUE		0x00000008
#define DEPENDENT_LIST		0x00000010
#define OUT_LIST_MEMORY	0x00000020
#define INV_NO_RESPONSE	0x00000040
#define INV_TERM_ON_ERR	0x00000080
#define RESP_NO_WAIT		0x00000100
#define AUTH_IN_MSG		0x00010000
#define ACKONEWAY			0x00020000
#define ENV_IN_MSG			0x00040000
#define CTX_IN_MSG			0x00080000
#define OBJ_OWNED			0x00100000
#define CALLER_OWNED		0x00200000
#define RESULT_OUT			0x00400000
#define CLIENT_SIDE		0x00800000
#define SERVER_SIDE		0x01000000
#define TXCTX_IN_MSG		0x02000000
#define ARG_IS_PTRARG		0x10000000
#define ARG_IS_COMPONENT	0x20000000
#define ROOT_NOT_PTRARG	0x40000000
#define RESERVED_FLAGS		0x8c00fe00

class Request;
#ifndef SOM_IMPORTEXPORT_somd
		#ifdef SOMDLLIMPORT
			#define SOM_IMPORTEXPORT_somd SOMDLLIMPORT
		#else
			#define SOM_IMPORTEXPORT_somd
		#endif
#endif
SOMEXTERN SOM_IMPORTEXPORT_somd ORBStatus SOMLINK send_multiple_requests(Request *[],Environment *,long,Flags);
SOMEXTERN SOM_IMPORTEXPORT_somd ORBStatus SOMLINK get_next_response(Environment *,Flags,Request **);

#endif /* SOM_Module_request_Header_xh */
