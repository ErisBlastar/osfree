/**************************************************************************
 *
 *  Copyright 2008, Roger Brown
 *
 *  This file is part of Roger Brown's Toolkit.
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

/*
 * $Id: orb.idl 3914 2013-01-18 22:11:38Z rogerb $
 */

#ifndef orb_idl
#define orb_idl
#include <somobj.idl>
#include <somdtype.idl>
#include <snglicls.idl>
#include <unotypes.idl>
interface OperationDef;
interface SOMDObject;
interface NVList;
interface Context;
interface ORB :
	SOMObject
{
	string object_to_string(in SOMObject obj);
	SOMObject string_to_object(in string str);
	ORBStatus create_list(in long count,out NVList new_list);
	ORBStatus create_operation_list(in OperationDef oper,out NVList new_list);
	ORBStatus get_default_context(out Context ctx);
	typedef string ObjectId;
	typedef sequence<ObjectId> ObjectIdList;
	exception InvalidName{};

	const string initial_InterfaceRepository="InterfaceRepository";
	const string initial_NameService="NameService";
	const string initial_CodecFactory="CodecFactory";
	const string initial_DynAnyFactory="DynAnyFactory";

	ObjectIdList list_initial_services();
	SOMObject resolve_initial_references(in ObjectId identifier) raises (InvalidName);

	attribute boolean stringToObject30;

	/* added from poa.idl */

	boolean work_pending();
	void perform_work();
	void shutdown(in boolean wait_for_completion);
	void run();


#ifdef __SOMIDL__
	implementation
	{
		releaseorder : 
			object_to_string,
			string_to_object,
			create_list,
			create_operation_list,
			get_default_context,
			private5,
			private6,
			private7,
			private8,
			list_initial_services,
			resolve_initial_references,
			_get_stringToObject30,
			_set_stringToObject30,
			private13,
			private14,
			private15,
			private16,
			run,
			shutdown,
			perform_work,
			work_pending
			;
		callstyle = idl;
		metaclass = "SOMMSingleInstance";
		dllname = "somd.dll";
		majorversion = 2;
		minorversion = 1;
	};
#endif /* __SOMIDL__ */
};
#endif /* orb_idl */
