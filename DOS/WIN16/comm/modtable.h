
#ifndef NO_WINCOMM

/* Entry Table COMM: */

extern long int trmcom();
extern long int cclrbrk();
extern long int setque();
extern long int setcom();
extern long int csetbrk();
extern long int CommWriteString();
extern long int SuspendOpenCommPorts();
extern long int EnableNotification();
extern long int ctx();
extern long int sextfcn();
extern long int cevt();
extern long int cevtGet();
extern long int reccom();
extern long int stacom();
extern long int sndcom();
extern long int getdcb();
extern long int cflush();
extern long int ReactivateOpenCommPorts();
extern long int inicom();
extern long int cextfcn();
extern long int ReadCommString();

static ENTRYTAB entry_tab_COMM[] = 
#if !defined(TWIN_EMPTY_MODTABLE)
{
	/* 000 */	{ "", 0, 0 },
	/* 001 */	{ "INICOM", 0x0008, 0x0008, inicom },
	/* 002 */	{ "SETCOM", 0x0008, 0x0010, setcom },
	/* 003 */	{ "SETQUE", 0x0008, 0x0018, setque },
	/* 004 */	{ "RECCOM", 0x0008, 0x0020, reccom }, 
	/* 005 */	{ "SNDCOM", 0x0008, 0x0028, sndcom },
	/* 006 */	{ "CTX", 0x0008, 0x0030, ctx },
	/* 007 */	{ "TRMCOM", 0x0008, 0x0038, trmcom },
	/* 008 */	{ "STACOM", 0x0008, 0x0040, stacom },
	/* 009 */	{ "CEXTFCN", 0x0008, 0x0048, cextfcn },
	/* 00a */	{ "CFLUSH", 0x0008, 0x0050, cflush },
	/* 00b */	{ "CEVT", 0x0008, 0x0058, cevt },
	/* 00c */	{ "CEVTGET", 0x0008, 0x0060, cevtGet },
	/* 00d */	{ "CSETBRK", 0x0008, 0x0068, csetbrk },
	/* 00e */	{ "CCLRBRK", 0x0008, 0x0070, cclrbrk },
	/* 00f */	{ "GETDCB", 0x0008, 0x078, getdcb },
	/* 010 */	{ "", 0, 0, 0 },
	/* 011 */	{ "SUSPENDOPENCOMMCOMMPORTS", 0x0008, 0x0088, SuspendOpenCommPorts },
	/* 012 */	{ "REACTIVATEOPENCOMMPORTS", 0x0008, 0x0090, ReactivateOpenCommPorts },
	/* 013 */	{ "COMMWRITESTRING", 0x0008, 0x0098, CommWriteString },
	/* 014 */	{ "READCOMMSTRING", 0x0008, 0x00a0, ReadCommString },
	/* 015 */	{ "", 0, 0, 0 },
	/* 016 */	{ "", 0, 0, 0 },
	/* 017 */	{ "", 0, 0, 0 },
	/* 018 */	{ "", 0, 0, 0 },
	/* 019 */	{ "", 0, 0, 0 },
	/* 01a */	{ "", 0, 0, 0 },
	/* 01b */	{ "", 0, 0, 0 },
	/* 01c */	{ "", 0, 0, 0 },
	/* 01d */	{ "", 0, 0, 0 },
	/* 01e */	{ "", 0, 0, 0 },
	/* 01f */	{ "", 0, 0, 0 },
	/* 020 */	{ "", 0, 0, 0 },
	/* 021 */	{ "", 0, 0, 0 },
	/* 022 */	{ "", 0, 0, 0 },
	/* 023 */	{ "", 0, 0, 0 },
	/* 024 */	{ "", 0, 0, 0 },
	/* 025 */	{ "", 0, 0, 0 },
	/* 026 */	{ "", 0, 0, 0 },
	/* 027 */	{ "", 0, 0, 0 },
	/* 028 */	{ "", 0, 0, 0 },
	/* 029 */	{ "", 0, 0, 0 },
	/* 02a */	{ "", 0, 0, 0 },
	/* 02b */	{ "", 0, 0, 0 },
	/* 02c */	{ "", 0, 0, 0 },
	/* 02d */	{ "", 0, 0, 0 },
	/* 02e */	{ "", 0, 0, 0 },
	/* 02f */	{ "", 0, 0, 0 },
	/* 030 */	{ "", 0, 0, 0 },
	/* 031 */	{ "", 0, 0, 0 },
	/* 032 */	{ "", 0, 0, 0 },
	/* 033 */	{ "", 0, 0, 0 },
	/* 034 */	{ "", 0, 0, 0 },
	/* 034 */	{ "", 0, 0, 0 },
	/* 036 */	{ "", 0, 0, 0 },
	/* 037 */	{ "", 0, 0, 0 },
	/* 038 */	{ "", 0, 0, 0 },
	/* 039 */	{ "", 0, 0, 0 },
	/* 03a */	{ "", 0, 0, 0 },
	/* 03b */	{ "", 0, 0, 0 },
	/* 03c */	{ "", 0, 0, 0 },
	/* 03d */	{ "", 0, 0, 0 },
	/* 03e */	{ "", 0, 0, 0 },
	/* 03f */	{ "", 0, 0, 0 },
	/* 040 */	{ "", 0, 0, 0 },
	/* 041 */	{ "", 0, 0, 0 },
	/* 042 */	{ "", 0, 0, 0 },
	/* 043 */	{ "", 0, 0, 0 },
	/* 044 */	{ "", 0, 0, 0 },
	/* 045 */	{ "", 0, 0, 0 },
	/* 046 */	{ "", 0, 0, 0 },
	/* 047 */	{ "", 0, 0, 0 },
	/* 048 */	{ "", 0, 0, 0 },
	/* 049 */	{ "", 0, 0, 0 },
	/* 04a */	{ "", 0, 0, 0 },
	/* 04b */	{ "", 0, 0, 0 },
	/* 04c */	{ "", 0, 0, 0 },
	/* 04d */	{ "", 0, 0, 0 },
	/* 04e */	{ "", 0, 0, 0 },
	/* 04f */	{ "", 0, 0, 0 },
	/* 050 */	{ "", 0, 0, 0 },
	/* 051 */	{ "", 0, 0, 0 },
	/* 052 */	{ "", 0, 0, 0 },
	/* 053 */	{ "", 0, 0, 0 },
	/* 054 */	{ "", 0, 0, 0 },
	/* 055 */	{ "", 0, 0, 0 },
	/* 056 */	{ "", 0, 0, 0 },
	/* 057 */	{ "", 0, 0, 0 },
	/* 058 */	{ "", 0, 0, 0 },
	/* 059 */	{ "", 0, 0, 0 },
	/* 05a */	{ "", 0, 0, 0 },
	/* 05b */	{ "", 0, 0, 0 },
	/* 05c */	{ "", 0, 0, 0 },
	/* 05d */	{ "", 0, 0, 0 },
	/* 05e */	{ "", 0, 0, 0 },
	/* 05f */	{ "", 0, 0, 0 },
	/* 060 */	{ "", 0, 0, 0 },
	/* 061 */	{ "", 0, 0, 0 },
	/* 062 */	{ "", 0, 0, 0 },
	/* 063 */	{ "", 0, 0, 0 },
	/* 064 */	{ "ENABLENOTIFICATION", 0x0008, 0x0320, EnableNotification }
};
#else
{
	/* 000 */	{ "", 0, 0, 0 },
	/* 001 */	{ "", 0, 0, 0 },
	/* 002 */	{ "", 0, 0, 0 },
	/* 003 */	{ "", 0, 0, 0 },
	/* 004 */	{ "", 0, 0, 0 },
	/* 005 */	{ "", 0, 0, 0 },
	/* 006 */	{ "", 0, 0, 0 },
	/* 007 */	{ "", 0, 0, 0 },
	/* 008 */	{ "", 0, 0, 0 },
	/* 009 */	{ "", 0, 0, 0 },
	/* 00a */	{ "", 0, 0, 0 },
	/* 00b */	{ "", 0, 0, 0 },
	/* 00c */	{ "", 0, 0, 0 },
	/* 00d */	{ "", 0, 0, 0 },
	/* 00e */	{ "", 0, 0, 0 },
	/* 00f */	{ "", 0, 0, 0 },
	/* 010 */	{ "", 0, 0, 0 },
	/* 011 */	{ "", 0, 0, 0 },
	/* 012 */	{ "", 0, 0, 0 },
	/* 013 */	{ "", 0, 0, 0 },
	/* 014 */	{ "", 0, 0, 0 },
	/* 015 */	{ "", 0, 0, 0 },
	/* 016 */	{ "", 0, 0, 0 },
	/* 017 */	{ "", 0, 0, 0 },
	/* 018 */	{ "", 0, 0, 0 },
	/* 019 */	{ "", 0, 0, 0 },
	/* 01a */	{ "", 0, 0, 0 },
	/* 01b */	{ "", 0, 0, 0 },
	/* 01c */	{ "", 0, 0, 0 },
	/* 01d */	{ "", 0, 0, 0 },
	/* 01e */	{ "", 0, 0, 0 },
	/* 01f */	{ "", 0, 0, 0 },
	/* 020 */	{ "", 0, 0, 0 },
	/* 021 */	{ "", 0, 0, 0 },
	/* 022 */	{ "", 0, 0, 0 },
	/* 023 */	{ "", 0, 0, 0 },
	/* 024 */	{ "", 0, 0, 0 },
	/* 025 */	{ "", 0, 0, 0 },
	/* 026 */	{ "", 0, 0, 0 },
	/* 027 */	{ "", 0, 0, 0 },
	/* 028 */	{ "", 0, 0, 0 },
	/* 029 */	{ "", 0, 0, 0 },
	/* 02a */	{ "", 0, 0, 0 },
	/* 02b */	{ "", 0, 0, 0 },
	/* 02c */	{ "", 0, 0, 0 },
	/* 02d */	{ "", 0, 0, 0 },
	/* 02e */	{ "", 0, 0, 0 },
	/* 02f */	{ "", 0, 0, 0 },
	/* 030 */	{ "", 0, 0, 0 },
	/* 031 */	{ "", 0, 0, 0 },
	/* 032 */	{ "", 0, 0, 0 },
	/* 033 */	{ "", 0, 0, 0 },
	/* 034 */	{ "", 0, 0, 0 },
	/* 035 */	{ "", 0, 0, 0 },
	/* 036 */	{ "", 0, 0, 0 },
	/* 037 */	{ "", 0, 0, 0 },
	/* 038 */	{ "", 0, 0, 0 },
	/* 039 */	{ "", 0, 0, 0 },
	/* 03a */	{ "", 0, 0, 0 },
	/* 03b */	{ "", 0, 0, 0 },
	/* 03c */	{ "", 0, 0, 0 },
	/* 03d */	{ "", 0, 0, 0 },
	/* 03e */	{ "", 0, 0, 0 },
	/* 03f */	{ "", 0, 0, 0 },
	/* 040 */	{ "", 0, 0, 0 },
	/* 041 */	{ "", 0, 0, 0 },
	/* 042 */	{ "", 0, 0, 0 },
	/* 043 */	{ "", 0, 0, 0 },
	/* 044 */	{ "", 0, 0, 0 },
	/* 045 */	{ "", 0, 0, 0 },
	/* 046 */	{ "", 0, 0, 0 },
	/* 047 */	{ "", 0, 0, 0 },
	/* 048 */	{ "", 0, 0, 0 },
	/* 049 */	{ "", 0, 0, 0 },
	/* 04a */	{ "", 0, 0, 0 },
	/* 04b */	{ "", 0, 0, 0 },
	/* 04c */	{ "", 0, 0, 0 },
	/* 04d */	{ "", 0, 0, 0 },
	/* 04e */	{ "", 0, 0, 0 },
	/* 04f */	{ "", 0, 0, 0 },
	/* 050 */	{ "", 0, 0, 0 },
	/* 051 */	{ "", 0, 0, 0 },
	/* 052 */	{ "", 0, 0, 0 },
	/* 053 */	{ "", 0, 0, 0 },
	/* 054 */	{ "", 0, 0, 0 },
	/* 055 */	{ "", 0, 0, 0 },
	/* 056 */	{ "", 0, 0, 0 },
	/* 057 */	{ "", 0, 0, 0 },
	/* 058 */	{ "", 0, 0, 0 },
	/* 059 */	{ "", 0, 0, 0 },
	/* 05a */	{ "", 0, 0, 0 },
	/* 05b */	{ "", 0, 0, 0 },
	/* 05c */	{ "", 0, 0, 0 },
	/* 05d */	{ "", 0, 0, 0 },
	/* 05e */	{ "", 0, 0, 0 },
	/* 05f */	{ "", 0, 0, 0 },
	/* 060 */	{ "", 0, 0, 0 },
	/* 061 */	{ "", 0, 0, 0 },
	/* 062 */	{ "", 0, 0, 0 },
	/* 063 */	{ "", 0, 0, 0 },
	/* 064 */	{ "", 0, 0, 0 },
	/* end */	{ 0, 0, 0, 0 }
};
#endif

 /* Interface Segment Image COMM: */

extern long int IT_SETQUE();
extern long int IT_SETCOM();
extern long int IT_1I1LPV1I();

static long int (*seg_image_COMM_0[])() = 
#if !defined(TWIN_EMPTY_MODTABLE)
{
	/* 000 */	Trap, 0,
	/* 001 */	IT_1LPDCB, inicom,
	/* 002 */	IT_1LPDCB, setcom,
	/* 003 */	IT_SETQUE, setque,
	/* 004 */	IT_1I, reccom,
	/* 005 */	IT_2I, sndcom,
	/* 006 */	IT_2I, ctx,
	/* 007 */	IT_1I, trmcom,
	/* 008 */	IT_1I1LPCOMSTAT, stacom,
	/* 009 */	IT_2I, cextfcn,
	/* 00a */	IT_2I, cflush,
	/* 00b */	IT_2I, cevt,
	/* 00c */	IT_2I, cevtGet,
	/* 00d */	IT_1I1LPV1I, CommWriteString,
	/* 00e */	IT_1I, cclrbrk,
	/* 00f */	IT_1I, getdcb,
	/* 010 */	Trap, 0,
	/* 011 */	IT_V, SuspendOpenCommPorts,
	/* 012 */	IT_V, ReactivateOpenCommPorts,
	/* 013 */	IT_1I1LPV1I, CommWriteString,
	/* 014 */	Trap, ReadCommString,
	/* 015 */	Trap, 0,
	/* 016 */	Trap, 0,
	/* 017 */	Trap, 0,
	/* 018 */	Trap, 0,
	/* 019 */	Trap, 0,
	/* 01a */	Trap, 0,
	/* 01b */	Trap, 0,
	/* 01c */	Trap, 0,
	/* 01d */	Trap, 0,
	/* 01e */	Trap, 0,
	/* 01f */	Trap, 0,
	/* 020 */	Trap, 0,
	/* 021 */	Trap, 0,
	/* 022 */	Trap, 0,
	/* 023 */	Trap, 0,
	/* 024 */	Trap, 0,
	/* 025 */	Trap, 0,
	/* 026 */	Trap, 0,
	/* 027 */	Trap, 0,
	/* 028 */	Trap, 0,
	/* 029 */	Trap, 0,
	/* 02a */	Trap, 0,
	/* 02b */	Trap, 0,
	/* 02c */	Trap, 0,
	/* 02d */	Trap, 0,
	/* 02e */	Trap, 0,
	/* 02f */	Trap, 0,
	/* 030 */	Trap, 0,
	/* 031 */	Trap, 0,
	/* 032 */	Trap, 0,
	/* 033 */	Trap, 0,
	/* 034 */	Trap, 0,
	/* 034 */	Trap, 0,
	/* 036 */	Trap, 0,
	/* 037 */	Trap, 0,
	/* 038 */	Trap, 0,
	/* 039 */	Trap, 0,
	/* 03a */	Trap, 0,
	/* 03b */	Trap, 0,
	/* 03c */	Trap, 0,
	/* 03d */	Trap, 0,
	/* 03e */	Trap, 0,
	/* 03f */	Trap, 0,
	/* 040 */	Trap, 0,
	/* 041 */	Trap, 0,
	/* 042 */	Trap, 0,
	/* 043 */	Trap, 0,
	/* 044 */	Trap, 0,
	/* 045 */	Trap, 0,
	/* 046 */	Trap, 0,
	/* 047 */	Trap, 0,
	/* 048 */	Trap, 0,
	/* 049 */	Trap, 0,
	/* 04a */	Trap, 0,
	/* 04b */	Trap, 0,
	/* 04c */	Trap, 0,
	/* 04d */	Trap, 0,
	/* 04e */	Trap, 0,
	/* 04f */	Trap, 0,
	/* 050 */	Trap, 0,
	/* 051 */	Trap, 0,
	/* 052 */	Trap, 0,
	/* 053 */	Trap, 0,
	/* 054 */	Trap, 0,
	/* 055 */	Trap, 0,
	/* 056 */	Trap, 0,
	/* 057 */	Trap, 0,
	/* 058 */	Trap, 0,
	/* 059 */	Trap, 0,
	/* 05a */	Trap, 0,
	/* 05b */	Trap, 0,
	/* 05c */	Trap, 0,
	/* 05d */	Trap, 0,
	/* 05e */	Trap, 0,
	/* 05f */	Trap, 0,
	/* 060 */	Trap, 0,
	/* 061 */	Trap, 0,
	/* 062 */	Trap, 0,
	/* 063 */	Trap, 0,
	/* 064 */	IT_1I1H2I, EnableNotification,
	0
};
#else
{
	/* nil */	0, 0,
	/* 001 */	Trap, 0,
	/* 002 */	Trap, 0,
	/* 003 */	Trap, 0,
	/* 004 */	Trap, 0,
	/* 005 */	Trap, 0,
	/* 006 */	Trap, 0,
	/* 007 */	Trap, 0,
	/* 008 */	Trap, 0,
	/* 009 */	Trap, 0,
	/* 00a */	Trap, 0,
	/* 00b */	Trap, 0,
	/* 00c */	Trap, 0,
	/* 00d */	Trap, 0,
	/* 00e */	Trap, 0,
	/* 00f */	Trap, 0,
	/* 010 */	Trap, 0,
	/* 011 */	Trap, 0,
	/* 012 */	Trap, 0,
	/* 013 */	Trap, 0,
	/* 014 */	Trap, 0,
	/* 015 */	Trap, 0,
	/* 016 */	Trap, 0,
	/* 017 */	Trap, 0,
	/* 018 */	Trap, 0,
	/* 019 */	Trap, 0,
	/* 01a */	Trap, 0,
	/* 01b */	Trap, 0,
	/* 01c */	Trap, 0,
	/* 01d */	Trap, 0,
	/* 01e */	Trap, 0,
	/* 01f */	Trap, 0,
	/* 020 */	Trap, 0,
	/* 021 */	Trap, 0,
	/* 022 */	Trap, 0,
	/* 023 */	Trap, 0,
	/* 024 */	Trap, 0,
	/* 025 */	Trap, 0,
	/* 026 */	Trap, 0,
	/* 027 */	Trap, 0,
	/* 028 */	Trap, 0,
	/* 029 */	Trap, 0,
	/* 02a */	Trap, 0,
	/* 02b */	Trap, 0,
	/* 02c */	Trap, 0,
	/* 02d */	Trap, 0,
	/* 02e */	Trap, 0,
	/* 02f */	Trap, 0,
	/* 030 */	Trap, 0,
	/* 031 */	Trap, 0,
	/* 032 */	Trap, 0,
	/* 033 */	Trap, 0,
	/* 034 */	Trap, 0,
	/* 035 */	Trap, 0,
	/* 036 */	Trap, 0,
	/* 037 */	Trap, 0,
	/* 038 */	Trap, 0,
	/* 039 */	Trap, 0,
	/* 03a */	Trap, 0,
	/* 03b */	Trap, 0,
	/* 03c */	Trap, 0,
	/* 03d */	Trap, 0,
	/* 03e */	Trap, 0,
	/* 03f */	Trap, 0,
	/* 040 */	Trap, 0,
	/* 041 */	Trap, 0,
	/* 042 */	Trap, 0,
	/* 043 */	Trap, 0,
	/* 044 */	Trap, 0,
	/* 045 */	Trap, 0,
	/* 046 */	Trap, 0,
	/* 047 */	Trap, 0,
	/* 048 */	Trap, 0,
	/* 049 */	Trap, 0,
	/* 04a */	Trap, 0,
	/* 04b */	Trap, 0,
	/* 04c */	Trap, 0,
	/* 04d */	Trap, 0,
	/* 04e */	Trap, 0,
	/* 04f */	Trap, 0,
	/* 050 */	Trap, 0,
	/* 051 */	Trap, 0,
	/* 052 */	Trap, 0,
	/* 053 */	Trap, 0,
	/* 054 */	Trap, 0,
	/* 055 */	Trap, 0,
	/* 056 */	Trap, 0,
	/* 057 */	Trap, 0,
	/* 058 */	Trap, 0,
	/* 059 */	Trap, 0,
	/* 05a */	Trap, 0,
	/* 05b */	Trap, 0,
	/* 05c */	Trap, 0,
	/* 05d */	Trap, 0,
	/* 05e */	Trap, 0,
	/* 05f */	Trap, 0,
	/* 060 */	Trap, 0,
	/* 061 */	Trap, 0,
	/* 062 */	Trap, 0,
	/* 063 */	Trap, 0,
	/* 064 */	Trap, 0,
	0, 0
};
#endif

 /* Segment table COMM: */

static SEGTAB seg_tab_COMM[] = {
	{ (char*)seg_image_COMM_0, 800, TRANSFER_CALLBACK, 800, 0, 0 },
	/* end */       { 0, 0, 0, 0, 0, 0 }
};

 /* Module Descriptor for COMM: */

static MODULEDSCR hsmt_mod_dscr_COMM = {
	"COMM",
	entry_tab_COMM,
	seg_tab_COMM,
	0
};

#endif /* NO_WINCOMM */

