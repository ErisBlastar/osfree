diff --git a/dlls/kernel32/comm.c b/dlls/kernel32/comm.c
index 076b761..93d1b55 100644
--- a/dlls/kernel32/comm.c
+++ b/dlls/kernel32/comm.c
@@ -75,6 +75,10 @@ static LPCWSTR COMM_ParseStart(LPCWSTR p
 			ptr++;
 			while(*ptr == ' ') ptr++;
 		}
+		
+		/* If only device name is provided */
+		if(*ptr == '\0')
+			return NULL;
 	}
 	/* The device control string must not start with a space. */
 	else if(*ptr == ' ')
@@ -193,7 +197,9 @@ static BOOL COMM_BuildOldCommDCB(LPCWSTR
 {
 	WCHAR last = 0;
 
-	if(!(device = COMM_ParseNumber(device, &lpdcb->BaudRate)))
+	/*It's okay if only BaudRate is provided.*/
+	if(!(device = COMM_ParseNumber(device, &lpdcb->BaudRate)) && 
+       !lpdcb->BaudRate)
 		return FALSE;
 	
 	switch(lpdcb->BaudRate)
@@ -215,7 +221,13 @@ static BOOL COMM_BuildOldCommDCB(LPCWSTR
 	}
 
 	while(*device == ' ') device++;
-	if(*device++ != ',') return FALSE;
+
+	/* if only BaudRate is provided (no parity,bytesize,...). We skip to the 
+	 * default properties*/
+	if(*device == '\0')
+		goto Default_Settings;
+
+	if(*device++ != ',' ) return FALSE;
 	while(*device == ' ') device++;
 
 	if(!(device = COMM_ParseParity(device, &lpdcb->Parity)))
@@ -235,6 +247,7 @@ static BOOL COMM_BuildOldCommDCB(LPCWSTR
 	if(!(device = COMM_ParseStopBits(device, &lpdcb->StopBits)))
 		return FALSE;
 
+Default_Settings:
 	/* The last parameter for flow control is optional. */
 	while(*device == ' ') device++;
 	if(*device == ',')
@@ -491,9 +504,11 @@ BOOL WINAPI BuildCommDCBAndTimeoutsW(
 
 	ptr = COMM_ParseStart(ptr);
 
-	if(ptr == NULL)
+	if((ptr == NULL) || (*ptr==','))
 		result = FALSE;
-	else if(strchrW(ptr, ','))
+	else if(!strchrW(ptr, '='))  /* use = rather than , to identify old/new 
+									style since	the old style does not 
+									necessarily contain , */
 		result = COMM_BuildOldCommDCB(ptr, &dcb);
 	else
 		result = COMM_BuildNewCommDCB(ptr, &dcb, &timeouts);
