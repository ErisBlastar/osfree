.*
.* gbmdlg.scr - Help for Gbm file formats dialog
.*
.* Important: Only edit the original .SCR file.
.* If this file is not by the filename given above, then it has been put
.* through IPFCPREP and so will be regenerated next MAKE.
.*
.imd gbmdlgrc.h
.*...vgbmdlgrc\46\h:0:
:userdoc.
.*...sprolog:0:
:prolog.
:title.GbmDlg Hilfe
:author.Andy Key, Deutsche öbersetzung&colon. Heiko Nitzsche
:eprolog.
.*...e
:toc.
:body.
.*...sHID_GBM_FILEDLG   \45\ Bitmap Datei-Dialog:0:
:h1 res=&HID_GBM_FILEDLG..Bitmap Datei-Dialog
:i1 id=gbmfile.Bitmap Datei-Dialog
:p.Dieser Dialog erlaubt das Laden einer Bitmap aus einer Datei bzw.
das Speichern einer Bitmap in eine Datei.
Dateinamen und Verzeichnisse kînnen Åber die Listen mit Hilfe der
Tastatur oder der Maus Ñhnlich wie bei jedem anderen Datei-Dialog
ausgewÑhlt werden.
:p.Er unterstÅtzt eine Vielzahl an Bitmap-Formaten. Beispiele sind
OS/2 Bitmap, CompuServe GIF, ZSoft PCX und viele andere mehr.
:p.Ein öberblick Åber alle unterstÅtzten Bitmap-Formate und die
formatspezifischen Optionen befindet sich im Kapitel
:link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
dieser Hilfe.
:p.Die in der Dateiliste anzuzeigenden Bilddateien kînnen Åber den
:hp2.Bilddateityp-Filter:ehp2. festgelegt werden.
Es kînnen dabei die Kategorien :hp2.<Alle Dateien>:ehp2. und
:hp2.<Alle unterstÅtzten Formate>:ehp2. ausgewÑhlt werden sowie ein
spezifisches :hp2.<Format>:ehp2..
:p.Die Kategoriezugehîrigkeit einer Datei wird Åber seine :hp2.Dateierweiterung:ehp2.
bestimmt. Das Format der Bilddatei wird nach deren Auswahl Åber den Dateiinhalt
ermittelt.
:p.Das Eingabefeld :hp2.Optionale bildformatspezifischen Optionen:ehp2. ermîglicht
die Angabe zusÑtzlicher Optionen zur Beeinflussung der Bilddaten-Interpretation
beim Laden oder Speichern. So kann z.B. fÅr ein GIF-Bild festgelegt werden, dass
korrupte Bitmapdaten ignoriert werden sollen (:hp9.soweit mîglich:ehp9.).
.*...e
.*...sHID_GBM_SUPPORT   \45\ Bitmap Dateiformat-UnterstÅtzung:0:
:h1 res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung
:i1 id=gbmsupp.Bitmap Dateiformat-UnterstÅtzung
:p.Dieses Programm verwendet die Bibliothek :hp2.Generalised Bitmap Module:ehp2..
Die GBM-Bibliothek kann Bitmaps in verschiedenen Bildformaten laden und speichern.
Das Programm muss nichts Åber das eigentliche Bildformat der Bitmap wissen, da die
Bibliothek jede unterstÅtzte Bitmap in ein Standardformat konvertiert.
:p.FÅr einige Bildformate kînnen zusÑtzliche :hp2.Optionen:ehp2. angegeben werden.
Diese sind folgenderma·en hervorgehoben dargestellt: :hp9.Optionsname:ehp9..
:p.Der folgende Abschnitt beschreibt alle unterstÅtzten Bildformate&colon.
:p.
UnterstÅtzt werden &colon.
:sl.
:li.:link reftype=hd res=&HID_GBM_BITMAP..OS/2 / Windows Bitmap:elink.
:li.:link reftype=hd res=&HID_GBM_GIF..CompuServe Graphics Interchange Format:elink.
:li.:link reftype=hd res=&HID_GBM_PCX..ZSoft PC Paintbrush Image Format:elink.
:li.:link reftype=hd res=&HID_GBM_TIFF..Microsoft/Aldus Tagged Image File Format:elink.
:li.:link reftype=hd res=&HID_GBM_TARGA..Truevision Targa/Vista:elink.
:li.:link reftype=hd res=&HID_GBM_ILBM..Amiga IFF / ILBM Interleaved Bitmap Format:elink.
:li.:link reftype=hd res=&HID_GBM_YUV12C..YUV12C M-Motion Frame Buffer:elink.
:li.:link reftype=hd res=&HID_GBM_PBITMAP..Portable Bit-map:elink.
:li.:link reftype=hd res=&HID_GBM_GREYMAP..Portable Greyscale-map:elink.
:li.:link reftype=hd res=&HID_GBM_PIXMAP..Portable Pixel-map:elink.
:li.:link reftype=hd res=&HID_GBM_ANYMAP..Portable Anymap:elink.
:li.:link reftype=hd res=&HID_GBM_PNG..Portable Network Graphics:elink.
:li.:link reftype=hd res=&HID_GBM_KIPS..IBM KIPS:elink.
:li.:link reftype=hd res=&HID_GBM_IAX..IBM Image Access eXecutive:elink.
:li.:link reftype=hd res=&HID_GBM_XBITMAP..X Windows Bitmap:elink.
:li.:link reftype=hd res=&HID_GBM_XPIXMAP..X Windows PixMap:elink.
:li.:link reftype=hd res=&HID_GBM_SPRITE..RiscOS Sprite:elink.
:li.:link reftype=hd res=&HID_GBM_PSEG..IBM Printer Page Segment:elink.
:li.:link reftype=hd res=&HID_GBM_GEMRAS..GEM Raster:elink.
:li.:link reftype=hd res=&HID_GBM_PORTRAIT..Portrait:elink.
:li.:link reftype=hd res=&HID_GBM_JPEG..JPEG Interchange File Format:elink.
:li.:link reftype=hd res=&HID_GBM_OTHERS..Andere:elink.
:esl.
:p.Der :link reftype=hd res=&HID_GBM_FILEDLG..Bitmap Datei-Dialog:elink.
unterstÅtzt alle oben genannten Bilddateiformate.
.*...e
.*...sHID_GBM_BITMAP    \45\   OS\47\2 \47\ Windows Bitmap:0:
:h2 res=&HID_GBM_BITMAP..OS/2 / Windows Bitmap
:i2 refid=gbmsupp.OS/2 / Windows Bitmap
:p.Die Dateierweiterungen
:xmp.
  .BMP .VGA .BGA .RLE .DIB .RL4 .RL8
:exmp.
werden als OS/2 1.1, 1.2, 2.0, Windows 3.x oder
Windows NT/2000/XP Bitmap erkannt.
:p.:hp2.Lesen:ehp2.
:p.Es werden fast alle Unterformate unterstÅtzt, ob unkomprimiert,
RLE(LauflÑngen)-komprimiert (RLE4, RLE8, RLE24) oder Windows Multimedia
Bitmaps (RGB, BITFIELDS: 16 and 32bpp).
:p.Nicht unterstÅtzt werden CCITT G3 MH Fax komprimierte Dateien sowie
OS/2 Huffman 1D komprimierte Dateien.
:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.inv:ehp9.
:dd.Invertiert die Farbpalette nach dem Laden. Damit kann die
Interpretation der Farbpalette beeinflusst werden.
Einige Windows- und OS/2-Programme unterscheiden sich in der
Art und Weise wie sie die 1bpp Farbpalette auswerten.
:dt.:hp9.invb:ehp9.
:dd.Invertiert die Bilddaten nach dem Laden.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.Bilder kînnen in beiden OS/2-Formaten (1.1 und 2.0) sowie im
Windows 3.0 Format gespeichert werden.
:p.StandardmÑ·ig werden Bilder im OS/2 2.0 bzw. Windows 3.0 Format gespeichert.
Dabei wird eine LÑnge des Datei-Headers von 40 Bytes (cbFix) verwendet, die
kompatibel zu beiden Formaten ist.
:dl compact tsize=7 break=all.
:dt.:hp9.1.1:ehp9.
:dd.Speichert das Bild im OS/2 1.1 Format.
:dt.:hp9.2.0:ehp9. oder :hp9.win:ehp9.
:dd.Speichert das Bild im OS/2 2.0 bzw. Windows 3.0 Format.
:dt.:hp9.inv:ehp9.
:dd.Invertiert die Farbpalette vor dem Speichern.
(Einige Windows- und OS/2-Programme unterscheiden sich in der
Art wie sie die 1bpp Farbpalette auswerten.)
:dt.:hp9.invb:ehp9.
:dd.Invertiert die Bilddaten vor dem Speichern.
:dt.:hp9.darkfg:ehp9.
:dd.Die ist offensichtlich die beste Option wenn es darum geht,
eine 1bpp Bitmap zu Speichern. Sie stellt sicher, dass die dunkelste
Farbe in der Bitmap auf 1 (und damit die Vordergrundfarbe) abgebildet wird.
Wenn die Bitmap erneut geladen wird, wird diese ursprÅnglich dunkle Farbe
Schwarz sein.
:dt.:hp9.lightfg:ehp9.
:dd.Im Gegensatz zur Option darkfg wird hier die hellste Farbe
der Bitmap auf 1 abgebildet.
:edl.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_GIF       \45\   CompuServe Graphics Interchange Format:0:
:h2 res=&HID_GBM_GIF..CompuServe Graphics Interchange Format
:i2 refid=gbmsupp.CompuServe Graphics Interchange Format
:p.Die Dateierweiterung
:xmp.
  .GIF
:exmp.
wird als GIF-Bild erkannt.
:p.:hp2.Lesen:ehp2.
:p.1 bpp GIF-Bilder werden als 1 bpp Bitmap bereitgestellt.
.br
2, 3 und 4 bit GIF-Bilder werden als 4 bpp Bitmap bereitgestellt.
.br
5, 6, 7 und 8 bit GIF-Bilder werden als 8 bpp Bitmap bereitgestellt.
:p.Das GIF-Formate unterstÅtzt keine Farbtiefen von 24 bpp oder grî·er.
:p.Beide Unterformate, :hp2.GIF87a:ehp2. und :hp2.GIF89a:ehp2.,
kînnen gelesen werden.
:p.Der Algorithmus unterstÅtzt auch verzîgerte clear-codes im LZW Datenstrom.
Einige Ñltere Programme scheitern oft an Dateien mit dieser Besonderheit.
:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.errok:ehp9.
:dd.Wenn eine fehlerhafte oder gekÅrzte GIF-Datei festgestellt wird, bricht
der Lesevorgang normalerweise mit einer Fehlermeldung ab. Diese Option Åberschreibt
diese Verhalten, so dass soviele Daten wie mîglich gelesen werden.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.StandardmÑ·ig wird das Bild im :hp2.GIF87a:ehp2. Unterformat gespeichert.
Da der GIF-Standard abwÑrtskompatibel ist, sollten alle Programme die
normalerweise GIF-Bilder lesen kînnen, die hiermit erzeugten Dateien lesen kînnen.
:p.Wird jedoch die Option :hp2.transcol:ehp2. verwendet, wird das Bild im
:hp2.GIF89a:ehp2. Unterformat gespeichert.
:p.Der Algorithmus erzeugt keine GIF-Dateien, die verzîgerte clear-codes enthalten,
da diese einigen Ñlteren Programmen Probleme bereiten.
:dl compact tsize=7 break=all.
:dt.:hp9.xscreen=N:ehp9.,:hp9.yscreen=N:ehp9.
:dd.öberschreibt die Standardwerte fÅr Breite und Hîhe im Datei-Header.
:dt.:hp9.background=N:ehp9.
:dd.Definiert den Farbindex der Hintergrundfarbe im Datei-Header.
(Standard ist 0.)
:dt.:hp9.xpos=N:ehp9.,:hp9.ypos=N:ehp9.
:dd.öberschreibt die Standardwerte fÅr den Koordinatenursprung im Datei-Header.
(Standard sind xpos=0 und ypos=0.)
:dt.:hp9.transcol=N:ehp9.
:dd.Legt den Farbindex N als Transparenzfarbe fest.
Diese Option ist hilfreich, wenn die GIF-Datei in einer HTML-Seite eingebettet
werden soll. Diese Option erfordert, dass das GIF-Unterformat GIF89a (nicht GIF87a)
fÅr die GIF-Datei verwendet wird, um die Transparenzinformationen im
Graphics Extension Block ablegen zu kînnen.
:dt.:hp9.transcol=edge:ehp9.
:dd.Hiemit kann festgelegt werden, dass die Farbe des ersten Pixels der Bitmap
als Transparenzfarbe interpretiert wird.
:dt.:hp9.ilace:ehp9.
:dd.Aktiviert das Schreiben von Interlaced-GIFs. Diese Option ist hilfreich,
wenn die GIF-Datei in einer HTML-Seite eingebettet werden soll. Das Bild
baut sich damit schrittweise im Browser auf.
:edl.
:p.Der Algorithmus unterstÅtzt auch 1bpp GIF-Dateien.
Einige Programme machen unzulÑssige Annahmen Åber die LZW code Tabellengrî·e
bei 1bpp Bildern und scheitern damit beim Lesen. Tritt dieses Problem auf,
dann sollte die Bitmap mit einer hîheren Farbtiefe gespeichert werden.
:p.Der Programmcode wurde mit einer Vielzahl von Dateien aus verschiedenen Quellen
getestet. Er wurde mit Dateien des Public Domain Programms PPMTOGIF.EXE und,
zur KompatibilitÑtsprÅfung mit UNIX X-Windows Programmen, mit xloadimage and xv
ÅberprÅft.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
:p.GIF und 'Graphics Interchange Format' sind Warenzeichen (tm) von
Compuserve, Incorporated, an H&amp.R Block Company.
.*...e
.*...sHID_GBM_PCX       \45\   ZSoft PC Paintbrush Image Format:0:
:h2 res=&HID_GBM_PCX..ZSoft PC Paintbrush Image Format
:i2 refid=gbmsupp.ZSoft PC Paintbrush Image Format
:p.Die Dateierweiterungen
:xmp.
  .PCX .PCC
:exmp.
werden als Paintbrush-Bild erkannt.
:p.Nur ein Teil der mîglichen Ebenen/Bits pro Ebene Kombinationen
wird unterstÅtzt.
:p.:hp2.Lesen:ehp2.
:p.Das Programm liest Bilder mit 1,4,8 und 24 bpp Farbtiefe.
:p.RLE komprimierte Dateien kînnen ebenfalls gelesen werden.
:p.Komprimierte Pixelblîcke sollten sich nicht Åber mehrere Scanlines erstrecken.
Einige andere Anwendungen verletzen jedoch diese Regel.
StandardmÑ·ig versucht der Code Pixelblîcke, die sich Åber das Ende einer Scanline
hinaus erstrecken, in die nÑchste Scanline zu Åbernehmen.
Einige Bilder kînnen so nicht geladen werden, da sie vom Programm
erwarten, dass es die Åber das Ende der Scanline hinausgehenden Pixel, ignoriert.
Dieses Verhalten kann jedoch Åber die Option :hp9.trunc:ehp9. aktiviert werden.
:p.:hp2.Schreiben:ehp2.
:p.Das Programm schreibt Bilder mit 1,4,8 und 24 bpp Farbtiefe unter Verwendung von RLE-Kompression.
:p.Es achtet dabei darauf, dass sich komprimierte Pixelblîcke nicht Åber das Ende einer Scanline erstrecken.
:p.Der Algorithmus wurde mit einigen von PC Paintbrush stammenden .PCX-Dateien getestet.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_TIFF      \45\   Microsoft\47\Aldus Tagged Image File Format:0:
:h2 res=&HID_GBM_TIFF..Microsoft/Aldus Tagged Image File Format
:i2 refid=gbmsupp.Microsoft/Aldus Tagged Image File Format
:p.Die Dateierweiterungen
:xmp.
  .TIF .TIFF
:exmp.
werden als TIFF-Bilder erkannt.
:p.:hp2.Lesen:ehp2.
:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p.  1 bit S/W-, Palette- und Graustufenbilder werden als  1 bpp Bitmap bereitgestellt.
.br
  2 bit Palette- und Graustufenbilder werden als  4 bpp Bitmap bereitgestellt.
.br
  4 bit Palette- und Graustufenbilder werden als  4 bpp Bitmap bereitgestellt.
.br
  8 bit Palette- und Graustufenbilder werden als  8 bpp Bitmap bereitgestellt.
.br
 16 bit Palette- und Graustufenbilder werden als 24 bpp Bitmap bereitgestellt.
.br
 24 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 32 bit RGB-Bilder (RGB + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 64 bpp RGB-Bilder (RGB + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.
.br
 CMYK-Bilder (8 bit/Kanal) werden als 24 bpp RGB-Bitmap bereitgestellt (nur strip encoded).
.br
 CMYK-Bilder (16 bit/Kanal) werden als 24 bpp RGB-Bitmap bereitgestellt (nur strip encoded).

:p.:hp2.Erweiterte Formate (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p. 16 bit Palette- und Graustufenbilder werden als 48 bpp Bitmap bereitgestellt (nur strip encoded).
.br
 32 bit RGB-Bilder (RGB + Alphakanal) werden als 32 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 48 bpp Bitmap bereitgestellt (nur strip encoded).
.br
 64 bit RGB-Bilder (RGB + Alphakanal) werden als 64 bpp Bitmap bereitgestellt (nur strip encoded).
.br
 CMYK-Bilder (16 bit/Kanal) werden als 48 bpp RGB-Bitmap (nur strip encoded).

:p.:hp2.Handhabung des Alphakanals:ehp2.
:p.Wenn das Bild bereits einen assoziierten Alphakanal enthÑlt (vormultiplizierte Alphawerte),
wird der Alphakanal nicht separat bereitgestellt. In diesem Fall wird eine angegebene
Hintergrundfarbe ignoriert.
Wenn das Bild einen nichtassoziierten Alphakanal enthÑlt (nicht vormultipliziert),
wird der Alphakanal separat bereitgestellt. Gibt der Benutzer eine Hintergrundfarbe
vor, wird der Alphakanal jedoch gegen diese verrechnet.
Wurde die Option ext_bpp nicht angegeben, das Bild enthÑlt jedoch einen nichtassoziierten Alphakanal,
wird dieser jedoch nur dann verwendet, wenn auch eine Hintergrundfarbe angegeben wurde.
Sonst wird der Alphakanal ignoriert

:p.Die Bittiefe des Alphakanals entspricht in allen FÑllen der Bittiefe der FarbkanÑle.

:p.:hp2.UnterstÅtzt werden die Kompressionsschemas:ehp2.
unkomprimiert, LZW, PackBits, ThunderScan, NeXT, JPEG, CCITT, Deflate, Adobe Deflate.

:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.back_rgb=R_G_B:ehp9.
:dd.Definiert die RGB-Hintergrundfarbe, gegen die ein Alphakanal gerendert wird.
(nur fÅr Bilder mit nichtassoziiertem Alphakanal, R_G_B jeweils 0..65535)
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen (auch mit Alphakanal). Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.

:p.:hp2.Schreiben:ehp2.
:p.Das Programm schreibt 1, 4, 8, 24, 32 (24 bpp + alpha), 48, 64 (48 bpp + alpha) bpp RGB-Bilder.
:p.StandardmÑ·ig schreibt das Programm unkomprimierte Dateien.
Die Bittiefe des Alphakanals entspricht in allen FÑllen der Bittiefe der FarbkanÑle.
:p.
:p.:hp2.Handhabung des Alphakanals:ehp2.
:p.GBM erlaubt das Schreiben eines nichtassoziierten Alphakanals (32 und 64 bpp).
Durch die Angabe einer Hintergrundfarbe, kann ein nichtassoziierter Alphakanal assoziiert,
also gegen die Hintergrundfarbe verrechnet werden (Option back_rgb).
Falls der Alphakanal bereits vom Programm assoziiert wurde (vormultipliziert), sollten
die Farbtiefen 24 und 48 bpp verwendet werden.

:p.Die Bittiefe des Alphakanals entspricht in allen FÑllen der Bittiefe der FarbkanÑle.

:dl compact tsize=7 break=all.
:dt.:hp9.back_rgb=R_G_B:ehp9.
:dd.Definiert die Hintergrundfarbe, gegen die ein nichtassoziierter Alphakanal
verrechnet wird. (Der Alphakanal bleibt in der Datei erhalten, R_G_B: je 0..65535)
:dt.:hp9.artist=TEXT:ehp9.
:dd.Erzeugt einen :hp2.Artist:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.software=TEXT:ehp9.
:dd.Erzeugt einen :hp2.Software:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.make=TEXT:ehp9.
:dd.Erzeugt einen :hp2.Make:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.model=TEXT:ehp9.
:dd.Erzeugt einen :hp2.Model:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.host=TEXT:ehp9.
:dd.Erzeugt einen :hp2.Host:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.documentname=TEXT:ehp9.
:dd.Erzeugt einen :hp2.DocumentName:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.pagename=TEXT:ehp9.
:dd.Erzeugt einen :hp2.PageName:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.imagedescription=TEXT:ehp9.
:dd.Erzeugt einen :hp2.ImageDescription:ehp2. Tag mit dem Text TEXT.
:dt.:hp9.pal1bpp:ehp9.
:dd.Legt fest, dass 1 bpp Daten als farbpalettenbasierte Datei mit 2 FarbeintrÑgen
geschrieben werden. StandardmÑ·ig werden S/W-Bilder automatisch erkannt und
als solche geschrieben. Nicht S/W-Bilder werden als Palettenbilder geschrieben.
Die Option wurde aus KompatibilitÑtsgrÅnden beibehalten.
:dt.:hp9.lzw:ehp9.
:dd.Aktiviert die LZW-Komprimierung.
:dt.:hp9.lzw_pred_hor:ehp9.
:dd.Aktiviert die LZW-Komprimierung mit horizontaler Differenzierung.
:dt.:hp9.packbits:ehp9.
:dd.Aktiviert die PackBits-Komprimierung.
:dt.:hp9.deflate:ehp9.
:dd.Aktiviert die Deflate-Komprimierung (ZIP, Adobe kompatibel).
:dt.:hp9.deflate_comp=N:ehp9.
:dd.Definiert den Kompressionsfaktor fÅr die Deflate-Komprimierung
(Standard: 6, N=1..9 keine bis max. Kompression).
:dt.:hp9.jpeg:ehp9.
:dd.Aktiviert die JPEG-Komprimierung (verlustbehaftet).
:dt.:hp9.jpeg_quality=N:ehp9.
:dd.Definiert die QualitÑt fÅr die JPEG-Komprimierung (Standard: 75, N=0..100).
:dt.:hp9.ccittrle:ehp9.
:dd.Aktiviert CCITT modified Huffman RLE Encoding (nur fÅr 1 bit/pixel).
:dt.:hp9.ccittfax3:ehp9.
:dd.Aktiviert CCITT Gruppe 3 Fax-Encoding (nur fÅr 1 bit/pixel).
:dt.:hp9.ccittfax4:ehp9.
:dd.Aktiviert CCITT Gruppe 4 Fax-Encoding (nur fÅr 1 bit/pixel).
:dt.:hp9.strip_size=N:ehp9.
:dd.Definiert die Strip-Grî·e. (N=4,8,16,32,64 kBytes, Standard: 16)
:edl.
:p.In keinem Tag TEXT dÅrfen Leerzeichen enthalten sein.
:p.GBM kann mit oder ohne UnterstÅtzung fÅr TIF kompiliert werden.
Wenn TIF nicht in der Liste der unterstÅtzten Bildformate des Datei-Dialogs
erscheint, wird eine GBM.DLL ohne TIF-UnterstÅtzung verwendet.
:p.Die TIF-UnterstÅtzung der GBM wird von den Bibliotheken Libtiff, ZLib und IJG JPEG6B
bereitgestellt. Alle Bibliotheken sind Open Source Software. Sie dÅrfen frei verwendet
werden, wenn auf sie verwiesen wird (deshalb werden sie in GBM verwendet und deshalb
existiert auch dieser Absatz in der Online-Hilfe).
:p.Der Schnittstellencode der GBM zur Libtiff wurde von Heiko Nitzsche geschrieben.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_TARGA     \45\   Truevision Targa\47\Vista bitmap:0:
:h2 res=&HID_GBM_TARGA..Truevision Targa/Vista bitmap
:i2 refid=gbmsupp.Truevision Targa/Vista bitmap
:p.Die Dateierweiterungen
:xmp.
  .TGA .VST .AFI
:exmp.
werden als Targa/Vista Dateien erkannt.
:p.Es kînnen sowohl unkomprimierte als auch RLE komprimierte Targa/Vista-Formate
gelesen werden. Geschrieben werden jedoch immer unkomprimierte Dateien.

:p.:hp2.Lesen:ehp2.
:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p.  8 bit Paletten-/Graustufenbilder werden als  8 bpp Bitmap bereitgestellt.
.br
 16 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt (siehe unten).
.br
 24 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 32 bit RGB-Bilder (RGB + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.

:p.:hp2.Erweiterte Formate (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p. 32 bit RGB-Bilder (RGB + Alphakanal) werden als 32 bpp Bitmap bereitgestellt.

:p.Der Algorithmus liest Dateien mit beiden Arten des Koordinatenursprungs, links oben
bzw. links unten. Nicht alle Targa-Lesealgorithmen behandeln Dateien mit dem Urprung
links unten korrekt. Horizontal gespiegelte Targas werden ebenfalls gelesen.
:p.Dateien mit einer Farbtiefe von 16 bpp werden gelesen (5 Bit Rot + 5 Bit GrÅn + 5 Bit Blau + 1 Bit Alpha),
jedoch als 24 bpp Bitmap prÑsentiert, wobei nur die oberen 5 Bits gÅltig sind. Die unteren 3 Bits sind Null.
:p.Beim Lesen von 32 bpp Dateien (8 Bit Rot + 8 Bit GrÅn + 8 Bit Blau + 8 Bit Alpha) wird der
Alpha-Kanal entweder ignoriert oder bereitgestellt (siehe Option ext_bpp).

:dl compact tsize=7 break=all.
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen (auch mit Alphakanal). Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.

:p.:hp2.Schreiben:ehp2.
:dl compact tsize=7 break=all.
:dt.:hp9.yup:ehp9. und :hp9.ydown:ehp9.
:dd.Der Koordinatenursprung liegt links unten (yup) bzw. links oben (ydown).
Standard ist links unten.
:dt.:hp9.16:ehp9.
:dd.Wenn die Bilddaten in einer Farbtiefe von 24 oder 32 bpp vorliegen, dann kann mit Hilfe dieser
Option festgelegt werden, dass nur jeweils 5 Bit von Rot, GrÅn und Blau in ein 16 Bit Pixel
geschrieben werden. Ein evtl. vorhandener Alphakanal wird ignoriert.
:dt.:hp9.24:ehp9.
:dd.Schreibt die Bilddaten in einer Farbtiefe von 24 bpp. Ein evtl. vorhandener Alphakanal wird ignoriert.
Diese Option ist nur fÅr 24/32 bpp Bilddaten gÅltig.
(Standard: 24, wenn die Sourcedaten als 24 bit vorliegen)
:dt.:hp9.32:ehp9.
:dd.Wenn die Bilddaten in einer Farbtiefe von 24 bpp vorliegen, dann kann mit Hilfe dieser
Option festgelegt werden, dass die Daten mit 8 Null-Bits im Alpha-Kanal gestreckt werden,
um auf 32 bpp zu kommen. Liegen die Daten eines echten Alpakanals vor (32 bpp), werden diese verwendet.
Diese Option ist nur fÅr 24/32 bpp Bilddaten gÅltig.
(Standard: 32, wenn die Sourcedaten als 32 bit vorliegen)
:edl.
:p.8 bit Daten werden immer als Farbpalettenbilder geschrieben.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_ILBM      \45\   Amiga IFF \47\ ILBM Interleaved bitmap format:0:
:h2 res=&HID_GBM_ILBM..Amiga IFF / ILBM Interleaved bitmap format
:i2 refid=gbmsupp.Amiga IFF / ILBM Interleaved bitmap format
:p.Die Dateierweiterungen
:xmp.
  .IFF .LBM
:exmp.
werden als Interleaved Bitmap Format Dateien erkannt.
:p.Normalerweise besitzen ILBM-Dateien eine Farbtiefe von 1,2,3,4 oder 5 bpp,
da die ersten Amigas bis zu 32 gleichzeitig darstellbare Farben unterstÅtzten.
Heutzutage existieren jedoch auch Dateien mit 6,7, 8 und 24 bpp Farbtiefe.
:p.:hp2.Extra-HalfBrite:ehp2., oder :hp2.EHB:ehp2. ist ein Modus, bei dem N
Farben FarbpaletteneintrÑge besitzen, die Datei jedoch bis zu 2*N Farben enthalten kann.
Der zweite Teil der Farben entspricht exakt dem des ersten Teils, jedoch mit halber Helligkeit.
Auf diesem Weg konnten z.B. 64 Farben auf dem ersten Amiga dargestellt werden.
:p.:hp2.Hold-And-Modify:ehp2., oder :hp2.HAM:ehp2. ist ein Bildformattyp, bei dem
jedes Pixel entweder eine Farbe aus einer kleineren Farbpalette reprÑsentiert oder
der selben Farbe entspricht wie das Pixel zu seiner Linken. Jedoch kann dabei entweder Rot,
GrÅn oder Blau modifiziert sein.
Auf diesem Weg kann eine wesentlich grî·ere Anzahl von Farben dargestellt werden.
:p.HAM-Modis weisen manchmal unscharfe vertikale Linien bei Abbildungen innerhalb von
Bildern auf, da es manchmal notwendig ist das linke Pixel mehrere Male zu verÑndern, um
die gewÅnschte Farbe zu erreichen, falls diese nicht in der Farbtabelle enthalten ist.
:p.:hp2.HAM6:ehp2. ist ein HAM-Modus, bei dem 16 BasisfarbeintrÑge extistieren und der
es ermîglicht, maximal 4096 Farben darzustellen. Dieser Modus existiert seit den ersten Amigas.
:p.:hp2.HAM8:ehp2. ist ein HAM-Modus, bei dem 64 BasisfarbeintrÑge extistieren und der
Echtfarbendarstellung ermîglicht. Aufgrund der grî·eren Farbpalette ist die UnschÑrfeneigung
geringer als im HAM6-Modus. Diesen Modus gibt es erst auf spÑteren Amigas.
:p.:hp2.Sliced-Hold-And-Modify:ehp2., oder :hp2.SHAM:ehp2. ist ein Modus, bei dem
sich die Farbpalette fÅr jede Scanline Ñndern kann. Dies unterstÅtzt ebenfalls die
Reduzierung der UnschÑrfeneigung (gegenÅber HAM6).
SHAM ist eigentlich sliced HAM6 und kînnte somit auch SHAM6 genannt werden. Diese
Detailierung ist jedoch nicht notwendig, da SHAM8 nicht existiert.
:p.:hp2.Lesen:ehp2.
:p.Es kînnen sowohl unkomprimierte als auch RLE komprimierte Dateien gelesen werden.
:p.1 bpp Dateien werden unverÑndert an das Programm weitergereicht.
.br
2,3 und 4 bpp Dateien werden dem Programm als 4 bpp Daten zur VerfÅgung gestellt.
.br
5,6,7 und 8 bpp Dateien werden dem Programm als 8 bpp Daten zur VerfÅgung gestellt.
.br
24 bpp Dateien werden unverÑndert an das Programm weitergereicht
.br
EHB-Bilder werden dem Programm als 8 bpp Daten zur VerfÅgung gestellt.
.br
HAM6, HAM8 und SHAM werden dem Programm als 24 bpp Daten zur VerfÅgung gestellt.
.br
Nur die :hp2.BMHD:ehp2., :hp2.CMAP:ehp2., :hp2.CAMG:ehp2. und
:hp2.BODY:ehp2. chunks werden beim Lesen einer Datei ausgewertet.
:p.:hp2.Schreiben:ehp2.
:p.Bilder in Farbtiefen 1, 4, 8 und 24 bpp kînnen geschrieben werden.
:p.FÅr 24 bpp Bilder wird auch das HAM6-Format unterstÅtzt.
Das verschlechtert die QualitÑt, ist jedoch immer noch besser als eine 8 bpp Datei.
:p.Der Algorithmus schreibt stets RLE komprimierte Daten, da dies normalerweise zu sehr
viel kleineren Dateigrî·en fÅhrt.
:p.Nur die :hp2.BMHD:ehp2., :hp2.CMAP:ehp2. und :hp2.BODY:ehp2. chunks
werden in die Datei geschrieben.
Werden HAM-Daten geschrieben, wird zusÑtzlich ein :hp2.CAMG:ehp2. chunk erzeugt.
:p.Optional kînnen Teile des BMHD-Headers Åberschrieben werden.
:dl compact tsize=7 break=all.
:dt.:hp9.ham6:ehp9.
:dd.Schreibt 24 bpp Daten im HAM6-Format statt im echten 24 bpp Format.
:dt.:hp9.xpos=N:ehp9.,:hp9.ypos=N:ehp9.
:dd.öberschreibt die Koordinatenursprungsinformation. Standard ist (0,0).
:dt.:hp9.transcol=N:ehp9.
:dd.öberschreibt das Tranzparenzfarben-Feld. Standard ist 0.
:dt.:hp9.xaspect=N:ehp9.,:hp9.yaspect=N:ehp9.
:dd.öberschreibt das Grî·enverhÑltnis. Standard sind 1,1.
Diese Information wird nicht von allen ILBM-Lesealgorithmen interpretiert.
:dt.:hp9.xscreen=N:ehp9.,:hp9.yscreen=N:ehp9.
:dd.öberschreibt die Bildschirmgrî·eninformation.
Diese Information wird selten von ILBM-Lesealgorithmen interpretiert.
StandardmÑ·ig entspricht sie der Bildgrî·e.
:edl.
:p.Es sollte beachtet werden, dass Ñltere Programme beim Versuch eine ILBM-Datei mit
mehr als 5 bpp zu Lesen, in einen 32 Farbmodus (5 bpp) umschalten und nur die 5 wichtigsten
Planes interpretieren. Das sieht normalerweise schlecht aus.
:p.Der Algorithmus wurde mit einer gro·en Anzahl von Beispielbildern getestet.
Nur wenige, dem Autor zur VerfÅgung gestellte Bilder, konnten nicht gelesen werden.
Dazu zÑhlen einige vom DCTV (24bpp?) stammende Dateien.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_YUV12C    \45\   YUV12C M\45\Motion Frame Buffer:0:
:h2 res=&HID_GBM_YUV12C..YUV12C M-Motion Frame Buffer
:i2 refid=gbmsupp.YUV12C M-Motion Frame Buffer
:p.Die Dateierweiterung
:xmp.
  .VID
:exmp.
wird als YUV12C Datei erkannt.
:p.Obwohl YUV12C-Dateien 12 Bit YUV kodierte Farbbilddaten enthalten,
bildet der Algorithmus diese auf 24 Bit RGB kodierte Farbbilddaten ab.
:p.:hp2.Lesen:ehp2.
:p.Die Dateien werden von YUV nach RGB konvertiert bevor sie dem Programm
zur VerfÅgung stehen.
:p.:hp2.Schreiben:ehp2.
:p.Die RGB-Daten werden wÑhrend des Schreibens nach YUV konvertiert.
:p.YUV12C-Dateien mÅssen eine Breite eines Vielfachen von 4 Pixel besitzen.
Wird versucht eine Bitmap zu Schreiben, die diese Regel verletzt, ignoriert
der Algorithmus die jeweils ÅberzÑhligen 1, 2 oder 3 Pixel.
:dl compact tsize=7 break=all.
:dt.:hp9.xpos=N:ehp9.,:hp9.ypos=N:ehp9.
:dd.öberschreibt die Koordinatenursprungsinformation. Standard ist (0,0).
:edl.
:p.Der Algorithmus wurde mit der Browser-Beispielanwendung des Programms
M-Control 2.0 getestet.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_PBITMAP   \45\   Portable Bit\45\map:0:
:h2 res=&HID_GBM_PBITMAP..Portable Bit-map
:i2 refid=gbmsupp.Portable Bit-map
:p.Die Dateierweiterungen
:xmp.
  .PBM
:exmp.
wird als Bit-map Datei erkannt.
:p.Die BinÑrform :hp2.P4:ehp2. sowie die ASCII-Form :hp2.P1:ehp2. dieses Formates werden unterstÅtzt.
:p.Diese Dateien enthalten keine :hp2.Farbpalette:ehp2..
:p.:hp2.Lesen:ehp2.
:p.Die Dateien werden als 1 Bit schwarz/weiss Bitmap gelesen.
:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.invb:ehp9.
:dd.Invertiert die Daten beim Lesen.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.1 bpp Bilddaten werden immer schwarz/weiss geschrieben.
:dl compact tsize=7 break=all.
:dt.:hp9.invb:ehp9.
:dd.Invertiert die Daten beim Schreiben.
:dt.:hp9.ascii:ehp9.
:dd.ASCII-Format P1 schreiben (standard ist binÑr P4)
:dt.:hp9.comment=TEXT:ehp9.
:dd.Kommentar hinzufÅgen
:edl.

:p.Der Dank fÅr diesen Codec geht an Heiko Nitzsche.

:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_GREYMAP   \45\   Portable Greyscale\45\map:0:
:h2 res=&HID_GBM_GREYMAP..Portable Greyscale-map
:i2 refid=gbmsupp.Portable Greyscale-map
:p.Die Dateierweiterung
:xmp.
  .PGM
:exmp.
wird als Greymap-Datei erkannt.
:p.Die BinÑrform :hp2.P5:ehp2. sowie die ASCII-Form :hp2.P2:ehp2. dieses Formates werden unterstÅtzt.
:p.Diese Dateien enthalten keine :hp2.Farbpalette:ehp2..
:p.:hp2.Lesen:ehp2.
:p.Die Dateien werden als 8 Bit Bitmap gelesen und enthalten Graustufeninformationen.
:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:edl.
:p.:hp2.Schreiben:ehp2.
:p.StandardmÑ·ig werden 8 bpp Bilddaten als GraustufenÑquivalent abgelegt, dass heisst,
Farben werden in Graustufen umgewandelt.
:dl compact tsize=7 break=all.
:dt.:hp9.r:ehp9.,:hp9.g:ehp9.,:hp9.b:ehp9. oder :hp9.k:ehp9.
:dd.Erzwingt die Verwendung der Rot-, GrÅn- bzw. Blaukomponente der Bilddaten als Graustufeninformation
alternativ zum Standardverhalten, welches das GraustufenÑquivalent der Gesamtfarbe nutzt.
:dt.:hp9.ascii:ehp9.
:dd.ASCII-Format P2 schreiben (standard ist binÑr P5)
:dt.:hp9.comment=TEXT:ehp9.
:dd.Kommentar hinzufÅgen
:edl.

:p.Der Dank fÅr diesen Codec geht an Jef Poskanzer und Heiko Nitzsche.

:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_PIXMAP    \45\   Portable Pixel\45\map:0:
:h2 res=&HID_GBM_PIXMAP..Portable Pixel-map
:i2 refid=gbmsupp.Portable Pixel-map
:p.Die Dateierweiterung
:xmp.
  .PPM
:exmp.
wird als Pixel-map Datei erkannt.
:p.Die BinÑrform :hp2.P6:ehp2. sowie die ASCII-Form :hp2.P3:ehp2. dieses Formates werden unterstÅtzt.
:p.Das Portable Pixel-map Format kann nur 24 bpp und 48 bpp RGB-Daten speichern.
Beide werden vollstÑndig unterstÅtzt.
:p.:hp2.Lesen:ehp2.
:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p. 24 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.

:p.:hp2.Erweitertes Format (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p. 48 bit RGB-Bilder werden als 48 bpp Bitmap bereitgestellt.

:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen. Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.Das Programm schreibt 24 und 48 bpp RGB-Dateien ohne Farbpalette.
:dl compact tsize=7 break=all.
:dt.:hp9.ascii:ehp9.
:dd.ASCII-Format P3 schreiben (standard ist binÑr P6)
:dt.:hp9.comment=TEXT:ehp9.
:dd.Kommentar hinzufÅgen
:edl.

:p.Der Dank fÅr diesen Codec geht an Heiko Nitzsche.

:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_ANYMAP   \45\   Portable Anymap:0:
:h2 res=&HID_GBM_ANYMAP..Portable Anymap
:i2 refid=gbmsupp.Portable Anymap
:p.Die Dateierweiterung
:xmp.
  .PNM
:exmp.
wird als Portable Anymap Datei erkannt.
:p.Die BinÑrformen :hp2.P4,P5,P6:ehp2. sowie die ASCII-Formen :hp2.P1,P2,P3:ehp2.
dieses Formates werden unterstÅtzt.
PNM ist kein eigenes Format sondern eine Zusammenfassung der Formate
PBM, PGM und PPM.
:p.Diese Dateien enthalten keine :hp2.Farbpalette:ehp2..
:p.:hp2.Lesen:ehp2.
:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p.  1 Bit schwarz/weiss Bilder werden als 1 bpp Bitmap bereitgestellt.
.br
  8 Bit Graustufenbilder werden als 8 bpp Bitmap bereitgestellt.
.br
 24 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.

:p.:hp2.Erweitertes Format (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p. 48 bit RGB-Bilder werden als 48 bpp Bitmap bereitgestellt.

:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Bildnummer in einem Mehrseiten-Bild.
(Wenn nicht angegeben ist N=0 - das erste Bild.)
:dt.:hp9.invb:ehp9. (nur 1 bpp)
:dd.Invertiert die Daten beim Lesen.
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen. Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.Das Programm schreibt 1 bpp schwarz/weiss, 8 bpp Graustufen sowie 24/48 bpp
RGB-Dateien ohne Farbpalette.

:dl compact tsize=7 break=all.
:dt.:hp9.invb:ehp9. (nur 1 bpp)
:dd.Invertiert die Daten beim Schreiben.
:dt.:hp9.r:ehp9.,:hp9.g:ehp9.,:hp9.b:ehp9. oder :hp9.k:ehp9. (nur 8 bpp)
:dd.Erzwingt die Verwendung der Rot-, GrÅn- bzw. Blaukomponente der Bilddaten als Graustufeninformation
alternativ zum Standardverhalten, welches das GraustufenÑquivalent der Gesamtfarbe nutzt.
:dt.:hp9.ascii:ehp9.
:dd.ASCII-Format schreiben (standard ist binÑr)
:dt.:hp9.comment=TEXT:ehp9.
:dd.Kommentar hinzufÅgen
:edl.

:p.Der Dank fÅr diesen Codec geht an Heiko Nitzsche.

:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_PNG       \45\   Portable Network Graphics Format:0:
:h2 res=&HID_GBM_PNG..Portable Network Graphics Format
:i2 refid=gbmsupp.Portable Network Graphics Format
:p.Die Dateierweiterung
:xmp.
  .PNG
:exmp.
wird als PNG-Bild (Portable Network Graphics) erkannt.
:p.:hp2.Lesen:ehp2.
:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p.  1 bit S/W-, Palette- und Graustufenbilder werden als  1 bpp Bitmap bereitgestellt.
.br
  2 bit Palette- und Graustufenbilder werden als  4 bpp Bitmap bereitgestellt.
.br
  4 bit Palette- und Graustufenbilder werden als  4 bpp Bitmap bereitgestellt.
.br
  8 bit Palette- und Graustufenbilder werden als  8 bpp Bitmap bereitgestellt.
.br
 16 bit Graustufenbilder werden als 24 bpp Bitmap bereitgestellt.
.br
 32 bit Graustufenbilder (16 bit grau + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.
.br
 24 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 32 bit RGB-Bilder (RGB + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 24 bpp Bitmap bereitgestellt.
.br
 64 bit RGB-Bilder (RGB + Alphakanal) werden als 24 bpp Bitmap bereitgestellt.

:p.:hp2.Erweitertes Format (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p. 16 bit Graustufenbilder werden als 48 bpp Bitmap bereitgestellt.
.br
 32 bit Graustufenbilder (16 bit grau + Alphakanal) werden als 64 bpp Bitmap bereitgestellt.
.br
 32 bit RGB-Bilder (RGB + Alphakanal) werden als 32 bpp Bitmap bereitgestellt.
.br
 48 bit RGB-Bilder werden als 48 bpp Bitmap bereitgestellt.
.br
 64 bit RGB-Bilder (RGB + Alphakanal) werden als 64 bpp Bitmap bereitgestellt.

:p.:hp2.Handhabung des Alphakanals:ehp2.
:p.Ein PNG-Alphakanal ist immer nichtassoziiert (nicht vormultiplizierter Alphawert).
Der Alphakanal wird getrennt zur VerfÅgung gestellt, wenn er nicht gegen eine spezifizierte
Hintergrundfarbe verrechnet werden soll.
Wenn die Option ext_bpp nicht angegeben wurde, das Bild jedoch einen Alphakanal enthÑlt,
wird der Alphakanal nur gegen die Hintergrundfarbe verrechnet, die entweder vom Benutzer
angegeben wird bzw. vom Bilddesigner im Bild abgelegt wurde. Sonst wird der Alphakanal ignoriert.

:p.Die Bittiefe des Alphakanals entspricht in allen FÑllen der Bittiefe der FarbkanÑle.

:dl compact tsize=7 break=all.
:dt.:hp9.gamma=N:ehp9.
:dd.Bildschirm Gamma-Wert.
(Wenn nicht angegeben ist N=2.2.)
:dt.:hp9.back_rgb=R_G_B:ehp9.
:dd.Hintergrundfarbe fÅr RGB-Bitmaps.
Wenn in der Bilddatei bereits eine Hintergrundfarbe zugeordnet ist, wird diese ersetzt.
(R_G_B: je 0..65535)
:dt.:hp9.ignore_back:ehp9.
:dd.Ignoriert die von der Bilddatei vordefinierte Hintergrundfarbe.
Diese Option ist nÅtzlich, wenn der Alphakanal erhalten bleiben soll, so dass die Bitmap
durch das Programm gegen einen texturierten Hintergrund gerechnet werden soll.
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen (auch mit Alphakanal). Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.

:p.:hp2.Schreiben:ehp2.
:p.Das Programm schreibt 1, 4, 8, 24, 32 (24 bpp + alpha), 48, 64 (48 bpp + alpha) bpp RGB-Dateien.
Die Bittiefe des Alphakanals muss in allen FÑllen der Bittiefe der FarbkanÑle entsprechen.

:p.:hp2.Handhabung des Alphakanals:ehp2.
:p.GBM erlaubt das Schreiben von PNG-Dateien mit nichtassoziiertem Alphakanal (32, 64 bpp).
Falls der Alphakanal bereits vom Programm assoziiert wurde (vormultipliziert), sollten
die Farbtiefen 24 und 48 bpp verwendet werden.
Wenn ein Alphakanal vorhanden ist, kann keine zusÑtzliche Transparenz definiert werden.

:dl compact tsize=7 break=all.
:dt.:hp9.ilace:ehp9.
:dd.Aktiviert das Schreiben von Interlaced-PNGs. Diese Option ist hilfreich,
wenn die PNG-Datei in einer HTML-Seite eingebettet werden soll. Das Bild
baut sich damit schrittweise im Browser auf.
:dt.:hp9.gamma=N:ehp9.
:dd.Definiert den Bitmap-Gamma-Wert im Datei-Header.
:dt.:hp9.back_index=N:ehp9.
:dd.Definiert den Farbindex der Hintergrundfarbe fÅr Bitmaps mit Farbpalette im Datei-Header.
:dt.:hp9.back_rgb=R_G_B:ehp9.
:dd.Definiert die Hintergrundfarbe fÅr RGB-Bitmaps im Datei-Header.
Ein vorhandener Alphakanal bleibt erhalten. (24/32 bpp: 0..255, 48/64 bpp: 0..65535)
:dt.:hp9.transparency=N:ehp9.
:dd.Definiert die Transparenz fÅr Bitmaps mit Farbpalette im Datei-Header.
(Standard ist 0. Wertebereich: 0..255 fÅr undurchsichtig bis transparent)
Diese Option ist hilfreich, wenn die PNG-Datei in einer HTML-Seite eingebettet
werden soll.
:dt.:hp9.transcol_rgb=R_G_B:ehp9.
:dd.Legt die Transparenzfarbe fÅr RGB-Bitmaps fest.
Diese Option ist hilfreich, wenn die PNG-Datei in einer HTML-Seite eingebettet
werden soll.
(nur fÅr Bitmaps ohne Alphakanal, R_G_B, 24/32 bpp: 0..255, 48/64 bpp: 0..65535)
:dt.:hp9.compression=N:ehp9.
:dd.Definiert den Kompressionsfaktor. (Standard=6, 0..9, keine bis maximale Kompression)
:edl.
:p.GBM kann mit oder ohne UnterstÅtzung fÅr PNG kompiliert werden.
Wenn PNG nicht in der Liste der unterstÅtzten Bildformate des Datei-Dialogs
erscheint, wird eine GBM.DLL ohne PNG-UnterstÅtzung verwendet.
:p.Die PNG-UnterstÅtzung der GBM wird von der offiziellen PNG Reference-Bibliothek
Libpng bereitgestellt.
Die Libpng ist eine OSI (Open Source Initiative) zertifizierte Open Source Software.
Die Kompressionsalgorithmen basieren auf der Bibliothek Zlib.
Beide Bibliotheken dÅrfen frei verwendet werden, wenn auf sie verwiesen wird
(deshalb werden sie in GBM verwendet und deshalb existiert auch dieser Absatz in der Online-Hilfe).
:p.Der Schnittstellencode der GBM zur Libpng wurde von Heiko Nitzsche geschrieben.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_KIPS      \45\   IBM KIPS:0:
:h2 res=&HID_GBM_KIPS..IBM KIPS
:i2 refid=gbmsupp.IBM KIPS
:p.Die Dateierweiterung
:xmp.
  .KPS
:exmp.
wird als IBM KIPS Datei erkannt.
:p.Die .KPS Datei allein beschreibt ein KIPS-Bild nicht vollstÑndig.
:p.Die Farbpalette ist in einer zusÑtzlichen Datei mit der Erweiterung
:hp2..PAL:ehp2. oder :hp2..KPL:ehp2. gespeichert.
:p.:hp2.Lesen:ehp2.
:dl compact tsize=7 break=all.
:dt.:hp9.pal:ehp9. or :hp9.kpl:ehp9.
:dd.Der Algorithmus sucht nach der zugehîrigen .PAL bzw. .KPL Datei, um die Farbpaletteninformation
zu bekommen (Standard ist, nur nach .PAL zu suchen).
:edl.
:p.:hp2.Schreiben:ehp2.
:dl compact tsize=7 break=all.
:dt.:hp9.pal:ehp9. or :hp9.kpl:ehp9.
:dd.Der Algorithmus schreibt die Farbpalette entweder in eine .PAL (pal) oder eine .KPL (kpl)
Datei (Standard ist .PAL).
:edl.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_IAX       \45\   IBM Image Access eXecutive:0:
:h2 res=&HID_GBM_IAX..IBM Image Access eXecutive
:i2 refid=gbmsupp.IBM Image Access eXecutive
:p.Die Dateierweiterung
:xmp.
  .IAX
:exmp.
wird als IAX-Datei erkannt.
:p.Dieses Bildformat enthÑlt weder eine Farbpalette noch einen Datei-Header.
Entsprechend kann die Bildgrî·e nicht aus der Datei ermittelt werden.
Der Algorithmus arbeitet standardma·ig mit einer Breite von 512 Pixeln und
bestimmt die Hîhe durch Division der Dateigrî·e durch die Breite.
:p.Die Bilddaten werden als Graustufen interpretiert.
:p.:hp2.Lesen:ehp2.
:dl compact tsize=7 break=all.
:dt.:hp9.r:ehp9.,:hp9.g:ehp9.,:hp9.b:ehp9. or :hp9.k:ehp9.
:dd.Erzwingt die Interpretation der Bilddaten als Helligkeiten von Rot (r), GrÅn (g),
Blau (b) bzw. Schwarz (k, Standard).
:dt.:hp9.width=N:ehp9.
:dd.öberschreibt die Annahme der Bildbreite von 512 Pixel mit einer anderen Vorgabe.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.StandardmÑ·ig werden 8 bpp Bilddaten als GraustufenÑquivalent abgelegt, dass heisst,
Farben werden in Graustufen umgewandelt.
:dl compact tsize=7 break=all.
:dt.:hp9.r:ehp9.,:hp9.g:ehp9.,:hp9.b:ehp9. or :hp9.k:ehp9.
:dd.Erzwingt die Verwendung der Rot-, GrÅn- bzw. Blaukomponente der Bilddaten als Graustufeninformation
alternativ zum Standardverhalten, welches das GraustufenÑquivalent der Gesamtfarbe nutzt.
:edl.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_XBITMAP   \45\   X Windows Bitmap:0:
:h2 res=&HID_GBM_XBITMAP..X Windows Bitmap
:i2 refid=gbmsupp.X Windows Bitmap
:p.Die Dateierweiterung
:xmp.
  .XBM
:exmp.
wird als X Bitmap erkannt.
:p.X Bitmap Dateien sind ASCII-Textdateien, die direkt im Sourcecode
von C-Programmen eingebunden werden kînnen.
:p.Der Lesealgorithmus ist sehr gro·zÅgig beim Parsen dieser Dateien.
:p.UnterstÅtzt werden X10 und X11 1bpp Bitmaps.
Einige .XBM-Dateien mit Text-Strings wurden gesichtet, die Sprites oder
Icons enthalten. Diese kînnen nicht gelesen werden.
:p.Beim Lesen von X Bitmaps wird 1 als Schwarz und 0 als Wei· interpretiert.
:p.Beim Schreiben von X bitmaps, wird die dunkelste Farbe als 1 abgebildet
und die hellste Farbe als 0.
:p.Dieser Porgrammcode wurde mit einigen .XBM-Dateien getestet.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_XPIXMAP   \45\   X Windows PixMap:0:
:h2 res=&HID_GBM_XPIXMAP..X Windows PixMap
:i2 refid=gbmsupp.X Windows PixMap
:p.Die Dateierweiterung
:xmp.
  .XPM
:exmp.
wird als X PixMap erkannt.
:p.X Pixmap Dateien sind ASCII-Textdateien, die entweder direkt im Sourcecode
von C-Programmen eingebunden werden kînnen (XPM1, XPM2C, XPM3) bzw. als einfache
ASCII-Textdatei mit der Bildbeschreibung vorliegen (einfaches XPM2).
GBM unterstÅtzt nur die Formate XPM2 und XPM3 ohne Erweiterungen.
XPM3-Daten werden beim Lesen nicht vollstÑndig syntaktisch geprÅft. Deshalb koennen
evtl. nicht alle Dateien gelesen werden.


:p.:hp2.Lesen:ehp2.
:p.Liest RGB-Dateien, hex oder mit symbolichen X11 Farbnamen (4,8,12,16 bit pro R,G oder B).
Transparenz wird unterstÅtzt.

:p.:hp2.Standardformate (abwÑrtskompatibel):ehp2.
:p.AbhÑngig von der Anzahl der Farben werden die Bilddaten als 1,4,8 oder 24 bpp bereitgestellt.

:p.:hp2.Erweitertes Format (nicht abwÑrtskompatibel, erfordert ext_bpp Option):ehp2.
:p.AbhÑngig von der Anzahl der Farben werden die Bilddaten als 1,4,8,24,32,48 oder 64 bpp bereitgestellt.

:dl compact tsize=7 break=all.
:dt.:hp9.back_rgb=R_G_B:ehp9.
:dd.Hintergrundfarbe fÅr RGB-Bitmaps.
(R_G_B: je 0..65535)
:dt.:hp9.ext_bpp:ehp9.
:dd.Erlaubt erweiterte Farbtiefen (auch mit Alphakanal). Erweiterte Farbtiefen (> 24 bits/pixel)
mÅssen von der jeweiligen Anwendung unterstÅtzt werden. Wird ext_bpp nicht angegeben
werden Bilder mit erweiterte Farbtiefe auf 24 bit/pixel heruntergerechnet.
:edl.

:p.:hp2.Schreiben:ehp2.
:p.Schreibt RGB-Dateien mit 1,4,8 oder 24 bpp.

:dl compact tsize=7 break=all.
:dt.:hp9.xpm2:ehp9.
:dd.XPM2-Format schreiben (Standard ist XPM3)
:dt.:hp9.transcol=N:ehp9.
:dd.Legt den Farbindex N als Transparenzfarbe fest.
:dt.:hp9.transcol_rgb=R_G_B:ehp9.
:dd.Legt die Transparenzfarbe fÅr RGB-Bitmaps fest.
(nur fÅr Bitmaps ohne Alphakanal, R_G_B, 24 bpp: 0..255)
:edl.

:p.Der Dank fÅr diesen Codec geht an Heiko Nitzsche.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_SPRITE    \45\   RiscOS Sprite:0:
:h2 res=&HID_GBM_SPRITE..RiscOS Sprite
:i2 refid=gbmsupp.RiscOS Sprite
:p.Die Dateierweiterungen
:xmp.
  .SPR .SPRITE
:exmp.
werden als RiscOS Sprite Datei erkannt.
Aufgrund der technischen Konzeption von RiscOS, besitzen Dateien dort keine Dateierweiterungen.
Um die Handhabung dieses Dateiformats in das generelle Konzept zu integrieren, bekamen diese
Dateien die Erweiterung .SPR.
:p.:hp2.Lesen:ehp2.
:p.UnterstÅtzt werden Dateien mit Farbtiefen von 1,4 und 8 bpp.
2 bpp Dateien werden auf 4 bpp expandiert.
:p.Sprite-Dateien kînnen ein Bild oder ein Bild zusammen mit einer Maske enthalten.
Die Maske wird beim Lesen ignoriert.
:p.Wenn die Datei keine Farbpalette enthÑlt, nimmt GBM eine Standardpalette an, die
der des Programms RiscOS Wimp entspricht.
:p.Es existiert eine EinschrÑnkung&colon. Das Feld :hp2.first-bit:ehp2. des
Sprite-Headers muss ein Vielfaches von 8 sein (sehr wahrscheinlich).
:dl compact tsize=7 break=all.
:dt.:hp9.index=N:ehp9.
:dd.Auswahl der Sprite-Nummer, wenn die Datei mehrere Sprites enthÑlt.
(Wenn nicht angegeben ist N=0 - das erste Sprite.)
:edl.
:p.:hp2.Schreiben:ehp2.
:p.UnterstÅtzt werden Farbtiefen von 1,4 und 8 bpp.
.br
In die Datei wird auch die Farbpalette geschrieben.
.br
Nur das Bild wird geschrieben, keine Maske.
:p.Wird ein Bild mit einer Farbtiefe von 8 bpp geschrieben, wird die eigenartige
Archimedes-Farbpalette verwendet und die Bilddaten zuvor auf diese Farbpalette
:hp2.angepasst:ehp2..
Das geschieht deshalb, da der Archimedes keine 256-Farben Farbpaletten unterstÅtzt.
Der VIDC-Chip besitzt nur 16 Farbregister mit 16 festen FarbsÑtzen (oder Graustufen).
:p.GBM schreibt 16 FarbeintrÑge in die Datei.
Es existieren auch Sprite-Dateien mit 64 FarbeintrÑgen (mit 4 FarbsÑtzen).
Jedoch teilen sich diese in 16 FarbeintrÑge und 4 FarbsÑtze auf.
Somit sind sie Ñquivalent zu 16 FarbeintrÑgen und 16 FarbsÑtzen, es sei denn,
einige FarbsÑtze wurden explizit in der Datei abgelegt.
:p.Getested wurde das Lesen von 4 bpp Sprites ohne Farbpalette und 8 bpp Sprites
ohne Farbpalette bzw. mit 64 Farben-Palette.
:p.Mit der GBM erzeugte Sprites wurden erfolgreich unter RiscOS geladen.
Hinweis&colon. Verwende SetType, um den Dateityp von PC-Datei auf Sprite zu Ñndern
(SetType Option des FiltermenÅs oder "*SetType <filename> Sprite").
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_PSEG      \45\   IBM Printer Page Segment:0:
:h2 res=&HID_GBM_PSEG..IBM Printer Page Segment
:i2 refid=gbmsupp.IBM Printer Page Segment
:p.Die Dateierweiterungen
:xmp.
  .PSE .PSEG .PSEG38PP .PSEG3820
:exmp.
werden als PSEG-Dateien erkannt.
:p.PSEG-Dateien werden zum Einbetten von Bilddaten in SCRIPT-Dokumente verwendet.
:p.Sie enthalten nur 1 bpp Daten, also Schwarz auf Wei·.
:p.:hp2.Lesen:ehp2.
:p.PSEG-Dateien sollten vom Host immer im BinÑrmodus heruntergeladen werden.
Die EBCDIC/ASCII-Konvertierung sollte dabei nicht verwendet werden.
:p.Die Farbpalette wird dem Programm immer als Schwarz (1) auf Wei· (0) bereitgestellt,
da PSEG-Dateien keine eigene Farbpalette besitzen.
:dl compact tsize=7 break=all.
:dt.:hp9.fixrec:ehp9.
:dd.Einige PSEG-Dateien scheinen kÅrzere Records zu haben als im LÑngenfeld eines Records
(2. und 3. Byte) spezifiziert.
Obwohl das auf VMs kein Problem darstellt, kann es Nicht-VM-Lesealgorithmen wie die GBM verwirren.
GBM kann bei Angabe dieser Option diese korrupte Record-Struktur kompensieren.
:edl.
:p.:hp2.Schreiben:ehp2.
:p.Beim Schreiben von PSEG-Dateien geht die Farbpalette verloren.
:p.Die erzeugte Datei ist eine BinÑrdatei und sollte deshalb als solche auf eine VM-Maschine
hochgeladen werden.
Die EBCDIC/ASCII-Konvertierung sollte dabei nicht verwendet werden.
UnabhÑngig davon ist es auf einem VM-Host wichtig, dass die Record-Struktur eines PSEGs
korrekt von den VM-Tools interpretiert wird.
Auf Nicht-VM-Systemen besitzen Dateien keine Record-Struktur.
Deshalb mÅssen PSEG-Dateien nach dem Hochladen 'fixiert' werden. DafÅr wird ein Tool
wie FIXL3820 EXEC benîtigt.
Einfach ausgedrÅckt beginnt jeder Record einer PSEG-Datei mit dem Zeichen 0x5a. Dieses kann
verwendet werden, um die Records zu trennen.
:p.PSEG-Dateien besitzen eine Breite eines Vielfachen von 8 Pixeln. Der Algorithmus schreibt
Dateien mit einer entsprechenden Breite (gerundet zur nÑchsten 8er Grenze).
Der rechte ÅberzÑhlige Teil wird mit wei·en Pixeln gefÅllt.
:dl compact tsize=7 break=all.
:dt.:hp9.scalex=X:ehp9., :hp9.scaley=Y:ehp9.
:dd.öberschreibt die Vergrî·erungsfaktoren im Datei-Header (Standard ist 1000).
:dt.:hp9.double:ehp9.
:dd.Diese Option verdoppelt die Vergrî·erungsfaktoren.
:dt.:hp9.pelx=X:ehp9., :hp9.pely=Y:ehp9.
:dd.öberschreibt die Pixelgrî·e im Datei-Header (Standard ist 2400), d.h. 2400 Pixel
pro 10 Inch. 3000 wÅrde zum Beispiel 300 dpi entsprechen.
:edl.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_GEMRAS    \45\   GEM Raster:0:
:h2 res=&HID_GBM_GEMRAS..GEM Raster
:i2 refid=gbmsupp.GEM Raster
:p.Die Dateierweiterung
:xmp.
  .IMG
:exmp.
wird als GEM Raster Datei erkannt.
:p.Das GEM Raster Dateiformat ist ein altes Format, dass hauptsÑchlich auf der
Atari-Platform zu Hause ist.
:p.Es hat einen einfachen Aufbau&colon.
:sl.
:li.Bilder mit 1 bpp Farbtiefe sind immer Schwarz/Wei·.
:li.Bilder mit 4 bpp Farbtiefe verwenden eine feste "Standardpalette" oder Graustufen.
:li.Bilder mit 2,3,5,6,7 und 8 bpp Farbtiefe verwenden immer Graustufen.
:li.Bilder mit 24 bpp Farbtiefe werden nicht unterstÅtzt.
:esl.
:p.ZusÑtzlich dazu gibt es die XIMG-Erweiterungen des Formates&colon.
:sl.
:li.Bilder mit 1-8 bpp Farbtiefe kînnen eine Farbpalette enthalten.
:li.Bilder mit 24 bpp Farbtiefe sind mîglich.
:esl.
:p.:hp2.Lesen:ehp2.
:p.Alle oben genannten Typen kînnen gelesen werden. Dabei gelten die Åblichen
Regeln, dass 2 und 3 bpp Bilder auf 4 bpp sowie 5,6 und 7 bpp Bilder
auf 8 bpp expandiert werden.
:p.:hp2.Schreiben:ehp2.
:p.GBM schreibt alle oben genanten Typen. Wo zusÑtzliche Angaben mîglich sind,
kann aus folgenden Optionen gewÑhlt werden&colon.
:dl compact tsize=7 break=all.
:dt.:hp9.grey:ehp9.
:dd.GBM schreibt ein 4 bpp Graustufenbild. Dabei werden die Daten zuvor auf die
Graustufenpalette konvertiert. Normalerweise werden Farbbilder ohne
Graustufenkonvertierung geschrieben.
:dt.:hp9.pal:ehp9.
:dd.Bei Bildern mit einer Farbtiefe von 4 oder 8 bpp schreibt GBM eine XIMG-Datei
mit eingebetteter Farbpalette.
:dt.:hp9.pixw=N:ehp9.,:hp9.pixh=N:ehp9.
:dd.öberschreibt die Standardpixelgrî·e fÅr die jeweilige Richtung (x oder y) im
Datei-Header (Standard sind pixw=85 und pixh=85 Micron).
:edl.
:p.Hinweis&colon. Image Alchemy 17 scheint mit einer anderen Standardpalette bei 16 Farben
zu arbeiten, wenn Bilder ins GEM Rasterformat konvertiert werden.
Dies widerspricht :hp2.allen:ehp2. Erfahrungen mit bis jetzt getesteten Bildern.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_PORTRAIT  \45\   Portrait:0:
:h2 res=&HID_GBM_PORTRAIT..Portrait
:i2 refid=gbmsupp.Portrait
:p.Die Dateierweiterung
:xmp.
  .CVP
:exmp.
wird als Portrait-Datei erkannt.
:p.Diese Dateien enthalten ein einzelnes 512x512 24bpp RGB Bild.
Einige Fotografen in Deutschland stellen ihren Kunden eine Diskette mit einer
CVP-Datei bereit, die das aufgenomme Passbild enthÑlt.
SpÑter kann man mit Hilfe dieser Datei weitere AbzÅge machen lassen.
:p.Mit der GBM kînnen nun diese Bilder in ein anderes Format konvertiert werden
bzw. von einem anderen Format in das CVP-Format. Damit wird es mîglich,
etwaige Pickel (und anderes...) zu entfernen.
:p.Pixel sind in diesem Format nicht quadratisch. Das hei·t, dass die Bilder nach dem Lesen
horizontal gestreckt erscheinen.
GBM ÅberlÑsst es dem Benutzer, das Bild so in der Grî·e anzupassen, dass es gut aussieht.
Mit einem Faktor zwischen 0.75 und 0.8 erreicht man gewîhnlich ganz gute Ergebnisse.
:p.NatÅrlich ist es wichtig daran zu denken, dass Portrait-Dateien nur 512x512 Bilder,
enthalten. Wenn Bilder einer anderen Quelle in diesem Format gespeichert werden und diese
anschlie·end beim Fotograf gedruckt werden, erscheinen sie aufgrund der nichtquadratischen
Pixel schmaler.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_JPEG      \45\   JPEG:0:
:h2 res=&HID_GBM_JPEG..JPEG Interchange File Format
:i2 refid=gbmsupp.JPEG Interchange File Format
:p.Die Dateierweiterungen
:xmp.
  .JPG .JPEG .JPE
:exmp.
werden als JPEG-Dateien erkannt.
:p.Technisch gesehen wird der JFIF-Typ von JPEG-Dateien unterstÅtzt.
:p.:hp2.Lesen:ehp2.
:p.8 bpp (Graustufen), 24 bpp (YUV) und 32 bpp (YCCK, CMYK) Dateien kînnen gelesen werden.
.br
8 bpp (Graustufen) und 24 bpp (YUV) Dateien kînnen geschrieben werden.

:p.:hp2.Schreiben:ehp2.
:p.Eine Bitmap kann in verschiedenen QualitÑtsstufen erzeugt werden
(unterschiedlich starke :hp2.verlustbehaftete:ehp2. Kompression).
Auch Progressive-JPEGs kînnen geschrieben werden.
:dl compact tsize=7 break=all.
:dt.:hp9.quality=Q:ehp9.
:dd.Gibt die zu verwendende QualitÑtsstufe an. Dabei ist Q eine willkÅrliche
Grî·e. Q kann in einem Bereich von 0 bis 100 liegen, wobei der brauchbare
Standardwert 75 ist.
:dt.:hp9.smooth=S:ehp9.
:dd.Gibt den zu verwendenden GlÑttungfaktor an. S kann in einem Bereich
von 0 bis 100 liegen, wobei 0 (Standardwert) die GlÑttung deaktiviert.
:dt.:hp9.optimize:ehp9.
:dd.Aktiviert das Schreiben eines optimierten JPEGs. Dies kann die Dateigrî·e
verringern, erhîht jedoch die Rechenzeit.
:dt.:hp9.prog:ehp9.
:dd.Aktiviert das Schreiben von Progressive-JPEGs.
:dt.:hp9.r:ehp9.,:hp9.g:ehp9.,:hp9.b:ehp9. oder :hp9.k:ehp9.
:dd.Erzwingt die Verwendung der Rot-, GrÅn- bzw. Blaukomponente der Bilddaten als Graustufeninformation
alternativ zum Standardverhalten, welches das GraustufenÑquivalent der Gesamtfarbe nutzt.
:dt.:hp9.comment=TEXT:ehp9.
:dd.Kommentar hinzufÅgen
:edl.
:p.GBM kann mit oder ohne UnterstÅtzung fÅr JPEG kompiliert werden.
Wenn JPEG nicht in der Liste der unterstÅtzten Bildformate des Datei-ôffnen-Dialogs
erscheint, wird eine GBM.DLL ohne JPEG-UnterstÅtzung verwendet.
:p.Die JPEG-UnterstÅtzung der GBM wird von der Independant JPEG Group JPEGLIB-Bibliothek,
Version 6b bereitgestellt.
Sie darf frei verwendet werden, wenn auf die IJG verwiesen wird (deshalb wird sie in GBM
verwendet und deshalb existiert auch dieser Absatz in der Online-Hilfe).
:p.Der Schnittstellencode der GBM zur IJG 6b wurde von Mark Lisowski
geschrieben. Ich (Heiko Nitzsche) habe die Erweiterungen zum Lesen von YCCK/CMYK
und Schreiben von 8bpp Graustufen JPEGs hinzugefÅgt.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
.*...sHID_GBM_OTHERS    \45\   Andere:0:
:h2 res=&HID_GBM_OTHERS..Andere
:i2 refid=gbmsupp.Andere
:p.Die UnterstÅtzung fÅr weitere Bitmapformate kann jederzeit hinzugefÅgt werden,
ohne dass das Anwendungsprogramm dafÅr angepa·t werden mu·.
:p.Jedes neue Format wird automatisch in der Liste der unterstÅtzten Formate des
Bitmap Datei-Dialoges erscheinen, auch wenn es dafÅr noch keine Beschreibung in der
Hilfe geben sollte.
:p.Die Seite :link reftype=hd res=&HID_GBM_SUPPORT..Bitmap Dateiformat-UnterstÅtzung:elink.
beschreibt weitere unterstÅtzte Dateiformate.
.*...e
:index.
:euserdoc.

