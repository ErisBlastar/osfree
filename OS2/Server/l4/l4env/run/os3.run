#
# Build
#

set build_components {
	core init
	drivers/timer
	server/nitpicker
	test/nitpicker
	drivers/framebuffer drivers/platform drivers/input
	server/os2srv server/tar_rom
}

lappend_if [have_spec usb] build_components drivers/usb
lappend_if [have_spec gpio] build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_platform_drv_config

append_if [have_spec gpio] config {
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
	</start>
}

append_if [have_spec pl11x] config {
	<start name="pl11x_drv">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec imx53] config {
	<start name="input_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>
}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start>
}

append_if [expr ![have_spec ps2] && [have_spec usb]] config {
	<start name="usb_drv">
		<resource name="RAM" quantum="12M"/>
		<provides><service name="Input"/></provides>
		<config ehci="yes" uhci="yes" xhci="no"> <hid/> </config>
	</start>
}

append config {
	<start name="timer">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Timer"/></provides>
		<!-- <route>
			<service name="CAP"><parent/></service>
			<service name="SIGNAL"><parent/></service>
			<service name="RM"><parent/></service>
			<service name="LOG"><parent/></service>
			<service name="ROM"><parent/></service>
		</route> -->
	</start>
	<start name="report_rom">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Report"/> <service name="ROM"/> </provides>
		<config>
			<rom>
				<policy label="status_bar -> focus"      report="nitpicker -> focus"/>
				<policy label="nitpicker_config -> xray" report="xray_trigger -> xray"/>
				<policy label="xray_trigger -> hover"    report="nitpicker -> hover"/>
			</rom>
		</config>
	</start>
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
	</start>
	<start name="os2srv">
		<resource name="RAM" quantum="10M"/>
		<provides><service name="Cpi"/></provides>
		<config verbose="yes">
			<cfgsys name="config.sys"/>
			<bootdrv value="c:"/>
		</config>
	</start>
</config> }

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer nitpicker tar_rom
	ld.lib.so libc.lib.so libm.lib.so
	report_rom
	os2srv
	config.sys
}

lappend_if [have_spec linux]       boot_modules fb_sdl
lappend_if [have_spec ps2]         boot_modules ps2_drv
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec usb]         boot_modules usb_drv
lappend_if [have_spec gpio]        boot_modules gpio_drv
lappend_if [have_spec imx53]       boot_modules input_drv

append_platform_drv_boot_modules

exec sh -c "cd bin; cp ../../../../os3/filesys/* ."

build_boot_image $boot_modules

append qemu_args " -m 256 "

run_genode_until forever

exec sh -c "cd bin; rm -rf filesys.tar file; cd .."
