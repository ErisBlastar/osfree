#
# Build
#

set build_components {
	core init
	drivers/timer
	server/nitpicker server/liquid_framebuffer
	test/nitpicker server/nitlog server/tar_rom
	drivers/framebuffer drivers/pci drivers/input
}

build $build_components

create_boot_directory

#
# Generate config
#

append config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append_if [have_spec pci] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="PCI"/></provides>
	</start>}

append_if [have_spec vesa] config {
	<start name="vesa_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec pl11x] config {
	<start name="pl11x_drv">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append config {
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
	</start>
	<start name="tar_rom">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="ROM"/></provides>
		<config>
			<archive name="filesys.tar"/>
		</config>
	</start>
	<start name="init">
		<resource name="RAM" quantum="4M"/>
		<config verbose="yes">
			<parent-provides>
				<service name="ROM"/>
				<service name="RAM"/>
				<service name="LOG"/>
				<service name="RM"/>
			</parent-provides>
			<start name="os2srv">
				<resource name="RAM" quantum="1M"/>
				<provides><service name="Cpi"/></provides>
				<config verbose="yes">
					<parent-provides>
						<service name="ROM"/>
						<service name="RAM"/>
						<service name="LOG"/>
						<service name="RM"/>
					</parent-provides>
					<cfgsys name="config.sys"/>
					<bootdrv value="c:"/>
				</config>
			</start>
		</config>
		<route>
			<any-service><child name="tar_rom"/><parent/><any-child/></any-service>
		</route>
	</start>
</config>}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init
	timer
	nitpicker liquid_fb launchpad scout filesys.tar tar_rom
	testnit nitlog
}

# platform-specific modules
lappend_if [have_spec linux] boot_modules fb_sdl
lappend_if [have_spec pci]   boot_modules pci_drv
lappend_if [have_spec vesa]  boot_modules vesa_drv
lappend_if [have_spec ps2]   boot_modules ps2_drv
lappend_if [have_spec pl11x] boot_modules pl11x_drv

exec sh -c "rm -rf bin/filesys bin/filesys.tar; cd bin; ln -s ../../../os3/filesys .; tar cfh filesys.tar -C filesys config.sys; cd .."
exec sh -c "cd bin; tar ufh filesys.tar os2srv ld.lib.so libc.lib.so libm.lib.so; cd .."

build_boot_image $boot_modules

append qemu_args " -m 256 "

run_genode_until forever

exec sh -c "cd bin; rm filesys.tar file; cd .."
