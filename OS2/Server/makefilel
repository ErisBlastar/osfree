
# A 390-400 MB flash movie of Tannenbaum's presentation on Microkernels.
# Andrew-Tanenbaum-Design-of-microkernel-OS
# http://data34.sevenload.com/slcom/be/uf/ilnihe/xccjnnhnkcc.flv
# 1-11 min  Jack Walsh
# 11-13 min Linus Thorwalds
# 13-end    Andrew Tanenbaum

# A little makefile for just building the server for OS/2, Linux and Win32
# on Linux. To build for OS/2 set TARG_DIR to OS2 and for Linux, set
# TARG_DIR to Linux. For Windows set TARG_DIR to win32
#
# Another way to compile for all three without changing a line in this makefile
# by using these commands:
#   wmake -h  clean all -f makefilel TARG_DIR=OS2
#   wmake -h  clean all -f makefilel TARG_DIR=Linux
#   wmake -h  clean all -f makefilel TARG_DIR=win32

#SEP=$(%SEP)
#SEP=\
SEP=/
TARG_DIR=Linux
# Linux OS2 win32

#When building for Win32, don't include $WATCOM/h/os2 for all targets, it leads to
#compiler errors in $WATCOM/h/os2/machine/endian.h at lines 70 and 71 'htonl'
#Therefore include OS/2 dir explicit when building for OS/2
# Note, the Linux and win32 subdirectories contains a zero size os2.h, please don't delete it,
#with it, it's not necessary to ifndef all those places os2.h is included.

COPT_TARGET=
EXE_SUFFIX=
LINKOP_TARGET=
INCL_TARGET=

!ifeq  TARG_DIR  Linux
COPT_TARGET=-blinux -D__LINUX__
EXE_SUFFIX=l
INCL_TARGET=-I$(%WATCOM)$(SEP)lh -I. -ILinux
!endif

!ifeq TARG_DIR  OS2
COPT_TARGET=-bos2v2 -D__OS2__
EXE_SUFFIX=.exe
INCL_TARGET=-I$(%WATCOM)$(SEP)h -I$(%WATCOM)$(SEP)h$(SEP)os2
LINKOP_TARGET="-Wl,option map option internalrelocs alias mmap_=_mmap alias munmap_=_munmap lib ..$(SEP)..$(SEP)tools$(SEP)libmmap$(SEP)libmmap.lib"
!endif


!ifeq TARG_DIR  win32
COPT_TARGET=-bnt -D__WIN32__
EXE_SUFFIX=w.exe
INCL_TARGET=-I$(%WATCOM)$(SEP)h$(SEP)nt -I. -Iwin32
LINKOP_TARGET="-Wl,option OFFSet=524288"
#LINKOP_TARGET="-Wl,option map  lib kernel32" -mthreads
#LINKOP_TARGET=-mthreads
!endif

CC=owcc
OS2LINKOP=
#  -d__OS2__  -d__LINUX__
# -v  -Wstop-after-errors=1
# -Wc,-q  -Wextra

INCL=-I.$(SEP)include -I$(%ROOT)OS2$(SEP)Server$(SEP)Shared$(SEP)modmgr -I$(%ROOT)OS2$(SEP)Server$(SEP)include $(INCL_TARGET)
COPT=-std=c99   $(COPT_TARGET) -O1 -g2 -Wall

LINKOP= $(LINKOP_TARGET)

cmd1=@echo $(TARG_DIR) $^

cmd2=$(CC) $(INCL) $(COPT) $(LINKOP) -c $< -o $^.


SUFFIX=obj

CCOMP=  &
main.$(SUFFIX) &
token.$(SUFFIX) &
modmgr.$(SUFFIX) &
ow_dlfcn.$(SUFFIX) &
ixfmgr.$(SUFFIX) &
ixfmgr_lx.$(SUFFIX) &
ixfmgr_ne.$(SUFFIX) &
ixfmgr_lx_fixuplx.$(SUFFIX) &
ixfmgr_lx_loadobjlx.$(SUFFIX) &
ixfmgr_lx_modlx.$(SUFFIX) &
ixfmgr_lx_execlx.$(SUFFIX) &
ixfmgr_lx_debuglx.$(SUFFIX) &
memmgr.$(SUFFIX) &
io.$(SUFFIX) &
native_dynlink.$(SUFFIX) &
cfgparser.$(SUFFIX) &
processmgr.$(SUFFIX) &
!ifeq TARG_DIR  win32
mmap.$(SUFFIX)
!endif

#CCOMP=  &
#main.$(SUFFIX) &
#Shared$(SEP)token.$(SUFFIX) &
#Shared$(SEP)modmgr.$(SUFFIX) &
#Shared$(SEP)modmgr$(SEP)ow_dlfcn.$(SUFFIX) &
#Shared$(SEP)ixfmgr.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx.$(SUFFIX) &
#Shared$(SEP)ixfmgr_ne.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx_fixuplx.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx_loadobjlx.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx_modlx.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx_execlx.$(SUFFIX) &
#Shared$(SEP)ixfmgr_lx_debuglx.$(SUFFIX) &
#Shared$(SEP)memmgr.$(SUFFIX) &
#$(TARG_DIR)$(SEP)io.$(SUFFIX) &
#$(TARG_DIR)$(SEP)native_dynlink.$(SUFFIX) &
#Shared$(SEP)cfgparser.$(SUFFIX) &
#Shared$(SEP)processmgr.$(SUFFIX)
#win32\mmap.c



all: main$(EXE_SUFFIX) .symbolic


.before:
 @echo    Builds main$(EXE_SUFFIX) for $(TARG_DIR)

#TARG_DIR=OS2
# Linux OS2 win32

#linux: all .symbolic
#TARG_DIR=Linux
#
#os2: all .symbolic
#TARG_DIR=OS2
#
#win32: all .symbolic
#TARG_DIR=win32


token.obj:               Shared$(SEP)token.c
   @echo "cmd1 $(cmd1)"
   @$(cmd1)
   $(cmd2)
   %null

modmgr.obj:              Shared$(SEP)modmgr.c
   $(cmd1)
   $(cmd2)
   %null

ow_dlfcn.obj: Shared$(SEP)modmgr$(SEP)ow_dlfcn.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr.obj:              Shared$(SEP)ixfmgr.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx.obj:           Shared$(SEP)ixfmgr_lx.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_ne.obj:           Shared$(SEP)ixfmgr_ne.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx_fixuplx.obj:   Shared$(SEP)ixfmgr_lx_fixuplx.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx_loadobjlx.obj: Shared$(SEP)ixfmgr_lx_loadobjlx.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx_modlx.obj:     Shared$(SEP)ixfmgr_lx_modlx.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx_execlx.obj:    Shared$(SEP)ixfmgr_lx_execlx.c
   $(cmd1)
   $(cmd2)
   %null

ixfmgr_lx_debuglx.obj:   Shared$(SEP)ixfmgr_lx_debuglx.c
   $(cmd1)
   $(cmd2)
   %null

memmgr.obj:              Shared$(SEP)memmgr.c
   $(cmd1)
   $(cmd2)
   %null

io.obj:             $(TARG_DIR)$(SEP)io.c
   $(cmd1)
   $(cmd2)
   %null

native_dynlink.obj: $(TARG_DIR)$(SEP)native_dynlink.c
   $(cmd1)
   $(cmd2)
   %null

cfgparser.obj:           Shared$(SEP)cfgparser.c
   $(cmd1)
   $(cmd2)
   %null

processmgr.obj:           Shared$(SEP)processmgr.c
   $(cmd1)
   $(cmd2)
   %null

mmap.obj:                 win32$(SEP)mmap.c
   $(cmd1)
   $(cmd2)
   %null

#Shared$(SEP)token.c:                  Shared$(SEP)token.obj
#        echo
#        $(cmd1)
#Shared$(SEP)modmgr.c:                  Shared$(SEP)modmgr.obj
#Shared$(SEP)modmgr$(SEP)ow_dlfcn.c:    Shared$(SEP)modmgr$(SEP)ow_dlfcn.obj
#Shared$(SEP)ixfmgr.c:                  Shared$(SEP)ixfmgr.obj
#Shared$(SEP)ixfmgr_lx.c:               Shared$(SEP)ixfmgr_lx.obj
#Shared$(SEP)ixfmgr_ne.c:               Shared$(SEP)ixfmgr_ne.obj
#Shared$(SEP)ixfmgr_lx_fixuplx.c:       Shared$(SEP)ixfmgr_lx_fixuplx.obj
#Shared$(SEP)ixfmgr_lx_loadobjlx.c:     Shared$(SEP)ixfmgr_lx_loadobjlx.obj
#Shared$(SEP)ixfmgr_lx_modlx.c:         Shared$(SEP)ixfmgr_lx_modlx.obj
#Shared$(SEP)ixfmgr_lx_execlx.c:        Shared$(SEP)ixfmgr_lx_execlx.obj
#Shared$(SEP)ixfmgr_lx_debuglx.c:       Shared$(SEP)ixfmgr_lx_debuglx.obj
#Shared$(SEP)memmgr.c:                  Shared$(SEP)memmgr.obj
#$(TARG_DIR)$(SEP)io.c:                 $(TARG_DIR)$(SEP)io.obj
#$(TARG_DIR)$(SEP)native_dynlink.c:     $(TARG_DIR)$(SEP)native_dynlink.obj
#Shared$(SEP)cfgparser.c:               Shared$(SEP)cfgparser.obj
#Shared$(SEP)processlx.c:               Shared$(SEP)processlx.obj
#.c: Shared Shared/modmgr $(TARG_DIR)

# $(cmd1) $(cmd2)




main$(EXE_SUFFIX):
    @echo $(TARG_DIR)  $^ $[
    @echo $(%WATCOM) $(%INCLUDE)
    $(CC) -v -fd $(INCL) $(COPT) $(CCOMP) $(LINKOP) -o main$(EXE_SUFFIX)

# $(CC) $(INCL) $(COPT) $(CCOMP) $(LINKOP)

main$(EXE_SUFFIX): $(CCOMP)

#    @echo $(TARG_DIR) $^

.c.obj:
    $(CC) $(INCL) $(COPT) $(LINKOP) -c $< -o $^



clean: .symbolic
   @echo Removing object files *.obj
#   @echo "" > bla.obj
 %erase -f *.obj

# del is also available as a wmake internal command, must be on first column.
