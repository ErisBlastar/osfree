:copyrightS

  SOM Compiler Pascal Implementation Emitter (C) Yuri Prokushev
                                             (C) Andrey Vasilkin

:prologS
Library <classSourceFileStem>Int;
(**************************************************************************
 *  This file was generated by the SOM Compiler and Emitter Framework.
 *  Generated using template emitter:
 *      SOM Emitter emitpasi: 1.0, <timeStamp>
 **************************************************************************)

{$IFDEF FPC}
  {$MODE OBJFPC}
{$ENDIF}

{$IFDEF VIRTUALPASCAL}
  {&Cdecl+}
{$ENDIF}

:baseIncludesPrologS
Uses
  SOM, SOMMI
:baseIncludesS
  , <baseSourceFileStem>Int
:baseIncludesEpilogS
  ;

:pasTypedefsPrologS
type
  TReal<className>: TReal<directBase>;
  PReal<className>: ^TReal<className>;

:pasForwardClassS
  T<defDeclName> = class;

:pasTypedefS
?  <-- pasComment>
  T<defDeclName> = <typedefPasBaseType>;
:pasPTypedefS
?  <-- pasComment>
  P<defDeclName> = <typedefPasBaseType>;
:pasPtrToRecTypedefS
  P<defDeclName> = ^T<defDeclName>;
:pasTypedefEpilogS

:pasStructS
?  <-- pasComment>
  T<defDeclName> = record
:pasStructMemberS
    <structFieldName>: <typedefPasBaseType>;
:pasStructEpilogS
  end;

:pasUnionS
?  <-- pasComment>
  T<defDeclName> = record
    _d: <switchType>;
    case Longint of
:pasUnionMemberS
      <unionMemberLabel>: (<unionMemberName>: <unionMemberType>);
:pasUnionEpilogS
  end; // union

:pasSequenceS
  T<defDeclName> = record
    _maximum: Tlong;
    _length: Tlong;
    _buffer: array [0..<sequenceMax>] of <sequenceType>;
  end;

:pasEnumS
?<-- pasComment>
  T<defDeclName> = Tlong;
const
:pasEnumMemberS
:pasEnumPrologS

:pasConstantsPrologS

const
:constantS
?<-- constantComment>
  <constantName> = <pasConstantValueEvaluated>; // <pasConstType>
:classDataPrologS
:classDataS
:classDataEpilogS
:classS
:methodsS
:overrideMethodsS
:inheritedMethodsS
:pasAttributeRWS
:pasAttributeROS
:attributeEpilogS
:releaseS
:passthruS
:interfaceS
:interfaceEpilogS
:modulePrologS
:moduleS
:pasImplementationPrologS
:pasMethodImplementationS
?  <-- methodComment>
<pasMethodFunc>(somSelf: TRealSOMObject<;pasMethodParamList; ...>)<pasMethodType>; {$IFNDEF VIRTUALPASCAL}CDECL;{$ENDIF}
begin
  <className>MethodDebug('<className>','<methodName>');

  <pasMethodResult>...;
end;

:basePrologS
:baseS
:baseEpilogS

export
  <className>ClassData,
  <className>CClassData,
  <className>NewClass;

end.

:typedefPrologS
:typedefEpilogS
:attributePrologS
:methodsEpilogS
:metaS
:moduleEpilogS
:interfacePrologS
:unionPrologS
:passthruPrologS
:passthruEpilogS
:structPrologS
:typedefS
:structEpilogS
:enumEpilogS
:constantPrologS
:constantEpilogS
:unionPrologS
:unionEpilogS
