/* generated from scemit.idl */
/* internal conditional is SOM_Module_scemit_Source */
#ifndef SOM_Module_scemit_Header_ih
	#define SOM_Module_scemit_Header_ih 1
	#ifndef SOM_Module_scemit_Source
		#define SOM_Module_scemit_Source
	#endif /* SOM_Module_scemit_Source */
	#include <scemit.h>
	#ifndef SOM_Scope
		#define SOM_Scope static
	#endif /* SOM_Scope */
	#ifdef SOMTEmitC_Class_Source
		typedef struct SOMTEmitCData
		{
			SOMTTemplateOutputC SOMSTAR somtTemplate;
			FILE *somtTargetFile;
			SOMTClassEntryC SOMSTAR somtTargetClass;
			SOMTModuleEntryC SOMSTAR somtTargetModule;
			SOMTTargetTypeT somtTargetType;
			string somtEmitterName;
		} SOMTEmitCData;
	#ifndef _somtTemplate
		#define _somtTemplate  (somThis->somtTemplate)
	#endif /* _somtTemplate */
	#ifndef _somtTargetFile
		#define _somtTargetFile  (somThis->somtTargetFile)
	#endif /* _somtTargetFile */
	#ifndef _somtTargetClass
		#define _somtTargetClass  (somThis->somtTargetClass)
	#endif /* _somtTargetClass */
	#ifndef _somtTargetModule
		#define _somtTargetModule  (somThis->somtTargetModule)
	#endif /* _somtTargetModule */
	#ifndef _somtTargetType
		#define _somtTargetType  (somThis->somtTargetType)
	#endif /* _somtTargetType */
	#ifndef _somtEmitterName
		#define _somtEmitterName  (somThis->somtEmitterName)
	#endif /* _somtEmitterName */
	#endif /* SOMTEmitC_Class_Source */
	#ifdef SOMTEmitC_Class_Source
	#ifndef static_somMN__set_somtTemplate
		#define static_somMN__set_somtTemplate
		static const char * somMN__set_somtTemplate="_set_somtTemplate";
	#endif /* static_somMN__set_somtTemplate */
	#ifndef static_somId__set_somtTemplate
		#define static_somId__set_somtTemplate
		static const somConstId somId__set_somtTemplate=&somMN__set_somtTemplate;
	#endif /* static_somId__set_somtTemplate */
	#ifndef static_somDS_SOMTEmitC__set_somtTemplate
		#define static_somDS_SOMTEmitC__set_somtTemplate
		static const char * somDS_SOMTEmitC__set_somtTemplate="SOMTEmitC::_set_somtTemplate";
	#endif /* static_somDS_SOMTEmitC__set_somtTemplate */
	#ifndef static_somDI_SOMTEmitC__set_somtTemplate
		#define static_somDI_SOMTEmitC__set_somtTemplate
		static const somConstId somDI_SOMTEmitC__set_somtTemplate=&somDS_SOMTEmitC__set_somtTemplate;
	#endif /* static_somDI_SOMTEmitC__set_somtTemplate */
	SOM_Scope void SOMLINK _set_somtTemplate(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTTemplateOutputC SOMSTAR somtTemplate);
	#ifdef __IBMC__
		#pragma linkage(_set_somtTemplate,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtTemplate   0
	#define somAP_SOMTEmitC__set_somtTemplate   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtTemplate(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTemplateOutputC SOMSTAR somtTemplate);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtTemplate,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtTemplate(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTemplateOutputC SOMSTAR somtTemplate)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtTemplate,somSelf,
				somtTemplate);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtTemplate(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtTemplate,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtTemplate(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTTemplateOutputC SOMSTAR somtTemplate;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtTemplate=va_arg(_somC_ap,SOMTTemplateOutputC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtTemplate)_somC_methodPtr)(somSelf,somtTemplate);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtTemplate={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtTemplate={
		(somMethodPtr)somRD_SOMTEmitC__set_somtTemplate,
		(somMethodPtr)somAP_SOMTEmitC__set_somtTemplate,
		&somMethodInfo_SOMTEmitC__set_somtTemplate};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtTemplate
		#define static_somMN__get_somtTemplate
		static const char * somMN__get_somtTemplate="_get_somtTemplate";
	#endif /* static_somMN__get_somtTemplate */
	#ifndef static_somId__get_somtTemplate
		#define static_somId__get_somtTemplate
		static const somConstId somId__get_somtTemplate=&somMN__get_somtTemplate;
	#endif /* static_somId__get_somtTemplate */
	#ifndef static_somDS_SOMTEmitC__get_somtTemplate
		#define static_somDS_SOMTEmitC__get_somtTemplate
		static const char * somDS_SOMTEmitC__get_somtTemplate="SOMTEmitC::_get_somtTemplate";
	#endif /* static_somDS_SOMTEmitC__get_somtTemplate */
	#ifndef static_somDI_SOMTEmitC__get_somtTemplate
		#define static_somDI_SOMTEmitC__get_somtTemplate
		static const somConstId somDI_SOMTEmitC__get_somtTemplate=&somDS_SOMTEmitC__get_somtTemplate;
	#endif /* static_somDI_SOMTEmitC__get_somtTemplate */
	SOM_Scope SOMTTemplateOutputC SOMSTAR SOMLINK _get_somtTemplate(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtTemplate,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtTemplate   0
	#define somAP_SOMTEmitC__get_somtTemplate   0
#else /* SOM_METHOD_STUBS */
	static SOMTTemplateOutputC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTemplate(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtTemplate,system)
	#endif /* __IBMC__ */
	static SOMTTemplateOutputC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTemplate(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTTemplateOutputC SOMSTAR _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtTemplate,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtTemplate(
		SOMTEmitC SOMSTAR somSelf,
		SOMTTemplateOutputC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtTemplate,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtTemplate(
		SOMTEmitC SOMSTAR somSelf,
		SOMTTemplateOutputC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtTemplate)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtTemplate={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtTemplate={
		(somMethodPtr)somRD_SOMTEmitC__get_somtTemplate,
		(somMethodPtr)somAP_SOMTEmitC__get_somtTemplate,
		&somMethodInfo_SOMTEmitC__get_somtTemplate};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__set_somtTargetFile
		#define static_somMN__set_somtTargetFile
		static const char * somMN__set_somtTargetFile="_set_somtTargetFile";
	#endif /* static_somMN__set_somtTargetFile */
	#ifndef static_somId__set_somtTargetFile
		#define static_somId__set_somtTargetFile
		static const somConstId somId__set_somtTargetFile=&somMN__set_somtTargetFile;
	#endif /* static_somId__set_somtTargetFile */
	#ifndef static_somDS_SOMTEmitC__set_somtTargetFile
		#define static_somDS_SOMTEmitC__set_somtTargetFile
		static const char * somDS_SOMTEmitC__set_somtTargetFile="SOMTEmitC::_set_somtTargetFile";
	#endif /* static_somDS_SOMTEmitC__set_somtTargetFile */
	#ifndef static_somDI_SOMTEmitC__set_somtTargetFile
		#define static_somDI_SOMTEmitC__set_somtTargetFile
		static const somConstId somDI_SOMTEmitC__set_somtTargetFile=&somDS_SOMTEmitC__set_somtTargetFile;
	#endif /* static_somDI_SOMTEmitC__set_somtTargetFile */
	SOM_Scope void SOMLINK _set_somtTargetFile(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ FILE *somtTargetFile);
	#ifdef __IBMC__
		#pragma linkage(_set_somtTargetFile,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtTargetFile   0
	#define somAP_SOMTEmitC__set_somtTargetFile   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetFile(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ FILE *somtTargetFile);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtTargetFile,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetFile(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ FILE *somtTargetFile)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtTargetFile,somSelf,
				somtTargetFile);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetFile(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtTargetFile,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetFile(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		FILE *somtTargetFile;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtTargetFile=va_arg(_somC_ap,FILE *);

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtTargetFile)_somC_methodPtr)(somSelf,somtTargetFile);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtTargetFile={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtTargetFile={
		(somMethodPtr)somRD_SOMTEmitC__set_somtTargetFile,
		(somMethodPtr)somAP_SOMTEmitC__set_somtTargetFile,
		&somMethodInfo_SOMTEmitC__set_somtTargetFile};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtTargetFile
		#define static_somMN__get_somtTargetFile
		static const char * somMN__get_somtTargetFile="_get_somtTargetFile";
	#endif /* static_somMN__get_somtTargetFile */
	#ifndef static_somId__get_somtTargetFile
		#define static_somId__get_somtTargetFile
		static const somConstId somId__get_somtTargetFile=&somMN__get_somtTargetFile;
	#endif /* static_somId__get_somtTargetFile */
	#ifndef static_somDS_SOMTEmitC__get_somtTargetFile
		#define static_somDS_SOMTEmitC__get_somtTargetFile
		static const char * somDS_SOMTEmitC__get_somtTargetFile="SOMTEmitC::_get_somtTargetFile";
	#endif /* static_somDS_SOMTEmitC__get_somtTargetFile */
	#ifndef static_somDI_SOMTEmitC__get_somtTargetFile
		#define static_somDI_SOMTEmitC__get_somtTargetFile
		static const somConstId somDI_SOMTEmitC__get_somtTargetFile=&somDS_SOMTEmitC__get_somtTargetFile;
	#endif /* static_somDI_SOMTEmitC__get_somtTargetFile */
	SOM_Scope FILE *SOMLINK _get_somtTargetFile(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtTargetFile,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtTargetFile   0
	#define somAP_SOMTEmitC__get_somtTargetFile   0
#else /* SOM_METHOD_STUBS */
	static FILE *SOMLINK somRD_SOMTEmitC__get_somtTargetFile(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtTargetFile,system)
	#endif /* __IBMC__ */
	static FILE *SOMLINK somRD_SOMTEmitC__get_somtTargetFile(
			SOMTEmitC SOMSTAR somSelf)
	{
		FILE *_somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtTargetFile,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetFile(
		SOMTEmitC SOMSTAR somSelf,
		FILE **_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtTargetFile,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetFile(
		SOMTEmitC SOMSTAR somSelf,
		FILE **_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtTargetFile)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtTargetFile={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtTargetFile={
		(somMethodPtr)somRD_SOMTEmitC__get_somtTargetFile,
		(somMethodPtr)somAP_SOMTEmitC__get_somtTargetFile,
		&somMethodInfo_SOMTEmitC__get_somtTargetFile};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__set_somtTargetClass
		#define static_somMN__set_somtTargetClass
		static const char * somMN__set_somtTargetClass="_set_somtTargetClass";
	#endif /* static_somMN__set_somtTargetClass */
	#ifndef static_somId__set_somtTargetClass
		#define static_somId__set_somtTargetClass
		static const somConstId somId__set_somtTargetClass=&somMN__set_somtTargetClass;
	#endif /* static_somId__set_somtTargetClass */
	#ifndef static_somDS_SOMTEmitC__set_somtTargetClass
		#define static_somDS_SOMTEmitC__set_somtTargetClass
		static const char * somDS_SOMTEmitC__set_somtTargetClass="SOMTEmitC::_set_somtTargetClass";
	#endif /* static_somDS_SOMTEmitC__set_somtTargetClass */
	#ifndef static_somDI_SOMTEmitC__set_somtTargetClass
		#define static_somDI_SOMTEmitC__set_somtTargetClass
		static const somConstId somDI_SOMTEmitC__set_somtTargetClass=&somDS_SOMTEmitC__set_somtTargetClass;
	#endif /* static_somDI_SOMTEmitC__set_somtTargetClass */
	SOM_Scope void SOMLINK _set_somtTargetClass(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTClassEntryC SOMSTAR somtTargetClass);
	#ifdef __IBMC__
		#pragma linkage(_set_somtTargetClass,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtTargetClass   0
	#define somAP_SOMTEmitC__set_somtTargetClass   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetClass(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTClassEntryC SOMSTAR somtTargetClass);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtTargetClass,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetClass(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTClassEntryC SOMSTAR somtTargetClass)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtTargetClass,somSelf,
				somtTargetClass);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetClass(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtTargetClass,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetClass(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTClassEntryC SOMSTAR somtTargetClass;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtTargetClass=va_arg(_somC_ap,SOMTClassEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtTargetClass)_somC_methodPtr)(somSelf,somtTargetClass);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtTargetClass={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtTargetClass={
		(somMethodPtr)somRD_SOMTEmitC__set_somtTargetClass,
		(somMethodPtr)somAP_SOMTEmitC__set_somtTargetClass,
		&somMethodInfo_SOMTEmitC__set_somtTargetClass};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtTargetClass
		#define static_somMN__get_somtTargetClass
		static const char * somMN__get_somtTargetClass="_get_somtTargetClass";
	#endif /* static_somMN__get_somtTargetClass */
	#ifndef static_somId__get_somtTargetClass
		#define static_somId__get_somtTargetClass
		static const somConstId somId__get_somtTargetClass=&somMN__get_somtTargetClass;
	#endif /* static_somId__get_somtTargetClass */
	#ifndef static_somDS_SOMTEmitC__get_somtTargetClass
		#define static_somDS_SOMTEmitC__get_somtTargetClass
		static const char * somDS_SOMTEmitC__get_somtTargetClass="SOMTEmitC::_get_somtTargetClass";
	#endif /* static_somDS_SOMTEmitC__get_somtTargetClass */
	#ifndef static_somDI_SOMTEmitC__get_somtTargetClass
		#define static_somDI_SOMTEmitC__get_somtTargetClass
		static const somConstId somDI_SOMTEmitC__get_somtTargetClass=&somDS_SOMTEmitC__get_somtTargetClass;
	#endif /* static_somDI_SOMTEmitC__get_somtTargetClass */
	SOM_Scope SOMTClassEntryC SOMSTAR SOMLINK _get_somtTargetClass(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtTargetClass,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtTargetClass   0
	#define somAP_SOMTEmitC__get_somtTargetClass   0
#else /* SOM_METHOD_STUBS */
	static SOMTClassEntryC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTargetClass(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtTargetClass,system)
	#endif /* __IBMC__ */
	static SOMTClassEntryC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTargetClass(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTClassEntryC SOMSTAR _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtTargetClass,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetClass(
		SOMTEmitC SOMSTAR somSelf,
		SOMTClassEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtTargetClass,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetClass(
		SOMTEmitC SOMSTAR somSelf,
		SOMTClassEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtTargetClass)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtTargetClass={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtTargetClass={
		(somMethodPtr)somRD_SOMTEmitC__get_somtTargetClass,
		(somMethodPtr)somAP_SOMTEmitC__get_somtTargetClass,
		&somMethodInfo_SOMTEmitC__get_somtTargetClass};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__set_somtTargetModule
		#define static_somMN__set_somtTargetModule
		static const char * somMN__set_somtTargetModule="_set_somtTargetModule";
	#endif /* static_somMN__set_somtTargetModule */
	#ifndef static_somId__set_somtTargetModule
		#define static_somId__set_somtTargetModule
		static const somConstId somId__set_somtTargetModule=&somMN__set_somtTargetModule;
	#endif /* static_somId__set_somtTargetModule */
	#ifndef static_somDS_SOMTEmitC__set_somtTargetModule
		#define static_somDS_SOMTEmitC__set_somtTargetModule
		static const char * somDS_SOMTEmitC__set_somtTargetModule="SOMTEmitC::_set_somtTargetModule";
	#endif /* static_somDS_SOMTEmitC__set_somtTargetModule */
	#ifndef static_somDI_SOMTEmitC__set_somtTargetModule
		#define static_somDI_SOMTEmitC__set_somtTargetModule
		static const somConstId somDI_SOMTEmitC__set_somtTargetModule=&somDS_SOMTEmitC__set_somtTargetModule;
	#endif /* static_somDI_SOMTEmitC__set_somtTargetModule */
	SOM_Scope void SOMLINK _set_somtTargetModule(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTModuleEntryC SOMSTAR somtTargetModule);
	#ifdef __IBMC__
		#pragma linkage(_set_somtTargetModule,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtTargetModule   0
	#define somAP_SOMTEmitC__set_somtTargetModule   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetModule(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTModuleEntryC SOMSTAR somtTargetModule);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtTargetModule,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetModule(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTModuleEntryC SOMSTAR somtTargetModule)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtTargetModule,somSelf,
				somtTargetModule);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetModule(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtTargetModule,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetModule(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTModuleEntryC SOMSTAR somtTargetModule;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtTargetModule=va_arg(_somC_ap,SOMTModuleEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtTargetModule)_somC_methodPtr)(somSelf,somtTargetModule);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtTargetModule={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtTargetModule={
		(somMethodPtr)somRD_SOMTEmitC__set_somtTargetModule,
		(somMethodPtr)somAP_SOMTEmitC__set_somtTargetModule,
		&somMethodInfo_SOMTEmitC__set_somtTargetModule};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtTargetModule
		#define static_somMN__get_somtTargetModule
		static const char * somMN__get_somtTargetModule="_get_somtTargetModule";
	#endif /* static_somMN__get_somtTargetModule */
	#ifndef static_somId__get_somtTargetModule
		#define static_somId__get_somtTargetModule
		static const somConstId somId__get_somtTargetModule=&somMN__get_somtTargetModule;
	#endif /* static_somId__get_somtTargetModule */
	#ifndef static_somDS_SOMTEmitC__get_somtTargetModule
		#define static_somDS_SOMTEmitC__get_somtTargetModule
		static const char * somDS_SOMTEmitC__get_somtTargetModule="SOMTEmitC::_get_somtTargetModule";
	#endif /* static_somDS_SOMTEmitC__get_somtTargetModule */
	#ifndef static_somDI_SOMTEmitC__get_somtTargetModule
		#define static_somDI_SOMTEmitC__get_somtTargetModule
		static const somConstId somDI_SOMTEmitC__get_somtTargetModule=&somDS_SOMTEmitC__get_somtTargetModule;
	#endif /* static_somDI_SOMTEmitC__get_somtTargetModule */
	SOM_Scope SOMTModuleEntryC SOMSTAR SOMLINK _get_somtTargetModule(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtTargetModule,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtTargetModule   0
	#define somAP_SOMTEmitC__get_somtTargetModule   0
#else /* SOM_METHOD_STUBS */
	static SOMTModuleEntryC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTargetModule(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtTargetModule,system)
	#endif /* __IBMC__ */
	static SOMTModuleEntryC SOMSTAR SOMLINK somRD_SOMTEmitC__get_somtTargetModule(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTModuleEntryC SOMSTAR _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtTargetModule,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetModule(
		SOMTEmitC SOMSTAR somSelf,
		SOMTModuleEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtTargetModule,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetModule(
		SOMTEmitC SOMSTAR somSelf,
		SOMTModuleEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtTargetModule)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtTargetModule={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtTargetModule={
		(somMethodPtr)somRD_SOMTEmitC__get_somtTargetModule,
		(somMethodPtr)somAP_SOMTEmitC__get_somtTargetModule,
		&somMethodInfo_SOMTEmitC__get_somtTargetModule};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__set_somtTargetType
		#define static_somMN__set_somtTargetType
		static const char * somMN__set_somtTargetType="_set_somtTargetType";
	#endif /* static_somMN__set_somtTargetType */
	#ifndef static_somId__set_somtTargetType
		#define static_somId__set_somtTargetType
		static const somConstId somId__set_somtTargetType=&somMN__set_somtTargetType;
	#endif /* static_somId__set_somtTargetType */
	#ifndef static_somDS_SOMTEmitC__set_somtTargetType
		#define static_somDS_SOMTEmitC__set_somtTargetType
		static const char * somDS_SOMTEmitC__set_somtTargetType="SOMTEmitC::_set_somtTargetType";
	#endif /* static_somDS_SOMTEmitC__set_somtTargetType */
	#ifndef static_somDI_SOMTEmitC__set_somtTargetType
		#define static_somDI_SOMTEmitC__set_somtTargetType
		static const somConstId somDI_SOMTEmitC__set_somtTargetType=&somDS_SOMTEmitC__set_somtTargetType;
	#endif /* static_somDI_SOMTEmitC__set_somtTargetType */
	SOM_Scope void SOMLINK _set_somtTargetType(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTTargetTypeT somtTargetType);
	#ifdef __IBMC__
		#pragma linkage(_set_somtTargetType,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtTargetType   0
	#define somAP_SOMTEmitC__set_somtTargetType   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetType(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTargetTypeT somtTargetType);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtTargetType,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtTargetType(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTargetTypeT somtTargetType)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtTargetType,somSelf,
				somtTargetType);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetType(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtTargetType,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtTargetType(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTTargetTypeT somtTargetType;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtTargetType=va_arg(_somC_ap,SOMTTargetTypeT );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtTargetType)_somC_methodPtr)(somSelf,somtTargetType);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtTargetType={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(SOMTTargetTypeT)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtTargetType={
		(somMethodPtr)somRD_SOMTEmitC__set_somtTargetType,
		(somMethodPtr)somAP_SOMTEmitC__set_somtTargetType,
		&somMethodInfo_SOMTEmitC__set_somtTargetType};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtTargetType
		#define static_somMN__get_somtTargetType
		static const char * somMN__get_somtTargetType="_get_somtTargetType";
	#endif /* static_somMN__get_somtTargetType */
	#ifndef static_somId__get_somtTargetType
		#define static_somId__get_somtTargetType
		static const somConstId somId__get_somtTargetType=&somMN__get_somtTargetType;
	#endif /* static_somId__get_somtTargetType */
	#ifndef static_somDS_SOMTEmitC__get_somtTargetType
		#define static_somDS_SOMTEmitC__get_somtTargetType
		static const char * somDS_SOMTEmitC__get_somtTargetType="SOMTEmitC::_get_somtTargetType";
	#endif /* static_somDS_SOMTEmitC__get_somtTargetType */
	#ifndef static_somDI_SOMTEmitC__get_somtTargetType
		#define static_somDI_SOMTEmitC__get_somtTargetType
		static const somConstId somDI_SOMTEmitC__get_somtTargetType=&somDS_SOMTEmitC__get_somtTargetType;
	#endif /* static_somDI_SOMTEmitC__get_somtTargetType */
	SOM_Scope SOMTTargetTypeT SOMLINK _get_somtTargetType(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtTargetType,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtTargetType   0
	#define somAP_SOMTEmitC__get_somtTargetType   0
#else /* SOM_METHOD_STUBS */
	static SOMTTargetTypeT SOMLINK somRD_SOMTEmitC__get_somtTargetType(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtTargetType,system)
	#endif /* __IBMC__ */
	static SOMTTargetTypeT SOMLINK somRD_SOMTEmitC__get_somtTargetType(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTTargetTypeT _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtTargetType,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetType(
		SOMTEmitC SOMSTAR somSelf,
		SOMTTargetTypeT *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtTargetType,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtTargetType(
		SOMTEmitC SOMSTAR somSelf,
		SOMTTargetTypeT *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtTargetType)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtTargetType={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtTargetType={
		(somMethodPtr)somRD_SOMTEmitC__get_somtTargetType,
		(somMethodPtr)somAP_SOMTEmitC__get_somtTargetType,
		&somMethodInfo_SOMTEmitC__get_somtTargetType};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__set_somtEmitterName
		#define static_somMN__set_somtEmitterName
		static const char * somMN__set_somtEmitterName="_set_somtEmitterName";
	#endif /* static_somMN__set_somtEmitterName */
	#ifndef static_somId__set_somtEmitterName
		#define static_somId__set_somtEmitterName
		static const somConstId somId__set_somtEmitterName=&somMN__set_somtEmitterName;
	#endif /* static_somId__set_somtEmitterName */
	#ifndef static_somDS_SOMTEmitC__set_somtEmitterName
		#define static_somDS_SOMTEmitC__set_somtEmitterName
		static const char * somDS_SOMTEmitC__set_somtEmitterName="SOMTEmitC::_set_somtEmitterName";
	#endif /* static_somDS_SOMTEmitC__set_somtEmitterName */
	#ifndef static_somDI_SOMTEmitC__set_somtEmitterName
		#define static_somDI_SOMTEmitC__set_somtEmitterName
		static const somConstId somDI_SOMTEmitC__set_somtEmitterName=&somDS_SOMTEmitC__set_somtEmitterName;
	#endif /* static_somDI_SOMTEmitC__set_somtEmitterName */
	SOM_Scope void SOMLINK _set_somtEmitterName(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string somtEmitterName);
	#ifdef __IBMC__
		#pragma linkage(_set_somtEmitterName,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__set_somtEmitterName   0
	#define somAP_SOMTEmitC__set_somtEmitterName   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC__set_somtEmitterName(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string somtEmitterName);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__set_somtEmitterName,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC__set_somtEmitterName(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string somtEmitterName)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId__set_somtEmitterName,somSelf,
				somtEmitterName);
	}
	static void SOMLINK somAP_SOMTEmitC__set_somtEmitterName(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__set_somtEmitterName,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__set_somtEmitterName(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string somtEmitterName;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		somtEmitterName=va_arg(_somC_ap,string );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC__set_somtEmitterName)_somC_methodPtr)(somSelf,somtEmitterName);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__set_somtEmitterName={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__set_somtEmitterName={
		(somMethodPtr)somRD_SOMTEmitC__set_somtEmitterName,
		(somMethodPtr)somAP_SOMTEmitC__set_somtEmitterName,
		&somMethodInfo_SOMTEmitC__set_somtEmitterName};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN__get_somtEmitterName
		#define static_somMN__get_somtEmitterName
		static const char * somMN__get_somtEmitterName="_get_somtEmitterName";
	#endif /* static_somMN__get_somtEmitterName */
	#ifndef static_somId__get_somtEmitterName
		#define static_somId__get_somtEmitterName
		static const somConstId somId__get_somtEmitterName=&somMN__get_somtEmitterName;
	#endif /* static_somId__get_somtEmitterName */
	#ifndef static_somDS_SOMTEmitC__get_somtEmitterName
		#define static_somDS_SOMTEmitC__get_somtEmitterName
		static const char * somDS_SOMTEmitC__get_somtEmitterName="SOMTEmitC::_get_somtEmitterName";
	#endif /* static_somDS_SOMTEmitC__get_somtEmitterName */
	#ifndef static_somDI_SOMTEmitC__get_somtEmitterName
		#define static_somDI_SOMTEmitC__get_somtEmitterName
		static const somConstId somDI_SOMTEmitC__get_somtEmitterName=&somDS_SOMTEmitC__get_somtEmitterName;
	#endif /* static_somDI_SOMTEmitC__get_somtEmitterName */
	SOM_Scope string SOMLINK _get_somtEmitterName(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(_get_somtEmitterName,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC__get_somtEmitterName   0
	#define somAP_SOMTEmitC__get_somtEmitterName   0
#else /* SOM_METHOD_STUBS */
	static string SOMLINK somRD_SOMTEmitC__get_somtEmitterName(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC__get_somtEmitterName,system)
	#endif /* __IBMC__ */
	static string SOMLINK somRD_SOMTEmitC__get_somtEmitterName(
			SOMTEmitC SOMSTAR somSelf)
	{
		string _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId__get_somtEmitterName,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC__get_somtEmitterName(
		SOMTEmitC SOMSTAR somSelf,
		string *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC__get_somtEmitterName,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC__get_somtEmitterName(
		SOMTEmitC SOMSTAR somSelf,
		string *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC__get_somtEmitterName)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC__get_somtEmitterName={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC__get_somtEmitterName={
		(somMethodPtr)somRD_SOMTEmitC__get_somtEmitterName,
		(somMethodPtr)somAP_SOMTEmitC__get_somtEmitterName,
		&somMethodInfo_SOMTEmitC__get_somtEmitterName};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtGenerateSections
		#define static_somMN_somtGenerateSections
		static const char * somMN_somtGenerateSections="somtGenerateSections";
	#endif /* static_somMN_somtGenerateSections */
	#ifndef static_somId_somtGenerateSections
		#define static_somId_somtGenerateSections
		static const somConstId somId_somtGenerateSections=&somMN_somtGenerateSections;
	#endif /* static_somId_somtGenerateSections */
	#ifndef static_somDS_SOMTEmitC_somtGenerateSections
		#define static_somDS_SOMTEmitC_somtGenerateSections
		static const char * somDS_SOMTEmitC_somtGenerateSections="SOMTEmitC::somtGenerateSections";
	#endif /* static_somDS_SOMTEmitC_somtGenerateSections */
	#ifndef static_somDI_SOMTEmitC_somtGenerateSections
		#define static_somDI_SOMTEmitC_somtGenerateSections
		static const somConstId somDI_SOMTEmitC_somtGenerateSections=&somDS_SOMTEmitC_somtGenerateSections;
	#endif /* static_somDI_SOMTEmitC_somtGenerateSections */
	SOM_Scope boolean SOMLINK somtGenerateSections(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtGenerateSections,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtGenerateSections   0
	#define somAP_SOMTEmitC_somtGenerateSections   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtGenerateSections(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtGenerateSections,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtGenerateSections(
			SOMTEmitC SOMSTAR somSelf)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtGenerateSections,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtGenerateSections(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtGenerateSections,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtGenerateSections(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtGenerateSections)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtGenerateSections={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtGenerateSections={
		(somMethodPtr)somRD_SOMTEmitC_somtGenerateSections,
		(somMethodPtr)somAP_SOMTEmitC_somtGenerateSections,
		&somMethodInfo_SOMTEmitC_somtGenerateSections};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtOpenSymbolsFile
		#define static_somMN_somtOpenSymbolsFile
		static const char * somMN_somtOpenSymbolsFile="somtOpenSymbolsFile";
	#endif /* static_somMN_somtOpenSymbolsFile */
	#ifndef static_somId_somtOpenSymbolsFile
		#define static_somId_somtOpenSymbolsFile
		static const somConstId somId_somtOpenSymbolsFile=&somMN_somtOpenSymbolsFile;
	#endif /* static_somId_somtOpenSymbolsFile */
	#ifndef static_somDS_SOMTEmitC_somtOpenSymbolsFile
		#define static_somDS_SOMTEmitC_somtOpenSymbolsFile
		static const char * somDS_SOMTEmitC_somtOpenSymbolsFile="SOMTEmitC::somtOpenSymbolsFile";
	#endif /* static_somDS_SOMTEmitC_somtOpenSymbolsFile */
	#ifndef static_somDI_SOMTEmitC_somtOpenSymbolsFile
		#define static_somDI_SOMTEmitC_somtOpenSymbolsFile
		static const somConstId somDI_SOMTEmitC_somtOpenSymbolsFile=&somDS_SOMTEmitC_somtOpenSymbolsFile;
	#endif /* static_somDI_SOMTEmitC_somtOpenSymbolsFile */
	SOM_Scope FILE *SOMLINK somtOpenSymbolsFile(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string file,
	/* in */ string mode);
	#ifdef __IBMC__
		#pragma linkage(somtOpenSymbolsFile,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtOpenSymbolsFile   0
	#define somAP_SOMTEmitC_somtOpenSymbolsFile   0
#else /* SOM_METHOD_STUBS */
	static FILE *SOMLINK somRD_SOMTEmitC_somtOpenSymbolsFile(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string file,
			/* in */ string mode);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtOpenSymbolsFile,system)
	#endif /* __IBMC__ */
	static FILE *SOMLINK somRD_SOMTEmitC_somtOpenSymbolsFile(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string file,
			/* in */ string mode)
	{
		FILE *_somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtOpenSymbolsFile,somSelf,
				file,
				mode);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtOpenSymbolsFile(
		SOMTEmitC SOMSTAR somSelf,
		FILE **_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtOpenSymbolsFile,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtOpenSymbolsFile(
		SOMTEmitC SOMSTAR somSelf,
		FILE **_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string file;
		string mode;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		file=va_arg(_somC_ap,string );
		mode=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtOpenSymbolsFile)_somC_methodPtr)(somSelf,file,mode);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtOpenSymbolsFile={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtOpenSymbolsFile={
		(somMethodPtr)somRD_SOMTEmitC_somtOpenSymbolsFile,
		(somMethodPtr)somAP_SOMTEmitC_somtOpenSymbolsFile,
		&somMethodInfo_SOMTEmitC_somtOpenSymbolsFile};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtSetPredefinedSymbols
		#define static_somMN_somtSetPredefinedSymbols
		static const char * somMN_somtSetPredefinedSymbols="somtSetPredefinedSymbols";
	#endif /* static_somMN_somtSetPredefinedSymbols */
	#ifndef static_somId_somtSetPredefinedSymbols
		#define static_somId_somtSetPredefinedSymbols
		static const somConstId somId_somtSetPredefinedSymbols=&somMN_somtSetPredefinedSymbols;
	#endif /* static_somId_somtSetPredefinedSymbols */
	#ifndef static_somDS_SOMTEmitC_somtSetPredefinedSymbols
		#define static_somDS_SOMTEmitC_somtSetPredefinedSymbols
		static const char * somDS_SOMTEmitC_somtSetPredefinedSymbols="SOMTEmitC::somtSetPredefinedSymbols";
	#endif /* static_somDS_SOMTEmitC_somtSetPredefinedSymbols */
	#ifndef static_somDI_SOMTEmitC_somtSetPredefinedSymbols
		#define static_somDI_SOMTEmitC_somtSetPredefinedSymbols
		static const somConstId somDI_SOMTEmitC_somtSetPredefinedSymbols=&somDS_SOMTEmitC_somtSetPredefinedSymbols;
	#endif /* static_somDI_SOMTEmitC_somtSetPredefinedSymbols */
	SOM_Scope void SOMLINK somtSetPredefinedSymbols(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtSetPredefinedSymbols,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtSetPredefinedSymbols   0
	#define somAP_SOMTEmitC_somtSetPredefinedSymbols   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtSetPredefinedSymbols(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtSetPredefinedSymbols,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtSetPredefinedSymbols(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtSetPredefinedSymbols,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtSetPredefinedSymbols(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtSetPredefinedSymbols,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtSetPredefinedSymbols(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtSetPredefinedSymbols)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtSetPredefinedSymbols={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtSetPredefinedSymbols={
		(somMethodPtr)somRD_SOMTEmitC_somtSetPredefinedSymbols,
		(somMethodPtr)somAP_SOMTEmitC_somtSetPredefinedSymbols,
		&somMethodInfo_SOMTEmitC_somtSetPredefinedSymbols};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtFileSymbols
		#define static_somMN_somtFileSymbols
		static const char * somMN_somtFileSymbols="somtFileSymbols";
	#endif /* static_somMN_somtFileSymbols */
	#ifndef static_somId_somtFileSymbols
		#define static_somId_somtFileSymbols
		static const somConstId somId_somtFileSymbols=&somMN_somtFileSymbols;
	#endif /* static_somId_somtFileSymbols */
	#ifndef static_somDS_SOMTEmitC_somtFileSymbols
		#define static_somDS_SOMTEmitC_somtFileSymbols
		static const char * somDS_SOMTEmitC_somtFileSymbols="SOMTEmitC::somtFileSymbols";
	#endif /* static_somDS_SOMTEmitC_somtFileSymbols */
	#ifndef static_somDI_SOMTEmitC_somtFileSymbols
		#define static_somDI_SOMTEmitC_somtFileSymbols
		static const somConstId somDI_SOMTEmitC_somtFileSymbols=&somDS_SOMTEmitC_somtFileSymbols;
	#endif /* static_somDI_SOMTEmitC_somtFileSymbols */
	SOM_Scope void SOMLINK somtFileSymbols(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtFileSymbols,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtFileSymbols   0
	#define somAP_SOMTEmitC_somtFileSymbols   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtFileSymbols(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtFileSymbols,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtFileSymbols(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtFileSymbols,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtFileSymbols(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtFileSymbols,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtFileSymbols(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtFileSymbols)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtFileSymbols={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtFileSymbols={
		(somMethodPtr)somRD_SOMTEmitC_somtFileSymbols,
		(somMethodPtr)somAP_SOMTEmitC_somtFileSymbols,
		&somMethodInfo_SOMTEmitC_somtFileSymbols};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitProlog
		#define static_somMN_somtEmitProlog
		static const char * somMN_somtEmitProlog="somtEmitProlog";
	#endif /* static_somMN_somtEmitProlog */
	#ifndef static_somId_somtEmitProlog
		#define static_somId_somtEmitProlog
		static const somConstId somId_somtEmitProlog=&somMN_somtEmitProlog;
	#endif /* static_somId_somtEmitProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitProlog
		#define static_somDS_SOMTEmitC_somtEmitProlog
		static const char * somDS_SOMTEmitC_somtEmitProlog="SOMTEmitC::somtEmitProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitProlog
		#define static_somDI_SOMTEmitC_somtEmitProlog
		static const somConstId somDI_SOMTEmitC_somtEmitProlog=&somDS_SOMTEmitC_somtEmitProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitProlog */
	SOM_Scope void SOMLINK somtEmitProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitProlog   0
	#define somAP_SOMTEmitC_somtEmitProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitProlog,
		&somMethodInfo_SOMTEmitC_somtEmitProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBaseIncludesProlog
		#define static_somMN_somtEmitBaseIncludesProlog
		static const char * somMN_somtEmitBaseIncludesProlog="somtEmitBaseIncludesProlog";
	#endif /* static_somMN_somtEmitBaseIncludesProlog */
	#ifndef static_somId_somtEmitBaseIncludesProlog
		#define static_somId_somtEmitBaseIncludesProlog
		static const somConstId somId_somtEmitBaseIncludesProlog=&somMN_somtEmitBaseIncludesProlog;
	#endif /* static_somId_somtEmitBaseIncludesProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitBaseIncludesProlog
		#define static_somDS_SOMTEmitC_somtEmitBaseIncludesProlog
		static const char * somDS_SOMTEmitC_somtEmitBaseIncludesProlog="SOMTEmitC::somtEmitBaseIncludesProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitBaseIncludesProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitBaseIncludesProlog
		#define static_somDI_SOMTEmitC_somtEmitBaseIncludesProlog
		static const somConstId somDI_SOMTEmitC_somtEmitBaseIncludesProlog=&somDS_SOMTEmitC_somtEmitBaseIncludesProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitBaseIncludesProlog */
	SOM_Scope void SOMLINK somtEmitBaseIncludesProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBaseIncludesProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBaseIncludesProlog   0
	#define somAP_SOMTEmitC_somtEmitBaseIncludesProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludesProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBaseIncludesProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludesProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBaseIncludesProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludesProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBaseIncludesProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludesProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBaseIncludesProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBaseIncludesProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBaseIncludesProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludesProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludesProlog,
		&somMethodInfo_SOMTEmitC_somtEmitBaseIncludesProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBaseIncludes
		#define static_somMN_somtEmitBaseIncludes
		static const char * somMN_somtEmitBaseIncludes="somtEmitBaseIncludes";
	#endif /* static_somMN_somtEmitBaseIncludes */
	#ifndef static_somId_somtEmitBaseIncludes
		#define static_somId_somtEmitBaseIncludes
		static const somConstId somId_somtEmitBaseIncludes=&somMN_somtEmitBaseIncludes;
	#endif /* static_somId_somtEmitBaseIncludes */
	#ifndef static_somDS_SOMTEmitC_somtEmitBaseIncludes
		#define static_somDS_SOMTEmitC_somtEmitBaseIncludes
		static const char * somDS_SOMTEmitC_somtEmitBaseIncludes="SOMTEmitC::somtEmitBaseIncludes";
	#endif /* static_somDS_SOMTEmitC_somtEmitBaseIncludes */
	#ifndef static_somDI_SOMTEmitC_somtEmitBaseIncludes
		#define static_somDI_SOMTEmitC_somtEmitBaseIncludes
		static const somConstId somDI_SOMTEmitC_somtEmitBaseIncludes=&somDS_SOMTEmitC_somtEmitBaseIncludes;
	#endif /* static_somDI_SOMTEmitC_somtEmitBaseIncludes */
	SOM_Scope void SOMLINK somtEmitBaseIncludes(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTBaseClassEntryC SOMSTAR base);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBaseIncludes,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBaseIncludes   0
	#define somAP_SOMTEmitC_somtEmitBaseIncludes   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTBaseClassEntryC SOMSTAR base);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBaseIncludes,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTBaseClassEntryC SOMSTAR base)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBaseIncludes,somSelf,
				base);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludes(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBaseIncludes,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludes(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTBaseClassEntryC SOMSTAR base;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		base=va_arg(_somC_ap,SOMTBaseClassEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBaseIncludes)_somC_methodPtr)(somSelf,base);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBaseIncludes={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBaseIncludes={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludes,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludes,
		&somMethodInfo_SOMTEmitC_somtEmitBaseIncludes};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBaseIncludesEpilog
		#define static_somMN_somtEmitBaseIncludesEpilog
		static const char * somMN_somtEmitBaseIncludesEpilog="somtEmitBaseIncludesEpilog";
	#endif /* static_somMN_somtEmitBaseIncludesEpilog */
	#ifndef static_somId_somtEmitBaseIncludesEpilog
		#define static_somId_somtEmitBaseIncludesEpilog
		static const somConstId somId_somtEmitBaseIncludesEpilog=&somMN_somtEmitBaseIncludesEpilog;
	#endif /* static_somId_somtEmitBaseIncludesEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitBaseIncludesEpilog
		#define static_somDS_SOMTEmitC_somtEmitBaseIncludesEpilog
		static const char * somDS_SOMTEmitC_somtEmitBaseIncludesEpilog="SOMTEmitC::somtEmitBaseIncludesEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitBaseIncludesEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitBaseIncludesEpilog
		#define static_somDI_SOMTEmitC_somtEmitBaseIncludesEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitBaseIncludesEpilog=&somDS_SOMTEmitC_somtEmitBaseIncludesEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitBaseIncludesEpilog */
	SOM_Scope void SOMLINK somtEmitBaseIncludesEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBaseIncludesEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBaseIncludesEpilog   0
	#define somAP_SOMTEmitC_somtEmitBaseIncludesEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludesEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBaseIncludesEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseIncludesEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBaseIncludesEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludesEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBaseIncludesEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseIncludesEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBaseIncludesEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBaseIncludesEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBaseIncludesEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludesEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludesEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitBaseIncludesEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMetaInclude
		#define static_somMN_somtEmitMetaInclude
		static const char * somMN_somtEmitMetaInclude="somtEmitMetaInclude";
	#endif /* static_somMN_somtEmitMetaInclude */
	#ifndef static_somId_somtEmitMetaInclude
		#define static_somId_somtEmitMetaInclude
		static const somConstId somId_somtEmitMetaInclude=&somMN_somtEmitMetaInclude;
	#endif /* static_somId_somtEmitMetaInclude */
	#ifndef static_somDS_SOMTEmitC_somtEmitMetaInclude
		#define static_somDS_SOMTEmitC_somtEmitMetaInclude
		static const char * somDS_SOMTEmitC_somtEmitMetaInclude="SOMTEmitC::somtEmitMetaInclude";
	#endif /* static_somDS_SOMTEmitC_somtEmitMetaInclude */
	#ifndef static_somDI_SOMTEmitC_somtEmitMetaInclude
		#define static_somDI_SOMTEmitC_somtEmitMetaInclude
		static const somConstId somDI_SOMTEmitC_somtEmitMetaInclude=&somDS_SOMTEmitC_somtEmitMetaInclude;
	#endif /* static_somDI_SOMTEmitC_somtEmitMetaInclude */
	SOM_Scope void SOMLINK somtEmitMetaInclude(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMetaInclude,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMetaInclude   0
	#define somAP_SOMTEmitC_somtEmitMetaInclude   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMetaInclude(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMetaInclude,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMetaInclude(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMetaInclude,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMetaInclude(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMetaInclude,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMetaInclude(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMetaInclude)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMetaInclude={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMetaInclude={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMetaInclude,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMetaInclude,
		&somMethodInfo_SOMTEmitC_somtEmitMetaInclude};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitClass
		#define static_somMN_somtEmitClass
		static const char * somMN_somtEmitClass="somtEmitClass";
	#endif /* static_somMN_somtEmitClass */
	#ifndef static_somId_somtEmitClass
		#define static_somId_somtEmitClass
		static const somConstId somId_somtEmitClass=&somMN_somtEmitClass;
	#endif /* static_somId_somtEmitClass */
	#ifndef static_somDS_SOMTEmitC_somtEmitClass
		#define static_somDS_SOMTEmitC_somtEmitClass
		static const char * somDS_SOMTEmitC_somtEmitClass="SOMTEmitC::somtEmitClass";
	#endif /* static_somDS_SOMTEmitC_somtEmitClass */
	#ifndef static_somDI_SOMTEmitC_somtEmitClass
		#define static_somDI_SOMTEmitC_somtEmitClass
		static const somConstId somDI_SOMTEmitC_somtEmitClass=&somDS_SOMTEmitC_somtEmitClass;
	#endif /* static_somDI_SOMTEmitC_somtEmitClass */
	SOM_Scope void SOMLINK somtEmitClass(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitClass,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitClass   0
	#define somAP_SOMTEmitC_somtEmitClass   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitClass(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitClass,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitClass(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitClass,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitClass(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitClass,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitClass(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitClass)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitClass={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitClass={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitClass,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitClass,
		&somMethodInfo_SOMTEmitC_somtEmitClass};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMeta
		#define static_somMN_somtEmitMeta
		static const char * somMN_somtEmitMeta="somtEmitMeta";
	#endif /* static_somMN_somtEmitMeta */
	#ifndef static_somId_somtEmitMeta
		#define static_somId_somtEmitMeta
		static const somConstId somId_somtEmitMeta=&somMN_somtEmitMeta;
	#endif /* static_somId_somtEmitMeta */
	#ifndef static_somDS_SOMTEmitC_somtEmitMeta
		#define static_somDS_SOMTEmitC_somtEmitMeta
		static const char * somDS_SOMTEmitC_somtEmitMeta="SOMTEmitC::somtEmitMeta";
	#endif /* static_somDS_SOMTEmitC_somtEmitMeta */
	#ifndef static_somDI_SOMTEmitC_somtEmitMeta
		#define static_somDI_SOMTEmitC_somtEmitMeta
		static const somConstId somDI_SOMTEmitC_somtEmitMeta=&somDS_SOMTEmitC_somtEmitMeta;
	#endif /* static_somDI_SOMTEmitC_somtEmitMeta */
	SOM_Scope void SOMLINK somtEmitMeta(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMeta,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMeta   0
	#define somAP_SOMTEmitC_somtEmitMeta   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMeta(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMeta,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMeta(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMeta,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMeta(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMeta,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMeta(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMeta)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMeta={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMeta={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMeta,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMeta,
		&somMethodInfo_SOMTEmitC_somtEmitMeta};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBaseProlog
		#define static_somMN_somtEmitBaseProlog
		static const char * somMN_somtEmitBaseProlog="somtEmitBaseProlog";
	#endif /* static_somMN_somtEmitBaseProlog */
	#ifndef static_somId_somtEmitBaseProlog
		#define static_somId_somtEmitBaseProlog
		static const somConstId somId_somtEmitBaseProlog=&somMN_somtEmitBaseProlog;
	#endif /* static_somId_somtEmitBaseProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitBaseProlog
		#define static_somDS_SOMTEmitC_somtEmitBaseProlog
		static const char * somDS_SOMTEmitC_somtEmitBaseProlog="SOMTEmitC::somtEmitBaseProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitBaseProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitBaseProlog
		#define static_somDI_SOMTEmitC_somtEmitBaseProlog
		static const somConstId somDI_SOMTEmitC_somtEmitBaseProlog=&somDS_SOMTEmitC_somtEmitBaseProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitBaseProlog */
	SOM_Scope void SOMLINK somtEmitBaseProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBaseProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBaseProlog   0
	#define somAP_SOMTEmitC_somtEmitBaseProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBaseProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBaseProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBaseProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBaseProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBaseProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBaseProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseProlog,
		&somMethodInfo_SOMTEmitC_somtEmitBaseProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBase
		#define static_somMN_somtEmitBase
		static const char * somMN_somtEmitBase="somtEmitBase";
	#endif /* static_somMN_somtEmitBase */
	#ifndef static_somId_somtEmitBase
		#define static_somId_somtEmitBase
		static const somConstId somId_somtEmitBase=&somMN_somtEmitBase;
	#endif /* static_somId_somtEmitBase */
	#ifndef static_somDS_SOMTEmitC_somtEmitBase
		#define static_somDS_SOMTEmitC_somtEmitBase
		static const char * somDS_SOMTEmitC_somtEmitBase="SOMTEmitC::somtEmitBase";
	#endif /* static_somDS_SOMTEmitC_somtEmitBase */
	#ifndef static_somDI_SOMTEmitC_somtEmitBase
		#define static_somDI_SOMTEmitC_somtEmitBase
		static const somConstId somDI_SOMTEmitC_somtEmitBase=&somDS_SOMTEmitC_somtEmitBase;
	#endif /* static_somDI_SOMTEmitC_somtEmitBase */
	SOM_Scope void SOMLINK somtEmitBase(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTBaseClassEntryC SOMSTAR base);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBase,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBase   0
	#define somAP_SOMTEmitC_somtEmitBase   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBase(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTBaseClassEntryC SOMSTAR base);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBase,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBase(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTBaseClassEntryC SOMSTAR base)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBase,somSelf,
				base);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBase(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBase,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBase(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTBaseClassEntryC SOMSTAR base;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		base=va_arg(_somC_ap,SOMTBaseClassEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBase)_somC_methodPtr)(somSelf,base);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBase={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBase={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBase,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBase,
		&somMethodInfo_SOMTEmitC_somtEmitBase};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitBaseEpilog
		#define static_somMN_somtEmitBaseEpilog
		static const char * somMN_somtEmitBaseEpilog="somtEmitBaseEpilog";
	#endif /* static_somMN_somtEmitBaseEpilog */
	#ifndef static_somId_somtEmitBaseEpilog
		#define static_somId_somtEmitBaseEpilog
		static const somConstId somId_somtEmitBaseEpilog=&somMN_somtEmitBaseEpilog;
	#endif /* static_somId_somtEmitBaseEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitBaseEpilog
		#define static_somDS_SOMTEmitC_somtEmitBaseEpilog
		static const char * somDS_SOMTEmitC_somtEmitBaseEpilog="SOMTEmitC::somtEmitBaseEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitBaseEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitBaseEpilog
		#define static_somDI_SOMTEmitC_somtEmitBaseEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitBaseEpilog=&somDS_SOMTEmitC_somtEmitBaseEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitBaseEpilog */
	SOM_Scope void SOMLINK somtEmitBaseEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitBaseEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitBaseEpilog   0
	#define somAP_SOMTEmitC_somtEmitBaseEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitBaseEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitBaseEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitBaseEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitBaseEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitBaseEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitBaseEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitBaseEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitBaseEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitBaseEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitPassthruProlog
		#define static_somMN_somtEmitPassthruProlog
		static const char * somMN_somtEmitPassthruProlog="somtEmitPassthruProlog";
	#endif /* static_somMN_somtEmitPassthruProlog */
	#ifndef static_somId_somtEmitPassthruProlog
		#define static_somId_somtEmitPassthruProlog
		static const somConstId somId_somtEmitPassthruProlog=&somMN_somtEmitPassthruProlog;
	#endif /* static_somId_somtEmitPassthruProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitPassthruProlog
		#define static_somDS_SOMTEmitC_somtEmitPassthruProlog
		static const char * somDS_SOMTEmitC_somtEmitPassthruProlog="SOMTEmitC::somtEmitPassthruProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitPassthruProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitPassthruProlog
		#define static_somDI_SOMTEmitC_somtEmitPassthruProlog
		static const somConstId somDI_SOMTEmitC_somtEmitPassthruProlog=&somDS_SOMTEmitC_somtEmitPassthruProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitPassthruProlog */
	SOM_Scope void SOMLINK somtEmitPassthruProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitPassthruProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitPassthruProlog   0
	#define somAP_SOMTEmitC_somtEmitPassthruProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthruProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitPassthruProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthruProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitPassthruProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthruProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitPassthruProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthruProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitPassthruProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitPassthruProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitPassthruProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthruProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthruProlog,
		&somMethodInfo_SOMTEmitC_somtEmitPassthruProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitPassthru
		#define static_somMN_somtEmitPassthru
		static const char * somMN_somtEmitPassthru="somtEmitPassthru";
	#endif /* static_somMN_somtEmitPassthru */
	#ifndef static_somId_somtEmitPassthru
		#define static_somId_somtEmitPassthru
		static const somConstId somId_somtEmitPassthru=&somMN_somtEmitPassthru;
	#endif /* static_somId_somtEmitPassthru */
	#ifndef static_somDS_SOMTEmitC_somtEmitPassthru
		#define static_somDS_SOMTEmitC_somtEmitPassthru
		static const char * somDS_SOMTEmitC_somtEmitPassthru="SOMTEmitC::somtEmitPassthru";
	#endif /* static_somDS_SOMTEmitC_somtEmitPassthru */
	#ifndef static_somDI_SOMTEmitC_somtEmitPassthru
		#define static_somDI_SOMTEmitC_somtEmitPassthru
		static const somConstId somDI_SOMTEmitC_somtEmitPassthru=&somDS_SOMTEmitC_somtEmitPassthru;
	#endif /* static_somDI_SOMTEmitC_somtEmitPassthru */
	SOM_Scope void SOMLINK somtEmitPassthru(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTPassthruEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtEmitPassthru,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitPassthru   0
	#define somAP_SOMTEmitC_somtEmitPassthru   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTPassthruEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitPassthru,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTPassthruEntryC SOMSTAR entry)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitPassthru,somSelf,
				entry);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthru(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitPassthru,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthru(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTPassthruEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTPassthruEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitPassthru)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitPassthru={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitPassthru={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthru,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthru,
		&somMethodInfo_SOMTEmitC_somtEmitPassthru};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitPassthruEpilog
		#define static_somMN_somtEmitPassthruEpilog
		static const char * somMN_somtEmitPassthruEpilog="somtEmitPassthruEpilog";
	#endif /* static_somMN_somtEmitPassthruEpilog */
	#ifndef static_somId_somtEmitPassthruEpilog
		#define static_somId_somtEmitPassthruEpilog
		static const somConstId somId_somtEmitPassthruEpilog=&somMN_somtEmitPassthruEpilog;
	#endif /* static_somId_somtEmitPassthruEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitPassthruEpilog
		#define static_somDS_SOMTEmitC_somtEmitPassthruEpilog
		static const char * somDS_SOMTEmitC_somtEmitPassthruEpilog="SOMTEmitC::somtEmitPassthruEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitPassthruEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitPassthruEpilog
		#define static_somDI_SOMTEmitC_somtEmitPassthruEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitPassthruEpilog=&somDS_SOMTEmitC_somtEmitPassthruEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitPassthruEpilog */
	SOM_Scope void SOMLINK somtEmitPassthruEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitPassthruEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitPassthruEpilog   0
	#define somAP_SOMTEmitC_somtEmitPassthruEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthruEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitPassthruEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitPassthruEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitPassthruEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthruEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitPassthruEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitPassthruEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitPassthruEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitPassthruEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitPassthruEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthruEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthruEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitPassthruEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitRelease
		#define static_somMN_somtEmitRelease
		static const char * somMN_somtEmitRelease="somtEmitRelease";
	#endif /* static_somMN_somtEmitRelease */
	#ifndef static_somId_somtEmitRelease
		#define static_somId_somtEmitRelease
		static const somConstId somId_somtEmitRelease=&somMN_somtEmitRelease;
	#endif /* static_somId_somtEmitRelease */
	#ifndef static_somDS_SOMTEmitC_somtEmitRelease
		#define static_somDS_SOMTEmitC_somtEmitRelease
		static const char * somDS_SOMTEmitC_somtEmitRelease="SOMTEmitC::somtEmitRelease";
	#endif /* static_somDS_SOMTEmitC_somtEmitRelease */
	#ifndef static_somDI_SOMTEmitC_somtEmitRelease
		#define static_somDI_SOMTEmitC_somtEmitRelease
		static const somConstId somDI_SOMTEmitC_somtEmitRelease=&somDS_SOMTEmitC_somtEmitRelease;
	#endif /* static_somDI_SOMTEmitC_somtEmitRelease */
	SOM_Scope void SOMLINK somtEmitRelease(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitRelease,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitRelease   0
	#define somAP_SOMTEmitC_somtEmitRelease   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitRelease(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitRelease,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitRelease(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitRelease,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitRelease(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitRelease,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitRelease(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitRelease)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitRelease={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitRelease={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitRelease,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitRelease,
		&somMethodInfo_SOMTEmitC_somtEmitRelease};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitDataProlog
		#define static_somMN_somtEmitDataProlog
		static const char * somMN_somtEmitDataProlog="somtEmitDataProlog";
	#endif /* static_somMN_somtEmitDataProlog */
	#ifndef static_somId_somtEmitDataProlog
		#define static_somId_somtEmitDataProlog
		static const somConstId somId_somtEmitDataProlog=&somMN_somtEmitDataProlog;
	#endif /* static_somId_somtEmitDataProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitDataProlog
		#define static_somDS_SOMTEmitC_somtEmitDataProlog
		static const char * somDS_SOMTEmitC_somtEmitDataProlog="SOMTEmitC::somtEmitDataProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitDataProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitDataProlog
		#define static_somDI_SOMTEmitC_somtEmitDataProlog
		static const somConstId somDI_SOMTEmitC_somtEmitDataProlog=&somDS_SOMTEmitC_somtEmitDataProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitDataProlog */
	SOM_Scope void SOMLINK somtEmitDataProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitDataProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitDataProlog   0
	#define somAP_SOMTEmitC_somtEmitDataProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitDataProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitDataProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitDataProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitDataProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitDataProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitDataProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitDataProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitDataProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitDataProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitDataProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitDataProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitDataProlog,
		&somMethodInfo_SOMTEmitC_somtEmitDataProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitData
		#define static_somMN_somtEmitData
		static const char * somMN_somtEmitData="somtEmitData";
	#endif /* static_somMN_somtEmitData */
	#ifndef static_somId_somtEmitData
		#define static_somId_somtEmitData
		static const somConstId somId_somtEmitData=&somMN_somtEmitData;
	#endif /* static_somId_somtEmitData */
	#ifndef static_somDS_SOMTEmitC_somtEmitData
		#define static_somDS_SOMTEmitC_somtEmitData
		static const char * somDS_SOMTEmitC_somtEmitData="SOMTEmitC::somtEmitData";
	#endif /* static_somDS_SOMTEmitC_somtEmitData */
	#ifndef static_somDI_SOMTEmitC_somtEmitData
		#define static_somDI_SOMTEmitC_somtEmitData
		static const somConstId somDI_SOMTEmitC_somtEmitData=&somDS_SOMTEmitC_somtEmitData;
	#endif /* static_somDI_SOMTEmitC_somtEmitData */
	SOM_Scope void SOMLINK somtEmitData(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTDataEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtEmitData,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitData   0
	#define somAP_SOMTEmitC_somtEmitData   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitData(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTDataEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitData,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitData(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTDataEntryC SOMSTAR entry)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitData,somSelf,
				entry);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitData(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitData,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitData(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTDataEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTDataEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitData)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitData={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitData={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitData,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitData,
		&somMethodInfo_SOMTEmitC_somtEmitData};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitDataEpilog
		#define static_somMN_somtEmitDataEpilog
		static const char * somMN_somtEmitDataEpilog="somtEmitDataEpilog";
	#endif /* static_somMN_somtEmitDataEpilog */
	#ifndef static_somId_somtEmitDataEpilog
		#define static_somId_somtEmitDataEpilog
		static const somConstId somId_somtEmitDataEpilog=&somMN_somtEmitDataEpilog;
	#endif /* static_somId_somtEmitDataEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitDataEpilog
		#define static_somDS_SOMTEmitC_somtEmitDataEpilog
		static const char * somDS_SOMTEmitC_somtEmitDataEpilog="SOMTEmitC::somtEmitDataEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitDataEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitDataEpilog
		#define static_somDI_SOMTEmitC_somtEmitDataEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitDataEpilog=&somDS_SOMTEmitC_somtEmitDataEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitDataEpilog */
	SOM_Scope void SOMLINK somtEmitDataEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitDataEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitDataEpilog   0
	#define somAP_SOMTEmitC_somtEmitDataEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitDataEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitDataEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitDataEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitDataEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitDataEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitDataEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitDataEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitDataEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitDataEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitDataEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitDataEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitDataEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitDataEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitAttributeProlog
		#define static_somMN_somtEmitAttributeProlog
		static const char * somMN_somtEmitAttributeProlog="somtEmitAttributeProlog";
	#endif /* static_somMN_somtEmitAttributeProlog */
	#ifndef static_somId_somtEmitAttributeProlog
		#define static_somId_somtEmitAttributeProlog
		static const somConstId somId_somtEmitAttributeProlog=&somMN_somtEmitAttributeProlog;
	#endif /* static_somId_somtEmitAttributeProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitAttributeProlog
		#define static_somDS_SOMTEmitC_somtEmitAttributeProlog
		static const char * somDS_SOMTEmitC_somtEmitAttributeProlog="SOMTEmitC::somtEmitAttributeProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitAttributeProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitAttributeProlog
		#define static_somDI_SOMTEmitC_somtEmitAttributeProlog
		static const somConstId somDI_SOMTEmitC_somtEmitAttributeProlog=&somDS_SOMTEmitC_somtEmitAttributeProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitAttributeProlog */
	SOM_Scope void SOMLINK somtEmitAttributeProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitAttributeProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitAttributeProlog   0
	#define somAP_SOMTEmitC_somtEmitAttributeProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttributeProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitAttributeProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttributeProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitAttributeProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttributeProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitAttributeProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttributeProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitAttributeProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitAttributeProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitAttributeProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitAttributeProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitAttributeProlog,
		&somMethodInfo_SOMTEmitC_somtEmitAttributeProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitAttribute
		#define static_somMN_somtEmitAttribute
		static const char * somMN_somtEmitAttribute="somtEmitAttribute";
	#endif /* static_somMN_somtEmitAttribute */
	#ifndef static_somId_somtEmitAttribute
		#define static_somId_somtEmitAttribute
		static const somConstId somId_somtEmitAttribute=&somMN_somtEmitAttribute;
	#endif /* static_somId_somtEmitAttribute */
	#ifndef static_somDS_SOMTEmitC_somtEmitAttribute
		#define static_somDS_SOMTEmitC_somtEmitAttribute
		static const char * somDS_SOMTEmitC_somtEmitAttribute="SOMTEmitC::somtEmitAttribute";
	#endif /* static_somDS_SOMTEmitC_somtEmitAttribute */
	#ifndef static_somDI_SOMTEmitC_somtEmitAttribute
		#define static_somDI_SOMTEmitC_somtEmitAttribute
		static const somConstId somDI_SOMTEmitC_somtEmitAttribute=&somDS_SOMTEmitC_somtEmitAttribute;
	#endif /* static_somDI_SOMTEmitC_somtEmitAttribute */
	SOM_Scope void SOMLINK somtEmitAttribute(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTAttributeEntryC SOMSTAR att);
	#ifdef __IBMC__
		#pragma linkage(somtEmitAttribute,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitAttribute   0
	#define somAP_SOMTEmitC_somtEmitAttribute   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttribute(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTAttributeEntryC SOMSTAR att);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitAttribute,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttribute(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTAttributeEntryC SOMSTAR att)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitAttribute,somSelf,
				att);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttribute(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitAttribute,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttribute(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTAttributeEntryC SOMSTAR att;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		att=va_arg(_somC_ap,SOMTAttributeEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitAttribute)_somC_methodPtr)(somSelf,att);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitAttribute={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitAttribute={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitAttribute,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitAttribute,
		&somMethodInfo_SOMTEmitC_somtEmitAttribute};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitAttributeEpilog
		#define static_somMN_somtEmitAttributeEpilog
		static const char * somMN_somtEmitAttributeEpilog="somtEmitAttributeEpilog";
	#endif /* static_somMN_somtEmitAttributeEpilog */
	#ifndef static_somId_somtEmitAttributeEpilog
		#define static_somId_somtEmitAttributeEpilog
		static const somConstId somId_somtEmitAttributeEpilog=&somMN_somtEmitAttributeEpilog;
	#endif /* static_somId_somtEmitAttributeEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitAttributeEpilog
		#define static_somDS_SOMTEmitC_somtEmitAttributeEpilog
		static const char * somDS_SOMTEmitC_somtEmitAttributeEpilog="SOMTEmitC::somtEmitAttributeEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitAttributeEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitAttributeEpilog
		#define static_somDI_SOMTEmitC_somtEmitAttributeEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitAttributeEpilog=&somDS_SOMTEmitC_somtEmitAttributeEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitAttributeEpilog */
	SOM_Scope void SOMLINK somtEmitAttributeEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitAttributeEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitAttributeEpilog   0
	#define somAP_SOMTEmitC_somtEmitAttributeEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttributeEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitAttributeEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitAttributeEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitAttributeEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttributeEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitAttributeEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitAttributeEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitAttributeEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitAttributeEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitAttributeEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitAttributeEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitAttributeEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitAttributeEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitConstantProlog
		#define static_somMN_somtEmitConstantProlog
		static const char * somMN_somtEmitConstantProlog="somtEmitConstantProlog";
	#endif /* static_somMN_somtEmitConstantProlog */
	#ifndef static_somId_somtEmitConstantProlog
		#define static_somId_somtEmitConstantProlog
		static const somConstId somId_somtEmitConstantProlog=&somMN_somtEmitConstantProlog;
	#endif /* static_somId_somtEmitConstantProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitConstantProlog
		#define static_somDS_SOMTEmitC_somtEmitConstantProlog
		static const char * somDS_SOMTEmitC_somtEmitConstantProlog="SOMTEmitC::somtEmitConstantProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitConstantProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitConstantProlog
		#define static_somDI_SOMTEmitC_somtEmitConstantProlog
		static const somConstId somDI_SOMTEmitC_somtEmitConstantProlog=&somDS_SOMTEmitC_somtEmitConstantProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitConstantProlog */
	SOM_Scope void SOMLINK somtEmitConstantProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitConstantProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitConstantProlog   0
	#define somAP_SOMTEmitC_somtEmitConstantProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstantProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitConstantProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstantProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitConstantProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstantProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitConstantProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstantProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitConstantProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitConstantProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitConstantProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitConstantProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitConstantProlog,
		&somMethodInfo_SOMTEmitC_somtEmitConstantProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitConstant
		#define static_somMN_somtEmitConstant
		static const char * somMN_somtEmitConstant="somtEmitConstant";
	#endif /* static_somMN_somtEmitConstant */
	#ifndef static_somId_somtEmitConstant
		#define static_somId_somtEmitConstant
		static const somConstId somId_somtEmitConstant=&somMN_somtEmitConstant;
	#endif /* static_somId_somtEmitConstant */
	#ifndef static_somDS_SOMTEmitC_somtEmitConstant
		#define static_somDS_SOMTEmitC_somtEmitConstant
		static const char * somDS_SOMTEmitC_somtEmitConstant="SOMTEmitC::somtEmitConstant";
	#endif /* static_somDS_SOMTEmitC_somtEmitConstant */
	#ifndef static_somDI_SOMTEmitC_somtEmitConstant
		#define static_somDI_SOMTEmitC_somtEmitConstant
		static const somConstId somDI_SOMTEmitC_somtEmitConstant=&somDS_SOMTEmitC_somtEmitConstant;
	#endif /* static_somDI_SOMTEmitC_somtEmitConstant */
	SOM_Scope void SOMLINK somtEmitConstant(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTConstEntryC SOMSTAR con);
	#ifdef __IBMC__
		#pragma linkage(somtEmitConstant,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitConstant   0
	#define somAP_SOMTEmitC_somtEmitConstant   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstant(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTConstEntryC SOMSTAR con);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitConstant,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstant(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTConstEntryC SOMSTAR con)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitConstant,somSelf,
				con);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstant(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitConstant,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstant(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTConstEntryC SOMSTAR con;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		con=va_arg(_somC_ap,SOMTConstEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitConstant)_somC_methodPtr)(somSelf,con);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitConstant={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitConstant={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitConstant,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitConstant,
		&somMethodInfo_SOMTEmitC_somtEmitConstant};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitConstantEpilog
		#define static_somMN_somtEmitConstantEpilog
		static const char * somMN_somtEmitConstantEpilog="somtEmitConstantEpilog";
	#endif /* static_somMN_somtEmitConstantEpilog */
	#ifndef static_somId_somtEmitConstantEpilog
		#define static_somId_somtEmitConstantEpilog
		static const somConstId somId_somtEmitConstantEpilog=&somMN_somtEmitConstantEpilog;
	#endif /* static_somId_somtEmitConstantEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitConstantEpilog
		#define static_somDS_SOMTEmitC_somtEmitConstantEpilog
		static const char * somDS_SOMTEmitC_somtEmitConstantEpilog="SOMTEmitC::somtEmitConstantEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitConstantEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitConstantEpilog
		#define static_somDI_SOMTEmitC_somtEmitConstantEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitConstantEpilog=&somDS_SOMTEmitC_somtEmitConstantEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitConstantEpilog */
	SOM_Scope void SOMLINK somtEmitConstantEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitConstantEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitConstantEpilog   0
	#define somAP_SOMTEmitC_somtEmitConstantEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstantEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitConstantEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitConstantEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitConstantEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstantEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitConstantEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitConstantEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitConstantEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitConstantEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitConstantEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitConstantEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitConstantEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitConstantEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitTypedefProlog
		#define static_somMN_somtEmitTypedefProlog
		static const char * somMN_somtEmitTypedefProlog="somtEmitTypedefProlog";
	#endif /* static_somMN_somtEmitTypedefProlog */
	#ifndef static_somId_somtEmitTypedefProlog
		#define static_somId_somtEmitTypedefProlog
		static const somConstId somId_somtEmitTypedefProlog=&somMN_somtEmitTypedefProlog;
	#endif /* static_somId_somtEmitTypedefProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitTypedefProlog
		#define static_somDS_SOMTEmitC_somtEmitTypedefProlog
		static const char * somDS_SOMTEmitC_somtEmitTypedefProlog="SOMTEmitC::somtEmitTypedefProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitTypedefProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitTypedefProlog
		#define static_somDI_SOMTEmitC_somtEmitTypedefProlog
		static const somConstId somDI_SOMTEmitC_somtEmitTypedefProlog=&somDS_SOMTEmitC_somtEmitTypedefProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitTypedefProlog */
	SOM_Scope void SOMLINK somtEmitTypedefProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitTypedefProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitTypedefProlog   0
	#define somAP_SOMTEmitC_somtEmitTypedefProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedefProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitTypedefProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedefProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitTypedefProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedefProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitTypedefProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedefProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitTypedefProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitTypedefProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitTypedefProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedefProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedefProlog,
		&somMethodInfo_SOMTEmitC_somtEmitTypedefProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitTypedef
		#define static_somMN_somtEmitTypedef
		static const char * somMN_somtEmitTypedef="somtEmitTypedef";
	#endif /* static_somMN_somtEmitTypedef */
	#ifndef static_somId_somtEmitTypedef
		#define static_somId_somtEmitTypedef
		static const somConstId somId_somtEmitTypedef=&somMN_somtEmitTypedef;
	#endif /* static_somId_somtEmitTypedef */
	#ifndef static_somDS_SOMTEmitC_somtEmitTypedef
		#define static_somDS_SOMTEmitC_somtEmitTypedef
		static const char * somDS_SOMTEmitC_somtEmitTypedef="SOMTEmitC::somtEmitTypedef";
	#endif /* static_somDS_SOMTEmitC_somtEmitTypedef */
	#ifndef static_somDI_SOMTEmitC_somtEmitTypedef
		#define static_somDI_SOMTEmitC_somtEmitTypedef
		static const somConstId somDI_SOMTEmitC_somtEmitTypedef=&somDS_SOMTEmitC_somtEmitTypedef;
	#endif /* static_somDI_SOMTEmitC_somtEmitTypedef */
	SOM_Scope void SOMLINK somtEmitTypedef(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTTypedefEntryC SOMSTAR td);
	#ifdef __IBMC__
		#pragma linkage(somtEmitTypedef,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitTypedef   0
	#define somAP_SOMTEmitC_somtEmitTypedef   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedef(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTypedefEntryC SOMSTAR td);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitTypedef,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedef(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTTypedefEntryC SOMSTAR td)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitTypedef,somSelf,
				td);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedef(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitTypedef,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedef(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTTypedefEntryC SOMSTAR td;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		td=va_arg(_somC_ap,SOMTTypedefEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitTypedef)_somC_methodPtr)(somSelf,td);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitTypedef={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitTypedef={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedef,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedef,
		&somMethodInfo_SOMTEmitC_somtEmitTypedef};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitTypedefEpilog
		#define static_somMN_somtEmitTypedefEpilog
		static const char * somMN_somtEmitTypedefEpilog="somtEmitTypedefEpilog";
	#endif /* static_somMN_somtEmitTypedefEpilog */
	#ifndef static_somId_somtEmitTypedefEpilog
		#define static_somId_somtEmitTypedefEpilog
		static const somConstId somId_somtEmitTypedefEpilog=&somMN_somtEmitTypedefEpilog;
	#endif /* static_somId_somtEmitTypedefEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitTypedefEpilog
		#define static_somDS_SOMTEmitC_somtEmitTypedefEpilog
		static const char * somDS_SOMTEmitC_somtEmitTypedefEpilog="SOMTEmitC::somtEmitTypedefEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitTypedefEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitTypedefEpilog
		#define static_somDI_SOMTEmitC_somtEmitTypedefEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitTypedefEpilog=&somDS_SOMTEmitC_somtEmitTypedefEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitTypedefEpilog */
	SOM_Scope void SOMLINK somtEmitTypedefEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitTypedefEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitTypedefEpilog   0
	#define somAP_SOMTEmitC_somtEmitTypedefEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedefEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitTypedefEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitTypedefEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitTypedefEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedefEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitTypedefEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitTypedefEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitTypedefEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitTypedefEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitTypedefEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedefEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedefEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitTypedefEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitStructProlog
		#define static_somMN_somtEmitStructProlog
		static const char * somMN_somtEmitStructProlog="somtEmitStructProlog";
	#endif /* static_somMN_somtEmitStructProlog */
	#ifndef static_somId_somtEmitStructProlog
		#define static_somId_somtEmitStructProlog
		static const somConstId somId_somtEmitStructProlog=&somMN_somtEmitStructProlog;
	#endif /* static_somId_somtEmitStructProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitStructProlog
		#define static_somDS_SOMTEmitC_somtEmitStructProlog
		static const char * somDS_SOMTEmitC_somtEmitStructProlog="SOMTEmitC::somtEmitStructProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitStructProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitStructProlog
		#define static_somDI_SOMTEmitC_somtEmitStructProlog
		static const somConstId somDI_SOMTEmitC_somtEmitStructProlog=&somDS_SOMTEmitC_somtEmitStructProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitStructProlog */
	SOM_Scope void SOMLINK somtEmitStructProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitStructProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitStructProlog   0
	#define somAP_SOMTEmitC_somtEmitStructProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStructProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitStructProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStructProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitStructProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitStructProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitStructProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitStructProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitStructProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitStructProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitStructProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitStructProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitStructProlog,
		&somMethodInfo_SOMTEmitC_somtEmitStructProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitStruct
		#define static_somMN_somtEmitStruct
		static const char * somMN_somtEmitStruct="somtEmitStruct";
	#endif /* static_somMN_somtEmitStruct */
	#ifndef static_somId_somtEmitStruct
		#define static_somId_somtEmitStruct
		static const somConstId somId_somtEmitStruct=&somMN_somtEmitStruct;
	#endif /* static_somId_somtEmitStruct */
	#ifndef static_somDS_SOMTEmitC_somtEmitStruct
		#define static_somDS_SOMTEmitC_somtEmitStruct
		static const char * somDS_SOMTEmitC_somtEmitStruct="SOMTEmitC::somtEmitStruct";
	#endif /* static_somDS_SOMTEmitC_somtEmitStruct */
	#ifndef static_somDI_SOMTEmitC_somtEmitStruct
		#define static_somDI_SOMTEmitC_somtEmitStruct
		static const somConstId somDI_SOMTEmitC_somtEmitStruct=&somDS_SOMTEmitC_somtEmitStruct;
	#endif /* static_somDI_SOMTEmitC_somtEmitStruct */
	SOM_Scope void SOMLINK somtEmitStruct(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTStructEntryC SOMSTAR struc);
	#ifdef __IBMC__
		#pragma linkage(somtEmitStruct,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitStruct   0
	#define somAP_SOMTEmitC_somtEmitStruct   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStruct(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTStructEntryC SOMSTAR struc);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitStruct,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStruct(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTStructEntryC SOMSTAR struc)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitStruct,somSelf,
				struc);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitStruct(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitStruct,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitStruct(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTStructEntryC SOMSTAR struc;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		struc=va_arg(_somC_ap,SOMTStructEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitStruct)_somC_methodPtr)(somSelf,struc);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitStruct={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitStruct={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitStruct,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitStruct,
		&somMethodInfo_SOMTEmitC_somtEmitStruct};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitStructEpilog
		#define static_somMN_somtEmitStructEpilog
		static const char * somMN_somtEmitStructEpilog="somtEmitStructEpilog";
	#endif /* static_somMN_somtEmitStructEpilog */
	#ifndef static_somId_somtEmitStructEpilog
		#define static_somId_somtEmitStructEpilog
		static const somConstId somId_somtEmitStructEpilog=&somMN_somtEmitStructEpilog;
	#endif /* static_somId_somtEmitStructEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitStructEpilog
		#define static_somDS_SOMTEmitC_somtEmitStructEpilog
		static const char * somDS_SOMTEmitC_somtEmitStructEpilog="SOMTEmitC::somtEmitStructEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitStructEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitStructEpilog
		#define static_somDI_SOMTEmitC_somtEmitStructEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitStructEpilog=&somDS_SOMTEmitC_somtEmitStructEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitStructEpilog */
	SOM_Scope void SOMLINK somtEmitStructEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitStructEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitStructEpilog   0
	#define somAP_SOMTEmitC_somtEmitStructEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStructEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitStructEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitStructEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitStructEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitStructEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitStructEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitStructEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitStructEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitStructEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitStructEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitStructEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitStructEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitStructEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitUnionProlog
		#define static_somMN_somtEmitUnionProlog
		static const char * somMN_somtEmitUnionProlog="somtEmitUnionProlog";
	#endif /* static_somMN_somtEmitUnionProlog */
	#ifndef static_somId_somtEmitUnionProlog
		#define static_somId_somtEmitUnionProlog
		static const somConstId somId_somtEmitUnionProlog=&somMN_somtEmitUnionProlog;
	#endif /* static_somId_somtEmitUnionProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitUnionProlog
		#define static_somDS_SOMTEmitC_somtEmitUnionProlog
		static const char * somDS_SOMTEmitC_somtEmitUnionProlog="SOMTEmitC::somtEmitUnionProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitUnionProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitUnionProlog
		#define static_somDI_SOMTEmitC_somtEmitUnionProlog
		static const somConstId somDI_SOMTEmitC_somtEmitUnionProlog=&somDS_SOMTEmitC_somtEmitUnionProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitUnionProlog */
	SOM_Scope void SOMLINK somtEmitUnionProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitUnionProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitUnionProlog   0
	#define somAP_SOMTEmitC_somtEmitUnionProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnionProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitUnionProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnionProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitUnionProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnionProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitUnionProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnionProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitUnionProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitUnionProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitUnionProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitUnionProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitUnionProlog,
		&somMethodInfo_SOMTEmitC_somtEmitUnionProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitUnion
		#define static_somMN_somtEmitUnion
		static const char * somMN_somtEmitUnion="somtEmitUnion";
	#endif /* static_somMN_somtEmitUnion */
	#ifndef static_somId_somtEmitUnion
		#define static_somId_somtEmitUnion
		static const somConstId somId_somtEmitUnion=&somMN_somtEmitUnion;
	#endif /* static_somId_somtEmitUnion */
	#ifndef static_somDS_SOMTEmitC_somtEmitUnion
		#define static_somDS_SOMTEmitC_somtEmitUnion
		static const char * somDS_SOMTEmitC_somtEmitUnion="SOMTEmitC::somtEmitUnion";
	#endif /* static_somDS_SOMTEmitC_somtEmitUnion */
	#ifndef static_somDI_SOMTEmitC_somtEmitUnion
		#define static_somDI_SOMTEmitC_somtEmitUnion
		static const somConstId somDI_SOMTEmitC_somtEmitUnion=&somDS_SOMTEmitC_somtEmitUnion;
	#endif /* static_somDI_SOMTEmitC_somtEmitUnion */
	SOM_Scope void SOMLINK somtEmitUnion(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTUnionEntryC SOMSTAR un);
	#ifdef __IBMC__
		#pragma linkage(somtEmitUnion,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitUnion   0
	#define somAP_SOMTEmitC_somtEmitUnion   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnion(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTUnionEntryC SOMSTAR un);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitUnion,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnion(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTUnionEntryC SOMSTAR un)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitUnion,somSelf,
				un);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnion(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitUnion,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnion(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTUnionEntryC SOMSTAR un;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		un=va_arg(_somC_ap,SOMTUnionEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitUnion)_somC_methodPtr)(somSelf,un);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitUnion={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitUnion={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitUnion,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitUnion,
		&somMethodInfo_SOMTEmitC_somtEmitUnion};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitUnionEpilog
		#define static_somMN_somtEmitUnionEpilog
		static const char * somMN_somtEmitUnionEpilog="somtEmitUnionEpilog";
	#endif /* static_somMN_somtEmitUnionEpilog */
	#ifndef static_somId_somtEmitUnionEpilog
		#define static_somId_somtEmitUnionEpilog
		static const somConstId somId_somtEmitUnionEpilog=&somMN_somtEmitUnionEpilog;
	#endif /* static_somId_somtEmitUnionEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitUnionEpilog
		#define static_somDS_SOMTEmitC_somtEmitUnionEpilog
		static const char * somDS_SOMTEmitC_somtEmitUnionEpilog="SOMTEmitC::somtEmitUnionEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitUnionEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitUnionEpilog
		#define static_somDI_SOMTEmitC_somtEmitUnionEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitUnionEpilog=&somDS_SOMTEmitC_somtEmitUnionEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitUnionEpilog */
	SOM_Scope void SOMLINK somtEmitUnionEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitUnionEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitUnionEpilog   0
	#define somAP_SOMTEmitC_somtEmitUnionEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnionEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitUnionEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitUnionEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitUnionEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnionEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitUnionEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitUnionEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitUnionEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitUnionEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitUnionEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitUnionEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitUnionEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitUnionEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitEnumProlog
		#define static_somMN_somtEmitEnumProlog
		static const char * somMN_somtEmitEnumProlog="somtEmitEnumProlog";
	#endif /* static_somMN_somtEmitEnumProlog */
	#ifndef static_somId_somtEmitEnumProlog
		#define static_somId_somtEmitEnumProlog
		static const somConstId somId_somtEmitEnumProlog=&somMN_somtEmitEnumProlog;
	#endif /* static_somId_somtEmitEnumProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitEnumProlog
		#define static_somDS_SOMTEmitC_somtEmitEnumProlog
		static const char * somDS_SOMTEmitC_somtEmitEnumProlog="SOMTEmitC::somtEmitEnumProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitEnumProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitEnumProlog
		#define static_somDI_SOMTEmitC_somtEmitEnumProlog
		static const somConstId somDI_SOMTEmitC_somtEmitEnumProlog=&somDS_SOMTEmitC_somtEmitEnumProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitEnumProlog */
	SOM_Scope void SOMLINK somtEmitEnumProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitEnumProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitEnumProlog   0
	#define somAP_SOMTEmitC_somtEmitEnumProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnumProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitEnumProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnumProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitEnumProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnumProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitEnumProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnumProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitEnumProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitEnumProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitEnumProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitEnumProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitEnumProlog,
		&somMethodInfo_SOMTEmitC_somtEmitEnumProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitEnum
		#define static_somMN_somtEmitEnum
		static const char * somMN_somtEmitEnum="somtEmitEnum";
	#endif /* static_somMN_somtEmitEnum */
	#ifndef static_somId_somtEmitEnum
		#define static_somId_somtEmitEnum
		static const somConstId somId_somtEmitEnum=&somMN_somtEmitEnum;
	#endif /* static_somId_somtEmitEnum */
	#ifndef static_somDS_SOMTEmitC_somtEmitEnum
		#define static_somDS_SOMTEmitC_somtEmitEnum
		static const char * somDS_SOMTEmitC_somtEmitEnum="SOMTEmitC::somtEmitEnum";
	#endif /* static_somDS_SOMTEmitC_somtEmitEnum */
	#ifndef static_somDI_SOMTEmitC_somtEmitEnum
		#define static_somDI_SOMTEmitC_somtEmitEnum
		static const somConstId somDI_SOMTEmitC_somtEmitEnum=&somDS_SOMTEmitC_somtEmitEnum;
	#endif /* static_somDI_SOMTEmitC_somtEmitEnum */
	SOM_Scope void SOMLINK somtEmitEnum(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEnumEntryC SOMSTAR en);
	#ifdef __IBMC__
		#pragma linkage(somtEmitEnum,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitEnum   0
	#define somAP_SOMTEmitC_somtEmitEnum   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnum(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEnumEntryC SOMSTAR en);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitEnum,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnum(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEnumEntryC SOMSTAR en)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitEnum,somSelf,
				en);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnum(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitEnum,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnum(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEnumEntryC SOMSTAR en;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		en=va_arg(_somC_ap,SOMTEnumEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitEnum)_somC_methodPtr)(somSelf,en);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitEnum={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitEnum={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitEnum,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitEnum,
		&somMethodInfo_SOMTEmitC_somtEmitEnum};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitEnumEpilog
		#define static_somMN_somtEmitEnumEpilog
		static const char * somMN_somtEmitEnumEpilog="somtEmitEnumEpilog";
	#endif /* static_somMN_somtEmitEnumEpilog */
	#ifndef static_somId_somtEmitEnumEpilog
		#define static_somId_somtEmitEnumEpilog
		static const somConstId somId_somtEmitEnumEpilog=&somMN_somtEmitEnumEpilog;
	#endif /* static_somId_somtEmitEnumEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitEnumEpilog
		#define static_somDS_SOMTEmitC_somtEmitEnumEpilog
		static const char * somDS_SOMTEmitC_somtEmitEnumEpilog="SOMTEmitC::somtEmitEnumEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitEnumEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitEnumEpilog
		#define static_somDI_SOMTEmitC_somtEmitEnumEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitEnumEpilog=&somDS_SOMTEmitC_somtEmitEnumEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitEnumEpilog */
	SOM_Scope void SOMLINK somtEmitEnumEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitEnumEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitEnumEpilog   0
	#define somAP_SOMTEmitC_somtEmitEnumEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnumEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitEnumEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEnumEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitEnumEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnumEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitEnumEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitEnumEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitEnumEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitEnumEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitEnumEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitEnumEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitEnumEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitEnumEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitInterfaceProlog
		#define static_somMN_somtEmitInterfaceProlog
		static const char * somMN_somtEmitInterfaceProlog="somtEmitInterfaceProlog";
	#endif /* static_somMN_somtEmitInterfaceProlog */
	#ifndef static_somId_somtEmitInterfaceProlog
		#define static_somId_somtEmitInterfaceProlog
		static const somConstId somId_somtEmitInterfaceProlog=&somMN_somtEmitInterfaceProlog;
	#endif /* static_somId_somtEmitInterfaceProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitInterfaceProlog
		#define static_somDS_SOMTEmitC_somtEmitInterfaceProlog
		static const char * somDS_SOMTEmitC_somtEmitInterfaceProlog="SOMTEmitC::somtEmitInterfaceProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitInterfaceProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitInterfaceProlog
		#define static_somDI_SOMTEmitC_somtEmitInterfaceProlog
		static const somConstId somDI_SOMTEmitC_somtEmitInterfaceProlog=&somDS_SOMTEmitC_somtEmitInterfaceProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitInterfaceProlog */
	SOM_Scope void SOMLINK somtEmitInterfaceProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitInterfaceProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitInterfaceProlog   0
	#define somAP_SOMTEmitC_somtEmitInterfaceProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterfaceProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitInterfaceProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterfaceProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitInterfaceProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterfaceProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitInterfaceProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterfaceProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitInterfaceProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitInterfaceProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitInterfaceProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitInterfaceProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitInterfaceProlog,
		&somMethodInfo_SOMTEmitC_somtEmitInterfaceProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitInterface
		#define static_somMN_somtEmitInterface
		static const char * somMN_somtEmitInterface="somtEmitInterface";
	#endif /* static_somMN_somtEmitInterface */
	#ifndef static_somId_somtEmitInterface
		#define static_somId_somtEmitInterface
		static const somConstId somId_somtEmitInterface=&somMN_somtEmitInterface;
	#endif /* static_somId_somtEmitInterface */
	#ifndef static_somDS_SOMTEmitC_somtEmitInterface
		#define static_somDS_SOMTEmitC_somtEmitInterface
		static const char * somDS_SOMTEmitC_somtEmitInterface="SOMTEmitC::somtEmitInterface";
	#endif /* static_somDS_SOMTEmitC_somtEmitInterface */
	#ifndef static_somDI_SOMTEmitC_somtEmitInterface
		#define static_somDI_SOMTEmitC_somtEmitInterface
		static const somConstId somDI_SOMTEmitC_somtEmitInterface=&somDS_SOMTEmitC_somtEmitInterface;
	#endif /* static_somDI_SOMTEmitC_somtEmitInterface */
	SOM_Scope void SOMLINK somtEmitInterface(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTClassEntryC SOMSTAR intfc);
	#ifdef __IBMC__
		#pragma linkage(somtEmitInterface,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitInterface   0
	#define somAP_SOMTEmitC_somtEmitInterface   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterface(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTClassEntryC SOMSTAR intfc);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitInterface,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterface(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTClassEntryC SOMSTAR intfc)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitInterface,somSelf,
				intfc);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterface(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitInterface,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterface(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTClassEntryC SOMSTAR intfc;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		intfc=va_arg(_somC_ap,SOMTClassEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitInterface)_somC_methodPtr)(somSelf,intfc);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitInterface={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitInterface={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitInterface,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitInterface,
		&somMethodInfo_SOMTEmitC_somtEmitInterface};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitInterfaceEpilog
		#define static_somMN_somtEmitInterfaceEpilog
		static const char * somMN_somtEmitInterfaceEpilog="somtEmitInterfaceEpilog";
	#endif /* static_somMN_somtEmitInterfaceEpilog */
	#ifndef static_somId_somtEmitInterfaceEpilog
		#define static_somId_somtEmitInterfaceEpilog
		static const somConstId somId_somtEmitInterfaceEpilog=&somMN_somtEmitInterfaceEpilog;
	#endif /* static_somId_somtEmitInterfaceEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitInterfaceEpilog
		#define static_somDS_SOMTEmitC_somtEmitInterfaceEpilog
		static const char * somDS_SOMTEmitC_somtEmitInterfaceEpilog="SOMTEmitC::somtEmitInterfaceEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitInterfaceEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitInterfaceEpilog
		#define static_somDI_SOMTEmitC_somtEmitInterfaceEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitInterfaceEpilog=&somDS_SOMTEmitC_somtEmitInterfaceEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitInterfaceEpilog */
	SOM_Scope void SOMLINK somtEmitInterfaceEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitInterfaceEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitInterfaceEpilog   0
	#define somAP_SOMTEmitC_somtEmitInterfaceEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterfaceEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitInterfaceEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitInterfaceEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitInterfaceEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterfaceEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitInterfaceEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitInterfaceEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitInterfaceEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitInterfaceEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitInterfaceEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitInterfaceEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitInterfaceEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitInterfaceEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitModuleProlog
		#define static_somMN_somtEmitModuleProlog
		static const char * somMN_somtEmitModuleProlog="somtEmitModuleProlog";
	#endif /* static_somMN_somtEmitModuleProlog */
	#ifndef static_somId_somtEmitModuleProlog
		#define static_somId_somtEmitModuleProlog
		static const somConstId somId_somtEmitModuleProlog=&somMN_somtEmitModuleProlog;
	#endif /* static_somId_somtEmitModuleProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitModuleProlog
		#define static_somDS_SOMTEmitC_somtEmitModuleProlog
		static const char * somDS_SOMTEmitC_somtEmitModuleProlog="SOMTEmitC::somtEmitModuleProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitModuleProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitModuleProlog
		#define static_somDI_SOMTEmitC_somtEmitModuleProlog
		static const somConstId somDI_SOMTEmitC_somtEmitModuleProlog=&somDS_SOMTEmitC_somtEmitModuleProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitModuleProlog */
	SOM_Scope void SOMLINK somtEmitModuleProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitModuleProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitModuleProlog   0
	#define somAP_SOMTEmitC_somtEmitModuleProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModuleProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitModuleProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModuleProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitModuleProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitModuleProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitModuleProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitModuleProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitModuleProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitModuleProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitModuleProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitModuleProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitModuleProlog,
		&somMethodInfo_SOMTEmitC_somtEmitModuleProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitModule
		#define static_somMN_somtEmitModule
		static const char * somMN_somtEmitModule="somtEmitModule";
	#endif /* static_somMN_somtEmitModule */
	#ifndef static_somId_somtEmitModule
		#define static_somId_somtEmitModule
		static const somConstId somId_somtEmitModule=&somMN_somtEmitModule;
	#endif /* static_somId_somtEmitModule */
	#ifndef static_somDS_SOMTEmitC_somtEmitModule
		#define static_somDS_SOMTEmitC_somtEmitModule
		static const char * somDS_SOMTEmitC_somtEmitModule="SOMTEmitC::somtEmitModule";
	#endif /* static_somDS_SOMTEmitC_somtEmitModule */
	#ifndef static_somDI_SOMTEmitC_somtEmitModule
		#define static_somDI_SOMTEmitC_somtEmitModule
		static const somConstId somDI_SOMTEmitC_somtEmitModule=&somDS_SOMTEmitC_somtEmitModule;
	#endif /* static_somDI_SOMTEmitC_somtEmitModule */
	SOM_Scope void SOMLINK somtEmitModule(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTModuleEntryC SOMSTAR mod);
	#ifdef __IBMC__
		#pragma linkage(somtEmitModule,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitModule   0
	#define somAP_SOMTEmitC_somtEmitModule   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModule(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTModuleEntryC SOMSTAR mod);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitModule,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModule(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTModuleEntryC SOMSTAR mod)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitModule,somSelf,
				mod);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitModule(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitModule,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitModule(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTModuleEntryC SOMSTAR mod;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		mod=va_arg(_somC_ap,SOMTModuleEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitModule)_somC_methodPtr)(somSelf,mod);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitModule={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitModule={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitModule,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitModule,
		&somMethodInfo_SOMTEmitC_somtEmitModule};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitModuleEpilog
		#define static_somMN_somtEmitModuleEpilog
		static const char * somMN_somtEmitModuleEpilog="somtEmitModuleEpilog";
	#endif /* static_somMN_somtEmitModuleEpilog */
	#ifndef static_somId_somtEmitModuleEpilog
		#define static_somId_somtEmitModuleEpilog
		static const somConstId somId_somtEmitModuleEpilog=&somMN_somtEmitModuleEpilog;
	#endif /* static_somId_somtEmitModuleEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitModuleEpilog
		#define static_somDS_SOMTEmitC_somtEmitModuleEpilog
		static const char * somDS_SOMTEmitC_somtEmitModuleEpilog="SOMTEmitC::somtEmitModuleEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitModuleEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitModuleEpilog
		#define static_somDI_SOMTEmitC_somtEmitModuleEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitModuleEpilog=&somDS_SOMTEmitC_somtEmitModuleEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitModuleEpilog */
	SOM_Scope void SOMLINK somtEmitModuleEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitModuleEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitModuleEpilog   0
	#define somAP_SOMTEmitC_somtEmitModuleEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModuleEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitModuleEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitModuleEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitModuleEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitModuleEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitModuleEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitModuleEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitModuleEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitModuleEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitModuleEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitModuleEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitModuleEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitModuleEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMethodsProlog
		#define static_somMN_somtEmitMethodsProlog
		static const char * somMN_somtEmitMethodsProlog="somtEmitMethodsProlog";
	#endif /* static_somMN_somtEmitMethodsProlog */
	#ifndef static_somId_somtEmitMethodsProlog
		#define static_somId_somtEmitMethodsProlog
		static const somConstId somId_somtEmitMethodsProlog=&somMN_somtEmitMethodsProlog;
	#endif /* static_somId_somtEmitMethodsProlog */
	#ifndef static_somDS_SOMTEmitC_somtEmitMethodsProlog
		#define static_somDS_SOMTEmitC_somtEmitMethodsProlog
		static const char * somDS_SOMTEmitC_somtEmitMethodsProlog="SOMTEmitC::somtEmitMethodsProlog";
	#endif /* static_somDS_SOMTEmitC_somtEmitMethodsProlog */
	#ifndef static_somDI_SOMTEmitC_somtEmitMethodsProlog
		#define static_somDI_SOMTEmitC_somtEmitMethodsProlog
		static const somConstId somDI_SOMTEmitC_somtEmitMethodsProlog=&somDS_SOMTEmitC_somtEmitMethodsProlog;
	#endif /* static_somDI_SOMTEmitC_somtEmitMethodsProlog */
	SOM_Scope void SOMLINK somtEmitMethodsProlog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMethodsProlog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMethodsProlog   0
	#define somAP_SOMTEmitC_somtEmitMethodsProlog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethodsProlog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMethodsProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethodsProlog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMethodsProlog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethodsProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMethodsProlog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethodsProlog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMethodsProlog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMethodsProlog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMethodsProlog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMethodsProlog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMethodsProlog,
		&somMethodInfo_SOMTEmitC_somtEmitMethodsProlog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMethods
		#define static_somMN_somtEmitMethods
		static const char * somMN_somtEmitMethods="somtEmitMethods";
	#endif /* static_somMN_somtEmitMethods */
	#ifndef static_somId_somtEmitMethods
		#define static_somId_somtEmitMethods
		static const somConstId somId_somtEmitMethods=&somMN_somtEmitMethods;
	#endif /* static_somId_somtEmitMethods */
	#ifndef static_somDS_SOMTEmitC_somtEmitMethods
		#define static_somDS_SOMTEmitC_somtEmitMethods
		static const char * somDS_SOMTEmitC_somtEmitMethods="SOMTEmitC::somtEmitMethods";
	#endif /* static_somDS_SOMTEmitC_somtEmitMethods */
	#ifndef static_somDI_SOMTEmitC_somtEmitMethods
		#define static_somDI_SOMTEmitC_somtEmitMethods
		static const somConstId somDI_SOMTEmitC_somtEmitMethods=&somDS_SOMTEmitC_somtEmitMethods;
	#endif /* static_somDI_SOMTEmitC_somtEmitMethods */
	SOM_Scope void SOMLINK somtEmitMethods(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR method);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMethods,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMethods   0
	#define somAP_SOMTEmitC_somtEmitMethods   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethods(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR method);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMethods,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethods(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR method)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMethods,somSelf,
				method);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethods(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMethods,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethods(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR method;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		method=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMethods)_somC_methodPtr)(somSelf,method);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMethods={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMethods={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMethods,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMethods,
		&somMethodInfo_SOMTEmitC_somtEmitMethods};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMethodsEpilog
		#define static_somMN_somtEmitMethodsEpilog
		static const char * somMN_somtEmitMethodsEpilog="somtEmitMethodsEpilog";
	#endif /* static_somMN_somtEmitMethodsEpilog */
	#ifndef static_somId_somtEmitMethodsEpilog
		#define static_somId_somtEmitMethodsEpilog
		static const somConstId somId_somtEmitMethodsEpilog=&somMN_somtEmitMethodsEpilog;
	#endif /* static_somId_somtEmitMethodsEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitMethodsEpilog
		#define static_somDS_SOMTEmitC_somtEmitMethodsEpilog
		static const char * somDS_SOMTEmitC_somtEmitMethodsEpilog="SOMTEmitC::somtEmitMethodsEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitMethodsEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitMethodsEpilog
		#define static_somDI_SOMTEmitC_somtEmitMethodsEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitMethodsEpilog=&somDS_SOMTEmitC_somtEmitMethodsEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitMethodsEpilog */
	SOM_Scope void SOMLINK somtEmitMethodsEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMethodsEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMethodsEpilog   0
	#define somAP_SOMTEmitC_somtEmitMethodsEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethodsEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMethodsEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethodsEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMethodsEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethodsEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMethodsEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethodsEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMethodsEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMethodsEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMethodsEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMethodsEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMethodsEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitMethodsEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitMethod
		#define static_somMN_somtEmitMethod
		static const char * somMN_somtEmitMethod="somtEmitMethod";
	#endif /* static_somMN_somtEmitMethod */
	#ifndef static_somId_somtEmitMethod
		#define static_somId_somtEmitMethod
		static const somConstId somId_somtEmitMethod=&somMN_somtEmitMethod;
	#endif /* static_somId_somtEmitMethod */
	#ifndef static_somDS_SOMTEmitC_somtEmitMethod
		#define static_somDS_SOMTEmitC_somtEmitMethod
		static const char * somDS_SOMTEmitC_somtEmitMethod="SOMTEmitC::somtEmitMethod";
	#endif /* static_somDS_SOMTEmitC_somtEmitMethod */
	#ifndef static_somDI_SOMTEmitC_somtEmitMethod
		#define static_somDI_SOMTEmitC_somtEmitMethod
		static const somConstId somDI_SOMTEmitC_somtEmitMethod=&somDS_SOMTEmitC_somtEmitMethod;
	#endif /* static_somDI_SOMTEmitC_somtEmitMethod */
	SOM_Scope void SOMLINK somtEmitMethod(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtEmitMethod,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitMethod   0
	#define somAP_SOMTEmitC_somtEmitMethod   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethod(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitMethod,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitMethod(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitMethod,somSelf,
				entry);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethod(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitMethod,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitMethod(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitMethod)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitMethod={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitMethod={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitMethod,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitMethod,
		&somMethodInfo_SOMTEmitC_somtEmitMethod};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitEpilog
		#define static_somMN_somtEmitEpilog
		static const char * somMN_somtEmitEpilog="somtEmitEpilog";
	#endif /* static_somMN_somtEmitEpilog */
	#ifndef static_somId_somtEmitEpilog
		#define static_somId_somtEmitEpilog
		static const somConstId somId_somtEmitEpilog=&somMN_somtEmitEpilog;
	#endif /* static_somId_somtEmitEpilog */
	#ifndef static_somDS_SOMTEmitC_somtEmitEpilog
		#define static_somDS_SOMTEmitC_somtEmitEpilog
		static const char * somDS_SOMTEmitC_somtEmitEpilog="SOMTEmitC::somtEmitEpilog";
	#endif /* static_somDS_SOMTEmitC_somtEmitEpilog */
	#ifndef static_somDI_SOMTEmitC_somtEmitEpilog
		#define static_somDI_SOMTEmitC_somtEmitEpilog
		static const somConstId somDI_SOMTEmitC_somtEmitEpilog=&somDS_SOMTEmitC_somtEmitEpilog;
	#endif /* static_somDI_SOMTEmitC_somtEmitEpilog */
	SOM_Scope void SOMLINK somtEmitEpilog(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtEmitEpilog,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitEpilog   0
	#define somAP_SOMTEmitC_somtEmitEpilog   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEpilog(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitEpilog(
			SOMTEmitC SOMSTAR somSelf)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitEpilog,somSelf);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitEpilog,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitEpilog(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitEpilog)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitEpilog={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitEpilog={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitEpilog,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitEpilog,
		&somMethodInfo_SOMTEmitC_somtEmitEpilog};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanBases
		#define static_somMN_somtScanBases
		static const char * somMN_somtScanBases="somtScanBases";
	#endif /* static_somMN_somtScanBases */
	#ifndef static_somId_somtScanBases
		#define static_somId_somtScanBases
		static const somConstId somId_somtScanBases=&somMN_somtScanBases;
	#endif /* static_somId_somtScanBases */
	#ifndef static_somDS_SOMTEmitC_somtScanBases
		#define static_somDS_SOMTEmitC_somtScanBases
		static const char * somDS_SOMTEmitC_somtScanBases="SOMTEmitC::somtScanBases";
	#endif /* static_somDS_SOMTEmitC_somtScanBases */
	#ifndef static_somDI_SOMTEmitC_somtScanBases
		#define static_somDI_SOMTEmitC_somtScanBases
		static const somConstId somDI_SOMTEmitC_somtScanBases=&somDS_SOMTEmitC_somtScanBases;
	#endif /* static_somDI_SOMTEmitC_somtScanBases */
	SOM_Scope boolean SOMLINK somtScanBases(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanBases,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanBases   0
	#define somAP_SOMTEmitC_somtScanBases   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBases(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanBases,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBases(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanBases,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanBases(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanBases,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanBases(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanBases)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanBases={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanBases={
		(somMethodPtr)somRD_SOMTEmitC_somtScanBases,
		(somMethodPtr)somAP_SOMTEmitC_somtScanBases,
		&somMethodInfo_SOMTEmitC_somtScanBases};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanBaseIncludes
		#define static_somMN_somtScanBaseIncludes
		static const char * somMN_somtScanBaseIncludes="somtScanBaseIncludes";
	#endif /* static_somMN_somtScanBaseIncludes */
	#ifndef static_somId_somtScanBaseIncludes
		#define static_somId_somtScanBaseIncludes
		static const somConstId somId_somtScanBaseIncludes=&somMN_somtScanBaseIncludes;
	#endif /* static_somId_somtScanBaseIncludes */
	#ifndef static_somDS_SOMTEmitC_somtScanBaseIncludes
		#define static_somDS_SOMTEmitC_somtScanBaseIncludes
		static const char * somDS_SOMTEmitC_somtScanBaseIncludes="SOMTEmitC::somtScanBaseIncludes";
	#endif /* static_somDS_SOMTEmitC_somtScanBaseIncludes */
	#ifndef static_somDI_SOMTEmitC_somtScanBaseIncludes
		#define static_somDI_SOMTEmitC_somtScanBaseIncludes
		static const somConstId somDI_SOMTEmitC_somtScanBaseIncludes=&somDS_SOMTEmitC_somtScanBaseIncludes;
	#endif /* static_somDI_SOMTEmitC_somtScanBaseIncludes */
	SOM_Scope boolean SOMLINK somtScanBaseIncludes(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanBaseIncludes,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanBaseIncludes   0
	#define somAP_SOMTEmitC_somtScanBaseIncludes   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBaseIncludes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanBaseIncludes,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBaseIncludes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanBaseIncludes,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanBaseIncludes(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanBaseIncludes,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanBaseIncludes(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanBaseIncludes)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanBaseIncludes={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanBaseIncludes={
		(somMethodPtr)somRD_SOMTEmitC_somtScanBaseIncludes,
		(somMethodPtr)somAP_SOMTEmitC_somtScanBaseIncludes,
		&somMethodInfo_SOMTEmitC_somtScanBaseIncludes};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtCheckVisibility
		#define static_somMN_somtCheckVisibility
		static const char * somMN_somtCheckVisibility="somtCheckVisibility";
	#endif /* static_somMN_somtCheckVisibility */
	#ifndef static_somId_somtCheckVisibility
		#define static_somId_somtCheckVisibility
		static const somConstId somId_somtCheckVisibility=&somMN_somtCheckVisibility;
	#endif /* static_somId_somtCheckVisibility */
	#ifndef static_somDS_SOMTEmitC_somtCheckVisibility
		#define static_somDS_SOMTEmitC_somtCheckVisibility
		static const char * somDS_SOMTEmitC_somtCheckVisibility="SOMTEmitC::somtCheckVisibility";
	#endif /* static_somDS_SOMTEmitC_somtCheckVisibility */
	#ifndef static_somDI_SOMTEmitC_somtCheckVisibility
		#define static_somDI_SOMTEmitC_somtCheckVisibility
		static const somConstId somDI_SOMTEmitC_somtCheckVisibility=&somDS_SOMTEmitC_somtCheckVisibility;
	#endif /* static_somDI_SOMTEmitC_somtCheckVisibility */
	SOM_Scope boolean SOMLINK somtCheckVisibility(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtCheckVisibility,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtCheckVisibility   0
	#define somAP_SOMTEmitC_somtCheckVisibility   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtCheckVisibility(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtCheckVisibility,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtCheckVisibility(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtCheckVisibility,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtCheckVisibility(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtCheckVisibility,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtCheckVisibility(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtCheckVisibility)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtCheckVisibility={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtCheckVisibility={
		(somMethodPtr)somRD_SOMTEmitC_somtCheckVisibility,
		(somMethodPtr)somAP_SOMTEmitC_somtCheckVisibility,
		&somMethodInfo_SOMTEmitC_somtCheckVisibility};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtNew
		#define static_somMN_somtNew
		static const char * somMN_somtNew="somtNew";
	#endif /* static_somMN_somtNew */
	#ifndef static_somId_somtNew
		#define static_somId_somtNew
		static const somConstId somId_somtNew=&somMN_somtNew;
	#endif /* static_somId_somtNew */
	#ifndef static_somDS_SOMTEmitC_somtNew
		#define static_somDS_SOMTEmitC_somtNew
		static const char * somDS_SOMTEmitC_somtNew="SOMTEmitC::somtNew";
	#endif /* static_somDS_SOMTEmitC_somtNew */
	#ifndef static_somDI_SOMTEmitC_somtNew
		#define static_somDI_SOMTEmitC_somtNew
		static const somConstId somDI_SOMTEmitC_somtNew=&somDS_SOMTEmitC_somtNew;
	#endif /* static_somDI_SOMTEmitC_somtNew */
	SOM_Scope boolean SOMLINK somtNew(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtNew,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtNew   0
	#define somAP_SOMTEmitC_somtNew   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtNew(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtNew,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtNew(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtNew,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtNew(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtNew,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtNew(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtNew)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtNew={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtNew={
		(somMethodPtr)somRD_SOMTEmitC_somtNew,
		(somMethodPtr)somAP_SOMTEmitC_somtNew,
		&somMethodInfo_SOMTEmitC_somtNew};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtImplemented
		#define static_somMN_somtImplemented
		static const char * somMN_somtImplemented="somtImplemented";
	#endif /* static_somMN_somtImplemented */
	#ifndef static_somId_somtImplemented
		#define static_somId_somtImplemented
		static const somConstId somId_somtImplemented=&somMN_somtImplemented;
	#endif /* static_somId_somtImplemented */
	#ifndef static_somDS_SOMTEmitC_somtImplemented
		#define static_somDS_SOMTEmitC_somtImplemented
		static const char * somDS_SOMTEmitC_somtImplemented="SOMTEmitC::somtImplemented";
	#endif /* static_somDS_SOMTEmitC_somtImplemented */
	#ifndef static_somDI_SOMTEmitC_somtImplemented
		#define static_somDI_SOMTEmitC_somtImplemented
		static const somConstId somDI_SOMTEmitC_somtImplemented=&somDS_SOMTEmitC_somtImplemented;
	#endif /* static_somDI_SOMTEmitC_somtImplemented */
	SOM_Scope boolean SOMLINK somtImplemented(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtImplemented,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtImplemented   0
	#define somAP_SOMTEmitC_somtImplemented   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtImplemented(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtImplemented,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtImplemented(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtImplemented,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtImplemented(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtImplemented,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtImplemented(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtImplemented)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtImplemented={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtImplemented={
		(somMethodPtr)somRD_SOMTEmitC_somtImplemented,
		(somMethodPtr)somAP_SOMTEmitC_somtImplemented,
		&somMethodInfo_SOMTEmitC_somtImplemented};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtOverridden
		#define static_somMN_somtOverridden
		static const char * somMN_somtOverridden="somtOverridden";
	#endif /* static_somMN_somtOverridden */
	#ifndef static_somId_somtOverridden
		#define static_somId_somtOverridden
		static const somConstId somId_somtOverridden=&somMN_somtOverridden;
	#endif /* static_somId_somtOverridden */
	#ifndef static_somDS_SOMTEmitC_somtOverridden
		#define static_somDS_SOMTEmitC_somtOverridden
		static const char * somDS_SOMTEmitC_somtOverridden="SOMTEmitC::somtOverridden";
	#endif /* static_somDS_SOMTEmitC_somtOverridden */
	#ifndef static_somDI_SOMTEmitC_somtOverridden
		#define static_somDI_SOMTEmitC_somtOverridden
		static const somConstId somDI_SOMTEmitC_somtOverridden=&somDS_SOMTEmitC_somtOverridden;
	#endif /* static_somDI_SOMTEmitC_somtOverridden */
	SOM_Scope boolean SOMLINK somtOverridden(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtOverridden,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtOverridden   0
	#define somAP_SOMTEmitC_somtOverridden   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtOverridden(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtOverridden,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtOverridden(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtOverridden,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtOverridden(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtOverridden,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtOverridden(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtOverridden)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtOverridden={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtOverridden={
		(somMethodPtr)somRD_SOMTEmitC_somtOverridden,
		(somMethodPtr)somAP_SOMTEmitC_somtOverridden,
		&somMethodInfo_SOMTEmitC_somtOverridden};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtInherited
		#define static_somMN_somtInherited
		static const char * somMN_somtInherited="somtInherited";
	#endif /* static_somMN_somtInherited */
	#ifndef static_somId_somtInherited
		#define static_somId_somtInherited
		static const somConstId somId_somtInherited=&somMN_somtInherited;
	#endif /* static_somId_somtInherited */
	#ifndef static_somDS_SOMTEmitC_somtInherited
		#define static_somDS_SOMTEmitC_somtInherited
		static const char * somDS_SOMTEmitC_somtInherited="SOMTEmitC::somtInherited";
	#endif /* static_somDS_SOMTEmitC_somtInherited */
	#ifndef static_somDI_SOMTEmitC_somtInherited
		#define static_somDI_SOMTEmitC_somtInherited
		static const somConstId somDI_SOMTEmitC_somtInherited=&somDS_SOMTEmitC_somtInherited;
	#endif /* static_somDI_SOMTEmitC_somtInherited */
	SOM_Scope boolean SOMLINK somtInherited(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtInherited,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtInherited   0
	#define somAP_SOMTEmitC_somtInherited   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtInherited(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtInherited,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtInherited(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtInherited,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtInherited(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtInherited,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtInherited(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtInherited)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtInherited={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtInherited={
		(somMethodPtr)somRD_SOMTEmitC_somtInherited,
		(somMethodPtr)somAP_SOMTEmitC_somtInherited,
		&somMethodInfo_SOMTEmitC_somtInherited};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtAllVisible
		#define static_somMN_somtAllVisible
		static const char * somMN_somtAllVisible="somtAllVisible";
	#endif /* static_somMN_somtAllVisible */
	#ifndef static_somId_somtAllVisible
		#define static_somId_somtAllVisible
		static const somConstId somId_somtAllVisible=&somMN_somtAllVisible;
	#endif /* static_somId_somtAllVisible */
	#ifndef static_somDS_SOMTEmitC_somtAllVisible
		#define static_somDS_SOMTEmitC_somtAllVisible
		static const char * somDS_SOMTEmitC_somtAllVisible="SOMTEmitC::somtAllVisible";
	#endif /* static_somDS_SOMTEmitC_somtAllVisible */
	#ifndef static_somDI_SOMTEmitC_somtAllVisible
		#define static_somDI_SOMTEmitC_somtAllVisible
		static const somConstId somDI_SOMTEmitC_somtAllVisible=&somDS_SOMTEmitC_somtAllVisible;
	#endif /* static_somDI_SOMTEmitC_somtAllVisible */
	SOM_Scope boolean SOMLINK somtAllVisible(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtAllVisible,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtAllVisible   0
	#define somAP_SOMTEmitC_somtAllVisible   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtAllVisible(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtAllVisible,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtAllVisible(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtAllVisible,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtAllVisible(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtAllVisible,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtAllVisible(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtAllVisible)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtAllVisible={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtAllVisible={
		(somMethodPtr)somRD_SOMTEmitC_somtAllVisible,
		(somMethodPtr)somAP_SOMTEmitC_somtAllVisible,
		&somMethodInfo_SOMTEmitC_somtAllVisible};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtAll
		#define static_somMN_somtAll
		static const char * somMN_somtAll="somtAll";
	#endif /* static_somMN_somtAll */
	#ifndef static_somId_somtAll
		#define static_somId_somtAll
		static const somConstId somId_somtAll=&somMN_somtAll;
	#endif /* static_somId_somtAll */
	#ifndef static_somDS_SOMTEmitC_somtAll
		#define static_somDS_SOMTEmitC_somtAll
		static const char * somDS_SOMTEmitC_somtAll="SOMTEmitC::somtAll";
	#endif /* static_somDS_SOMTEmitC_somtAll */
	#ifndef static_somDI_SOMTEmitC_somtAll
		#define static_somDI_SOMTEmitC_somtAll
		static const somConstId somDI_SOMTEmitC_somtAll=&somDS_SOMTEmitC_somtAll;
	#endif /* static_somDI_SOMTEmitC_somtAll */
	SOM_Scope boolean SOMLINK somtAll(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtAll,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtAll   0
	#define somAP_SOMTEmitC_somtAll   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtAll(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtAll,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtAll(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTMethodEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtAll,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtAll(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtAll,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtAll(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTMethodEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTMethodEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtAll)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtAll={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtAll={
		(somMethodPtr)somRD_SOMTEmitC_somtAll,
		(somMethodPtr)somAP_SOMTEmitC_somtAll,
		&somMethodInfo_SOMTEmitC_somtAll};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtNewNoProc
		#define static_somMN_somtNewNoProc
		static const char * somMN_somtNewNoProc="somtNewNoProc";
	#endif /* static_somMN_somtNewNoProc */
	#ifndef static_somId_somtNewNoProc
		#define static_somId_somtNewNoProc
		static const somConstId somId_somtNewNoProc=&somMN_somtNewNoProc;
	#endif /* static_somId_somtNewNoProc */
	#ifndef static_somDS_SOMTEmitC_somtNewNoProc
		#define static_somDS_SOMTEmitC_somtNewNoProc
		static const char * somDS_SOMTEmitC_somtNewNoProc="SOMTEmitC::somtNewNoProc";
	#endif /* static_somDS_SOMTEmitC_somtNewNoProc */
	#ifndef static_somDI_SOMTEmitC_somtNewNoProc
		#define static_somDI_SOMTEmitC_somtNewNoProc
		static const somConstId somDI_SOMTEmitC_somtNewNoProc=&somDS_SOMTEmitC_somtNewNoProc;
	#endif /* static_somDI_SOMTEmitC_somtNewNoProc */
	SOM_Scope boolean SOMLINK somtNewNoProc(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtNewNoProc,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtNewNoProc   0
	#define somAP_SOMTEmitC_somtNewNoProc   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtNewNoProc(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtNewNoProc,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtNewNoProc(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtNewNoProc,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtNewNoProc(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtNewNoProc,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtNewNoProc(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtNewNoProc)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtNewNoProc={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtNewNoProc={
		(somMethodPtr)somRD_SOMTEmitC_somtNewNoProc,
		(somMethodPtr)somAP_SOMTEmitC_somtNewNoProc,
		&somMethodInfo_SOMTEmitC_somtNewNoProc};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtPrivOrPub
		#define static_somMN_somtPrivOrPub
		static const char * somMN_somtPrivOrPub="somtPrivOrPub";
	#endif /* static_somMN_somtPrivOrPub */
	#ifndef static_somId_somtPrivOrPub
		#define static_somId_somtPrivOrPub
		static const somConstId somId_somtPrivOrPub=&somMN_somtPrivOrPub;
	#endif /* static_somId_somtPrivOrPub */
	#ifndef static_somDS_SOMTEmitC_somtPrivOrPub
		#define static_somDS_SOMTEmitC_somtPrivOrPub
		static const char * somDS_SOMTEmitC_somtPrivOrPub="SOMTEmitC::somtPrivOrPub";
	#endif /* static_somDS_SOMTEmitC_somtPrivOrPub */
	#ifndef static_somDI_SOMTEmitC_somtPrivOrPub
		#define static_somDI_SOMTEmitC_somtPrivOrPub
		static const somConstId somDI_SOMTEmitC_somtPrivOrPub=&somDS_SOMTEmitC_somtPrivOrPub;
	#endif /* static_somDI_SOMTEmitC_somtPrivOrPub */
	SOM_Scope boolean SOMLINK somtPrivOrPub(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtPrivOrPub,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtPrivOrPub   0
	#define somAP_SOMTEmitC_somtPrivOrPub   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtPrivOrPub(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtPrivOrPub,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtPrivOrPub(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtPrivOrPub,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtPrivOrPub(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtPrivOrPub,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtPrivOrPub(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtPrivOrPub)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtPrivOrPub={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtPrivOrPub={
		(somMethodPtr)somRD_SOMTEmitC_somtPrivOrPub,
		(somMethodPtr)somAP_SOMTEmitC_somtPrivOrPub,
		&somMethodInfo_SOMTEmitC_somtPrivOrPub};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtNewProc
		#define static_somMN_somtNewProc
		static const char * somMN_somtNewProc="somtNewProc";
	#endif /* static_somMN_somtNewProc */
	#ifndef static_somId_somtNewProc
		#define static_somId_somtNewProc
		static const somConstId somId_somtNewProc=&somMN_somtNewProc;
	#endif /* static_somId_somtNewProc */
	#ifndef static_somDS_SOMTEmitC_somtNewProc
		#define static_somDS_SOMTEmitC_somtNewProc
		static const char * somDS_SOMTEmitC_somtNewProc="SOMTEmitC::somtNewProc";
	#endif /* static_somDS_SOMTEmitC_somtNewProc */
	#ifndef static_somDI_SOMTEmitC_somtNewProc
		#define static_somDI_SOMTEmitC_somtNewProc
		static const somConstId somDI_SOMTEmitC_somtNewProc=&somDS_SOMTEmitC_somtNewProc;
	#endif /* static_somDI_SOMTEmitC_somtNewProc */
	SOM_Scope boolean SOMLINK somtNewProc(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtNewProc,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtNewProc   0
	#define somAP_SOMTEmitC_somtNewProc   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtNewProc(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtNewProc,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtNewProc(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtNewProc,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtNewProc(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtNewProc,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtNewProc(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtNewProc)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtNewProc={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtNewProc={
		(somMethodPtr)somRD_SOMTEmitC_somtNewProc,
		(somMethodPtr)somAP_SOMTEmitC_somtNewProc,
		&somMethodInfo_SOMTEmitC_somtNewProc};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtLink
		#define static_somMN_somtLink
		static const char * somMN_somtLink="somtLink";
	#endif /* static_somMN_somtLink */
	#ifndef static_somId_somtLink
		#define static_somId_somtLink
		static const somConstId somId_somtLink=&somMN_somtLink;
	#endif /* static_somId_somtLink */
	#ifndef static_somDS_SOMTEmitC_somtLink
		#define static_somDS_SOMTEmitC_somtLink
		static const char * somDS_SOMTEmitC_somtLink="SOMTEmitC::somtLink";
	#endif /* static_somDS_SOMTEmitC_somtLink */
	#ifndef static_somDI_SOMTEmitC_somtLink
		#define static_somDI_SOMTEmitC_somtLink
		static const somConstId somDI_SOMTEmitC_somtLink=&somDS_SOMTEmitC_somtLink;
	#endif /* static_somDI_SOMTEmitC_somtLink */
	SOM_Scope boolean SOMLINK somtLink(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtLink,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtLink   0
	#define somAP_SOMTEmitC_somtLink   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtLink(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtLink,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtLink(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtLink,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtLink(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtLink,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtLink(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtLink)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtLink={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtLink={
		(somMethodPtr)somRD_SOMTEmitC_somtLink,
		(somMethodPtr)somAP_SOMTEmitC_somtLink,
		&somMethodInfo_SOMTEmitC_somtLink};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtVA
		#define static_somMN_somtVA
		static const char * somMN_somtVA="somtVA";
	#endif /* static_somMN_somtVA */
	#ifndef static_somId_somtVA
		#define static_somId_somtVA
		static const somConstId somId_somtVA=&somMN_somtVA;
	#endif /* static_somId_somtVA */
	#ifndef static_somDS_SOMTEmitC_somtVA
		#define static_somDS_SOMTEmitC_somtVA
		static const char * somDS_SOMTEmitC_somtVA="SOMTEmitC::somtVA";
	#endif /* static_somDS_SOMTEmitC_somtVA */
	#ifndef static_somDI_SOMTEmitC_somtVA
		#define static_somDI_SOMTEmitC_somtVA
		static const somConstId somDI_SOMTEmitC_somtVA=&somDS_SOMTEmitC_somtVA;
	#endif /* static_somDI_SOMTEmitC_somtVA */
	SOM_Scope boolean SOMLINK somtVA(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somtVA,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtVA   0
	#define somAP_SOMTEmitC_somtVA   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtVA(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtVA,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtVA(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ SOMTEntryC SOMSTAR entry)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtVA,somSelf,
				entry);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtVA(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtVA,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtVA(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		SOMTEntryC SOMSTAR entry;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		entry=va_arg(_somC_ap,SOMTEntryC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtVA)_somC_methodPtr)(somSelf,entry);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtVA={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(void *)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtVA={
		(somMethodPtr)somRD_SOMTEmitC_somtVA,
		(somMethodPtr)somAP_SOMTEmitC_somtVA,
		&somMethodInfo_SOMTEmitC_somtVA};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanMethods
		#define static_somMN_somtScanMethods
		static const char * somMN_somtScanMethods="somtScanMethods";
	#endif /* static_somMN_somtScanMethods */
	#ifndef static_somId_somtScanMethods
		#define static_somId_somtScanMethods
		static const somConstId somId_somtScanMethods=&somMN_somtScanMethods;
	#endif /* static_somId_somtScanMethods */
	#ifndef static_somDS_SOMTEmitC_somtScanMethods
		#define static_somDS_SOMTEmitC_somtScanMethods
		static const char * somDS_SOMTEmitC_somtScanMethods="SOMTEmitC::somtScanMethods";
	#endif /* static_somDS_SOMTEmitC_somtScanMethods */
	#ifndef static_somDI_SOMTEmitC_somtScanMethods
		#define static_somDI_SOMTEmitC_somtScanMethods
		static const somConstId somDI_SOMTEmitC_somtScanMethods=&somDS_SOMTEmitC_somtScanMethods;
	#endif /* static_somDI_SOMTEmitC_somtScanMethods */
	SOM_Scope boolean SOMLINK somtScanMethods(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string filter,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog,
	/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somtScanMethods,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanMethods   0
	#define somAP_SOMTEmitC_somtScanMethods   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanMethods(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanMethods,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanMethods(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanMethods,somSelf,
				filter,
				prolog,
				each,
				epilog,
				(int )forceProlog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanMethods(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanMethods,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanMethods(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string filter;
		string prolog;
		string each;
		string epilog;
		boolean forceProlog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		filter=va_arg(_somC_ap,string );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );
		forceProlog=(boolean )va_arg(_somC_ap,int );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanMethods)_somC_methodPtr)(somSelf,filter,prolog,each,epilog,forceProlog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanMethods={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(int)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanMethods={
		(somMethodPtr)somRD_SOMTEmitC_somtScanMethods,
		(somMethodPtr)somAP_SOMTEmitC_somtScanMethods,
		&somMethodInfo_SOMTEmitC_somtScanMethods};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanConstants
		#define static_somMN_somtScanConstants
		static const char * somMN_somtScanConstants="somtScanConstants";
	#endif /* static_somMN_somtScanConstants */
	#ifndef static_somId_somtScanConstants
		#define static_somId_somtScanConstants
		static const somConstId somId_somtScanConstants=&somMN_somtScanConstants;
	#endif /* static_somId_somtScanConstants */
	#ifndef static_somDS_SOMTEmitC_somtScanConstants
		#define static_somDS_SOMTEmitC_somtScanConstants
		static const char * somDS_SOMTEmitC_somtScanConstants="SOMTEmitC::somtScanConstants";
	#endif /* static_somDS_SOMTEmitC_somtScanConstants */
	#ifndef static_somDI_SOMTEmitC_somtScanConstants
		#define static_somDI_SOMTEmitC_somtScanConstants
		static const somConstId somDI_SOMTEmitC_somtScanConstants=&somDS_SOMTEmitC_somtScanConstants;
	#endif /* static_somDI_SOMTEmitC_somtScanConstants */
	SOM_Scope boolean SOMLINK somtScanConstants(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanConstants,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanConstants   0
	#define somAP_SOMTEmitC_somtScanConstants   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanConstants(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanConstants,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanConstants(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanConstants,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanConstants(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanConstants,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanConstants(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanConstants)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanConstants={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanConstants={
		(somMethodPtr)somRD_SOMTEmitC_somtScanConstants,
		(somMethodPtr)somAP_SOMTEmitC_somtScanConstants,
		&somMethodInfo_SOMTEmitC_somtScanConstants};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanTypedefs
		#define static_somMN_somtScanTypedefs
		static const char * somMN_somtScanTypedefs="somtScanTypedefs";
	#endif /* static_somMN_somtScanTypedefs */
	#ifndef static_somId_somtScanTypedefs
		#define static_somId_somtScanTypedefs
		static const somConstId somId_somtScanTypedefs=&somMN_somtScanTypedefs;
	#endif /* static_somId_somtScanTypedefs */
	#ifndef static_somDS_SOMTEmitC_somtScanTypedefs
		#define static_somDS_SOMTEmitC_somtScanTypedefs
		static const char * somDS_SOMTEmitC_somtScanTypedefs="SOMTEmitC::somtScanTypedefs";
	#endif /* static_somDS_SOMTEmitC_somtScanTypedefs */
	#ifndef static_somDI_SOMTEmitC_somtScanTypedefs
		#define static_somDI_SOMTEmitC_somtScanTypedefs
		static const somConstId somDI_SOMTEmitC_somtScanTypedefs=&somDS_SOMTEmitC_somtScanTypedefs;
	#endif /* static_somDI_SOMTEmitC_somtScanTypedefs */
	SOM_Scope boolean SOMLINK somtScanTypedefs(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanTypedefs,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanTypedefs   0
	#define somAP_SOMTEmitC_somtScanTypedefs   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanTypedefs(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanTypedefs,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanTypedefs(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanTypedefs,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanTypedefs(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanTypedefs,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanTypedefs(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanTypedefs)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanTypedefs={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanTypedefs={
		(somMethodPtr)somRD_SOMTEmitC_somtScanTypedefs,
		(somMethodPtr)somAP_SOMTEmitC_somtScanTypedefs,
		&somMethodInfo_SOMTEmitC_somtScanTypedefs};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanStructs
		#define static_somMN_somtScanStructs
		static const char * somMN_somtScanStructs="somtScanStructs";
	#endif /* static_somMN_somtScanStructs */
	#ifndef static_somId_somtScanStructs
		#define static_somId_somtScanStructs
		static const somConstId somId_somtScanStructs=&somMN_somtScanStructs;
	#endif /* static_somId_somtScanStructs */
	#ifndef static_somDS_SOMTEmitC_somtScanStructs
		#define static_somDS_SOMTEmitC_somtScanStructs
		static const char * somDS_SOMTEmitC_somtScanStructs="SOMTEmitC::somtScanStructs";
	#endif /* static_somDS_SOMTEmitC_somtScanStructs */
	#ifndef static_somDI_SOMTEmitC_somtScanStructs
		#define static_somDI_SOMTEmitC_somtScanStructs
		static const somConstId somDI_SOMTEmitC_somtScanStructs=&somDS_SOMTEmitC_somtScanStructs;
	#endif /* static_somDI_SOMTEmitC_somtScanStructs */
	SOM_Scope boolean SOMLINK somtScanStructs(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanStructs,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanStructs   0
	#define somAP_SOMTEmitC_somtScanStructs   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanStructs(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanStructs,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanStructs(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanStructs,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanStructs(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanStructs,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanStructs(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanStructs)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanStructs={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanStructs={
		(somMethodPtr)somRD_SOMTEmitC_somtScanStructs,
		(somMethodPtr)somAP_SOMTEmitC_somtScanStructs,
		&somMethodInfo_SOMTEmitC_somtScanStructs};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanUnions
		#define static_somMN_somtScanUnions
		static const char * somMN_somtScanUnions="somtScanUnions";
	#endif /* static_somMN_somtScanUnions */
	#ifndef static_somId_somtScanUnions
		#define static_somId_somtScanUnions
		static const somConstId somId_somtScanUnions=&somMN_somtScanUnions;
	#endif /* static_somId_somtScanUnions */
	#ifndef static_somDS_SOMTEmitC_somtScanUnions
		#define static_somDS_SOMTEmitC_somtScanUnions
		static const char * somDS_SOMTEmitC_somtScanUnions="SOMTEmitC::somtScanUnions";
	#endif /* static_somDS_SOMTEmitC_somtScanUnions */
	#ifndef static_somDI_SOMTEmitC_somtScanUnions
		#define static_somDI_SOMTEmitC_somtScanUnions
		static const somConstId somDI_SOMTEmitC_somtScanUnions=&somDS_SOMTEmitC_somtScanUnions;
	#endif /* static_somDI_SOMTEmitC_somtScanUnions */
	SOM_Scope boolean SOMLINK somtScanUnions(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanUnions,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanUnions   0
	#define somAP_SOMTEmitC_somtScanUnions   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanUnions(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanUnions,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanUnions(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanUnions,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanUnions(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanUnions,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanUnions(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanUnions)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanUnions={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanUnions={
		(somMethodPtr)somRD_SOMTEmitC_somtScanUnions,
		(somMethodPtr)somAP_SOMTEmitC_somtScanUnions,
		&somMethodInfo_SOMTEmitC_somtScanUnions};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanEnums
		#define static_somMN_somtScanEnums
		static const char * somMN_somtScanEnums="somtScanEnums";
	#endif /* static_somMN_somtScanEnums */
	#ifndef static_somId_somtScanEnums
		#define static_somId_somtScanEnums
		static const somConstId somId_somtScanEnums=&somMN_somtScanEnums;
	#endif /* static_somId_somtScanEnums */
	#ifndef static_somDS_SOMTEmitC_somtScanEnums
		#define static_somDS_SOMTEmitC_somtScanEnums
		static const char * somDS_SOMTEmitC_somtScanEnums="SOMTEmitC::somtScanEnums";
	#endif /* static_somDS_SOMTEmitC_somtScanEnums */
	#ifndef static_somDI_SOMTEmitC_somtScanEnums
		#define static_somDI_SOMTEmitC_somtScanEnums
		static const somConstId somDI_SOMTEmitC_somtScanEnums=&somDS_SOMTEmitC_somtScanEnums;
	#endif /* static_somDI_SOMTEmitC_somtScanEnums */
	SOM_Scope boolean SOMLINK somtScanEnums(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanEnums,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanEnums   0
	#define somAP_SOMTEmitC_somtScanEnums   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanEnums(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanEnums,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanEnums(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanEnums,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanEnums(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanEnums,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanEnums(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanEnums)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanEnums={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanEnums={
		(somMethodPtr)somRD_SOMTEmitC_somtScanEnums,
		(somMethodPtr)somAP_SOMTEmitC_somtScanEnums,
		&somMethodInfo_SOMTEmitC_somtScanEnums};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanData
		#define static_somMN_somtScanData
		static const char * somMN_somtScanData="somtScanData";
	#endif /* static_somMN_somtScanData */
	#ifndef static_somId_somtScanData
		#define static_somId_somtScanData
		static const somConstId somId_somtScanData=&somMN_somtScanData;
	#endif /* static_somId_somtScanData */
	#ifndef static_somDS_SOMTEmitC_somtScanData
		#define static_somDS_SOMTEmitC_somtScanData
		static const char * somDS_SOMTEmitC_somtScanData="SOMTEmitC::somtScanData";
	#endif /* static_somDS_SOMTEmitC_somtScanData */
	#ifndef static_somDI_SOMTEmitC_somtScanData
		#define static_somDI_SOMTEmitC_somtScanData
		static const somConstId somDI_SOMTEmitC_somtScanData=&somDS_SOMTEmitC_somtScanData;
	#endif /* static_somDI_SOMTEmitC_somtScanData */
	SOM_Scope boolean SOMLINK somtScanData(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanData,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanData   0
	#define somAP_SOMTEmitC_somtScanData   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanData(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanData,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanData(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanData,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanData(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanData,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanData(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanData)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanData={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanData={
		(somMethodPtr)somRD_SOMTEmitC_somtScanData,
		(somMethodPtr)somAP_SOMTEmitC_somtScanData,
		&somMethodInfo_SOMTEmitC_somtScanData};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanAttributes
		#define static_somMN_somtScanAttributes
		static const char * somMN_somtScanAttributes="somtScanAttributes";
	#endif /* static_somMN_somtScanAttributes */
	#ifndef static_somId_somtScanAttributes
		#define static_somId_somtScanAttributes
		static const somConstId somId_somtScanAttributes=&somMN_somtScanAttributes;
	#endif /* static_somId_somtScanAttributes */
	#ifndef static_somDS_SOMTEmitC_somtScanAttributes
		#define static_somDS_SOMTEmitC_somtScanAttributes
		static const char * somDS_SOMTEmitC_somtScanAttributes="SOMTEmitC::somtScanAttributes";
	#endif /* static_somDS_SOMTEmitC_somtScanAttributes */
	#ifndef static_somDI_SOMTEmitC_somtScanAttributes
		#define static_somDI_SOMTEmitC_somtScanAttributes
		static const somConstId somDI_SOMTEmitC_somtScanAttributes=&somDS_SOMTEmitC_somtScanAttributes;
	#endif /* static_somDI_SOMTEmitC_somtScanAttributes */
	SOM_Scope boolean SOMLINK somtScanAttributes(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanAttributes,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanAttributes   0
	#define somAP_SOMTEmitC_somtScanAttributes   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanAttributes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanAttributes,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanAttributes(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanAttributes,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanAttributes(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanAttributes,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanAttributes(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanAttributes)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanAttributes={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanAttributes={
		(somMethodPtr)somRD_SOMTEmitC_somtScanAttributes,
		(somMethodPtr)somAP_SOMTEmitC_somtScanAttributes,
		&somMethodInfo_SOMTEmitC_somtScanAttributes};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanInterfaces
		#define static_somMN_somtScanInterfaces
		static const char * somMN_somtScanInterfaces="somtScanInterfaces";
	#endif /* static_somMN_somtScanInterfaces */
	#ifndef static_somId_somtScanInterfaces
		#define static_somId_somtScanInterfaces
		static const somConstId somId_somtScanInterfaces=&somMN_somtScanInterfaces;
	#endif /* static_somId_somtScanInterfaces */
	#ifndef static_somDS_SOMTEmitC_somtScanInterfaces
		#define static_somDS_SOMTEmitC_somtScanInterfaces
		static const char * somDS_SOMTEmitC_somtScanInterfaces="SOMTEmitC::somtScanInterfaces";
	#endif /* static_somDS_SOMTEmitC_somtScanInterfaces */
	#ifndef static_somDI_SOMTEmitC_somtScanInterfaces
		#define static_somDI_SOMTEmitC_somtScanInterfaces
		static const somConstId somDI_SOMTEmitC_somtScanInterfaces=&somDS_SOMTEmitC_somtScanInterfaces;
	#endif /* static_somDI_SOMTEmitC_somtScanInterfaces */
	SOM_Scope boolean SOMLINK somtScanInterfaces(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanInterfaces,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanInterfaces   0
	#define somAP_SOMTEmitC_somtScanInterfaces   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanInterfaces(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanInterfaces,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanInterfaces(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanInterfaces,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanInterfaces(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanInterfaces,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanInterfaces(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanInterfaces)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanInterfaces={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanInterfaces={
		(somMethodPtr)somRD_SOMTEmitC_somtScanInterfaces,
		(somMethodPtr)somAP_SOMTEmitC_somtScanInterfaces,
		&somMethodInfo_SOMTEmitC_somtScanInterfaces};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanModules
		#define static_somMN_somtScanModules
		static const char * somMN_somtScanModules="somtScanModules";
	#endif /* static_somMN_somtScanModules */
	#ifndef static_somId_somtScanModules
		#define static_somId_somtScanModules
		static const somConstId somId_somtScanModules=&somMN_somtScanModules;
	#endif /* static_somId_somtScanModules */
	#ifndef static_somDS_SOMTEmitC_somtScanModules
		#define static_somDS_SOMTEmitC_somtScanModules
		static const char * somDS_SOMTEmitC_somtScanModules="SOMTEmitC::somtScanModules";
	#endif /* static_somDS_SOMTEmitC_somtScanModules */
	#ifndef static_somDI_SOMTEmitC_somtScanModules
		#define static_somDI_SOMTEmitC_somtScanModules
		static const somConstId somDI_SOMTEmitC_somtScanModules=&somDS_SOMTEmitC_somtScanModules;
	#endif /* static_somDI_SOMTEmitC_somtScanModules */
	SOM_Scope boolean SOMLINK somtScanModules(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanModules,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanModules   0
	#define somAP_SOMTEmitC_somtScanModules   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanModules(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanModules,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanModules(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanModules,somSelf,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanModules(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanModules,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanModules(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanModules)_somC_methodPtr)(somSelf,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanModules={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanModules={
		(somMethodPtr)somRD_SOMTEmitC_somtScanModules,
		(somMethodPtr)somAP_SOMTEmitC_somtScanModules,
		&somMethodInfo_SOMTEmitC_somtScanModules};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanPassthru
		#define static_somMN_somtScanPassthru
		static const char * somMN_somtScanPassthru="somtScanPassthru";
	#endif /* static_somMN_somtScanPassthru */
	#ifndef static_somId_somtScanPassthru
		#define static_somId_somtScanPassthru
		static const somConstId somId_somtScanPassthru=&somMN_somtScanPassthru;
	#endif /* static_somId_somtScanPassthru */
	#ifndef static_somDS_SOMTEmitC_somtScanPassthru
		#define static_somDS_SOMTEmitC_somtScanPassthru
		static const char * somDS_SOMTEmitC_somtScanPassthru="SOMTEmitC::somtScanPassthru";
	#endif /* static_somDS_SOMTEmitC_somtScanPassthru */
	#ifndef static_somDI_SOMTEmitC_somtScanPassthru
		#define static_somDI_SOMTEmitC_somtScanPassthru
		static const somConstId somDI_SOMTEmitC_somtScanPassthru=&somDS_SOMTEmitC_somtScanPassthru;
	#endif /* static_somDI_SOMTEmitC_somtScanPassthru */
	SOM_Scope boolean SOMLINK somtScanPassthru(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ boolean before,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somtScanPassthru,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanPassthru   0
	#define somAP_SOMTEmitC_somtScanPassthru   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ boolean before,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanPassthru,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ boolean before,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanPassthru,somSelf,
				(int )before,
				prolog,
				each,
				epilog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanPassthru(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanPassthru,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanPassthru(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		boolean before;
		string prolog;
		string each;
		string epilog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		before=(boolean )va_arg(_somC_ap,int );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanPassthru)_somC_methodPtr)(somSelf,before,prolog,each,epilog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanPassthru={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(int)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanPassthru={
		(somMethodPtr)somRD_SOMTEmitC_somtScanPassthru,
		(somMethodPtr)somAP_SOMTEmitC_somtScanPassthru,
		&somMethodInfo_SOMTEmitC_somtScanPassthru};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtEmitFullPassthru
		#define static_somMN_somtEmitFullPassthru
		static const char * somMN_somtEmitFullPassthru="somtEmitFullPassthru";
	#endif /* static_somMN_somtEmitFullPassthru */
	#ifndef static_somId_somtEmitFullPassthru
		#define static_somId_somtEmitFullPassthru
		static const somConstId somId_somtEmitFullPassthru=&somMN_somtEmitFullPassthru;
	#endif /* static_somId_somtEmitFullPassthru */
	#ifndef static_somDS_SOMTEmitC_somtEmitFullPassthru
		#define static_somDS_SOMTEmitC_somtEmitFullPassthru
		static const char * somDS_SOMTEmitC_somtEmitFullPassthru="SOMTEmitC::somtEmitFullPassthru";
	#endif /* static_somDS_SOMTEmitC_somtEmitFullPassthru */
	#ifndef static_somDI_SOMTEmitC_somtEmitFullPassthru
		#define static_somDI_SOMTEmitC_somtEmitFullPassthru
		static const somConstId somDI_SOMTEmitC_somtEmitFullPassthru=&somDS_SOMTEmitC_somtEmitFullPassthru;
	#endif /* static_somDI_SOMTEmitC_somtEmitFullPassthru */
	SOM_Scope void SOMLINK somtEmitFullPassthru(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ boolean before,
	/* in */ string language);
	#ifdef __IBMC__
		#pragma linkage(somtEmitFullPassthru,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtEmitFullPassthru   0
	#define somAP_SOMTEmitC_somtEmitFullPassthru   0
#else /* SOM_METHOD_STUBS */
	static void SOMLINK somRD_SOMTEmitC_somtEmitFullPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ boolean before,
			/* in */ string language);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtEmitFullPassthru,system)
	#endif /* __IBMC__ */
	static void SOMLINK somRD_SOMTEmitC_somtEmitFullPassthru(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ boolean before,
			/* in */ string language)
	{
		somToken _somC_retVal=NULL; /* actually returns a void */
		somva_SOMObject_somDispatch(somSelf,&_somC_retVal,
			(somId)somId_somtEmitFullPassthru,somSelf,
				(int )before,
				language);
	}
	static void SOMLINK somAP_SOMTEmitC_somtEmitFullPassthru(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtEmitFullPassthru,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtEmitFullPassthru(
		SOMTEmitC SOMSTAR somSelf,
		void *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		boolean before;
		string language;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		before=(boolean )va_arg(_somC_ap,int );
		language=va_arg(_somC_ap,string );

		SOM_IgnoreWarning(_somC_retVal);

		((somTD_SOMTEmitC_somtEmitFullPassthru)_somC_methodPtr)(somSelf,before,language);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtEmitFullPassthru={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(int)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtEmitFullPassthru={
		(somMethodPtr)somRD_SOMTEmitC_somtEmitFullPassthru,
		(somMethodPtr)somAP_SOMTEmitC_somtEmitFullPassthru,
		&somMethodInfo_SOMTEmitC_somtEmitFullPassthru};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanDataF
		#define static_somMN_somtScanDataF
		static const char * somMN_somtScanDataF="somtScanDataF";
	#endif /* static_somMN_somtScanDataF */
	#ifndef static_somId_somtScanDataF
		#define static_somId_somtScanDataF
		static const somConstId somId_somtScanDataF=&somMN_somtScanDataF;
	#endif /* static_somId_somtScanDataF */
	#ifndef static_somDS_SOMTEmitC_somtScanDataF
		#define static_somDS_SOMTEmitC_somtScanDataF
		static const char * somDS_SOMTEmitC_somtScanDataF="SOMTEmitC::somtScanDataF";
	#endif /* static_somDS_SOMTEmitC_somtScanDataF */
	#ifndef static_somDI_SOMTEmitC_somtScanDataF
		#define static_somDI_SOMTEmitC_somtScanDataF
		static const somConstId somDI_SOMTEmitC_somtScanDataF=&somDS_SOMTEmitC_somtScanDataF;
	#endif /* static_somDI_SOMTEmitC_somtScanDataF */
	SOM_Scope boolean SOMLINK somtScanDataF(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string filter,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog,
	/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somtScanDataF,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanDataF   0
	#define somAP_SOMTEmitC_somtScanDataF   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanDataF(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanDataF,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanDataF(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanDataF,somSelf,
				filter,
				prolog,
				each,
				epilog,
				(int )forceProlog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanDataF(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanDataF,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanDataF(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string filter;
		string prolog;
		string each;
		string epilog;
		boolean forceProlog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		filter=va_arg(_somC_ap,string );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );
		forceProlog=(boolean )va_arg(_somC_ap,int );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanDataF)_somC_methodPtr)(somSelf,filter,prolog,each,epilog,forceProlog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanDataF={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(int)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanDataF={
		(somMethodPtr)somRD_SOMTEmitC_somtScanDataF,
		(somMethodPtr)somAP_SOMTEmitC_somtScanDataF,
		&somMethodInfo_SOMTEmitC_somtScanDataF};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtScanBasesF
		#define static_somMN_somtScanBasesF
		static const char * somMN_somtScanBasesF="somtScanBasesF";
	#endif /* static_somMN_somtScanBasesF */
	#ifndef static_somId_somtScanBasesF
		#define static_somId_somtScanBasesF
		static const somConstId somId_somtScanBasesF=&somMN_somtScanBasesF;
	#endif /* static_somId_somtScanBasesF */
	#ifndef static_somDS_SOMTEmitC_somtScanBasesF
		#define static_somDS_SOMTEmitC_somtScanBasesF
		static const char * somDS_SOMTEmitC_somtScanBasesF="SOMTEmitC::somtScanBasesF";
	#endif /* static_somDS_SOMTEmitC_somtScanBasesF */
	#ifndef static_somDI_SOMTEmitC_somtScanBasesF
		#define static_somDI_SOMTEmitC_somtScanBasesF
		static const somConstId somDI_SOMTEmitC_somtScanBasesF=&somDS_SOMTEmitC_somtScanBasesF;
	#endif /* static_somDI_SOMTEmitC_somtScanBasesF */
	SOM_Scope boolean SOMLINK somtScanBasesF(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string filter,
	/* in */ string prolog,
	/* in */ string each,
	/* in */ string epilog,
	/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somtScanBasesF,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtScanBasesF   0
	#define somAP_SOMTEmitC_somtScanBasesF   0
#else /* SOM_METHOD_STUBS */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBasesF(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtScanBasesF,system)
	#endif /* __IBMC__ */
	static boolean SOMLINK somRD_SOMTEmitC_somtScanBasesF(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string filter,
			/* in */ string prolog,
			/* in */ string each,
			/* in */ string epilog,
			/* in */ boolean forceProlog)
	{
		boolean _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtScanBasesF,somSelf,
				filter,
				prolog,
				each,
				epilog,
				(int )forceProlog);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtScanBasesF(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtScanBasesF,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtScanBasesF(
		SOMTEmitC SOMSTAR somSelf,
		boolean *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string filter;
		string prolog;
		string each;
		string epilog;
		boolean forceProlog;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		filter=va_arg(_somC_ap,string );
		prolog=va_arg(_somC_ap,string );
		each=va_arg(_somC_ap,string );
		epilog=va_arg(_somC_ap,string );
		forceProlog=(boolean )va_arg(_somC_ap,int );

		*_somC_retVal=((somTD_SOMTEmitC_somtScanBasesF)_somC_methodPtr)(somSelf,filter,prolog,each,epilog,forceProlog);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtScanBasesF={
		SOMRdRetbyte|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(string)
		+sizeof(int)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtScanBasesF={
		(somMethodPtr)somRD_SOMTEmitC_somtScanBasesF,
		(somMethodPtr)somAP_SOMTEmitC_somtScanBasesF,
		&somMethodInfo_SOMTEmitC_somtScanBasesF};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtGetGlobalModifierValue
		#define static_somMN_somtGetGlobalModifierValue
		static const char * somMN_somtGetGlobalModifierValue="somtGetGlobalModifierValue";
	#endif /* static_somMN_somtGetGlobalModifierValue */
	#ifndef static_somId_somtGetGlobalModifierValue
		#define static_somId_somtGetGlobalModifierValue
		static const somConstId somId_somtGetGlobalModifierValue=&somMN_somtGetGlobalModifierValue;
	#endif /* static_somId_somtGetGlobalModifierValue */
	#ifndef static_somDS_SOMTEmitC_somtGetGlobalModifierValue
		#define static_somDS_SOMTEmitC_somtGetGlobalModifierValue
		static const char * somDS_SOMTEmitC_somtGetGlobalModifierValue="SOMTEmitC::somtGetGlobalModifierValue";
	#endif /* static_somDS_SOMTEmitC_somtGetGlobalModifierValue */
	#ifndef static_somDI_SOMTEmitC_somtGetGlobalModifierValue
		#define static_somDI_SOMTEmitC_somtGetGlobalModifierValue
		static const somConstId somDI_SOMTEmitC_somtGetGlobalModifierValue=&somDS_SOMTEmitC_somtGetGlobalModifierValue;
	#endif /* static_somDI_SOMTEmitC_somtGetGlobalModifierValue */
	SOM_Scope string SOMLINK somtGetGlobalModifierValue(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ string modifierName);
	#ifdef __IBMC__
		#pragma linkage(somtGetGlobalModifierValue,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtGetGlobalModifierValue   0
	#define somAP_SOMTEmitC_somtGetGlobalModifierValue   0
#else /* SOM_METHOD_STUBS */
	static string SOMLINK somRD_SOMTEmitC_somtGetGlobalModifierValue(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string modifierName);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtGetGlobalModifierValue,system)
	#endif /* __IBMC__ */
	static string SOMLINK somRD_SOMTEmitC_somtGetGlobalModifierValue(
			SOMTEmitC SOMSTAR somSelf,
			/* in */ string modifierName)
	{
		string _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtGetGlobalModifierValue,somSelf,
				modifierName);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtGetGlobalModifierValue(
		SOMTEmitC SOMSTAR somSelf,
		string *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtGetGlobalModifierValue,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtGetGlobalModifierValue(
		SOMTEmitC SOMSTAR somSelf,
		string *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{
		string modifierName;

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );
		modifierName=va_arg(_somC_ap,string );

		*_somC_retVal=((somTD_SOMTEmitC_somtGetGlobalModifierValue)_somC_methodPtr)(somSelf,modifierName);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtGetGlobalModifierValue={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		+sizeof(string)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtGetGlobalModifierValue={
		(somMethodPtr)somRD_SOMTEmitC_somtGetGlobalModifierValue,
		(somMethodPtr)somAP_SOMTEmitC_somtGetGlobalModifierValue,
		&somMethodInfo_SOMTEmitC_somtGetGlobalModifierValue};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtGetFirstGlobalDefinition
		#define static_somMN_somtGetFirstGlobalDefinition
		static const char * somMN_somtGetFirstGlobalDefinition="somtGetFirstGlobalDefinition";
	#endif /* static_somMN_somtGetFirstGlobalDefinition */
	#ifndef static_somId_somtGetFirstGlobalDefinition
		#define static_somId_somtGetFirstGlobalDefinition
		static const somConstId somId_somtGetFirstGlobalDefinition=&somMN_somtGetFirstGlobalDefinition;
	#endif /* static_somId_somtGetFirstGlobalDefinition */
	#ifndef static_somDS_SOMTEmitC_somtGetFirstGlobalDefinition
		#define static_somDS_SOMTEmitC_somtGetFirstGlobalDefinition
		static const char * somDS_SOMTEmitC_somtGetFirstGlobalDefinition="SOMTEmitC::somtGetFirstGlobalDefinition";
	#endif /* static_somDS_SOMTEmitC_somtGetFirstGlobalDefinition */
	#ifndef static_somDI_SOMTEmitC_somtGetFirstGlobalDefinition
		#define static_somDI_SOMTEmitC_somtGetFirstGlobalDefinition
		static const somConstId somDI_SOMTEmitC_somtGetFirstGlobalDefinition=&somDS_SOMTEmitC_somtGetFirstGlobalDefinition;
	#endif /* static_somDI_SOMTEmitC_somtGetFirstGlobalDefinition */
	SOM_Scope SOMTEntryC SOMSTAR SOMLINK somtGetFirstGlobalDefinition(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtGetFirstGlobalDefinition,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtGetFirstGlobalDefinition   0
	#define somAP_SOMTEmitC_somtGetFirstGlobalDefinition   0
#else /* SOM_METHOD_STUBS */
	static SOMTEntryC SOMSTAR SOMLINK somRD_SOMTEmitC_somtGetFirstGlobalDefinition(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtGetFirstGlobalDefinition,system)
	#endif /* __IBMC__ */
	static SOMTEntryC SOMSTAR SOMLINK somRD_SOMTEmitC_somtGetFirstGlobalDefinition(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTEntryC SOMSTAR _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtGetFirstGlobalDefinition,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtGetFirstGlobalDefinition(
		SOMTEmitC SOMSTAR somSelf,
		SOMTEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtGetFirstGlobalDefinition,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtGetFirstGlobalDefinition(
		SOMTEmitC SOMSTAR somSelf,
		SOMTEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtGetFirstGlobalDefinition)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtGetFirstGlobalDefinition={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtGetFirstGlobalDefinition={
		(somMethodPtr)somRD_SOMTEmitC_somtGetFirstGlobalDefinition,
		(somMethodPtr)somAP_SOMTEmitC_somtGetFirstGlobalDefinition,
		&somMethodInfo_SOMTEmitC_somtGetFirstGlobalDefinition};
#endif /* SOM_METHOD_STUBS */
	#ifndef static_somMN_somtGetNextGlobalDefinition
		#define static_somMN_somtGetNextGlobalDefinition
		static const char * somMN_somtGetNextGlobalDefinition="somtGetNextGlobalDefinition";
	#endif /* static_somMN_somtGetNextGlobalDefinition */
	#ifndef static_somId_somtGetNextGlobalDefinition
		#define static_somId_somtGetNextGlobalDefinition
		static const somConstId somId_somtGetNextGlobalDefinition=&somMN_somtGetNextGlobalDefinition;
	#endif /* static_somId_somtGetNextGlobalDefinition */
	#ifndef static_somDS_SOMTEmitC_somtGetNextGlobalDefinition
		#define static_somDS_SOMTEmitC_somtGetNextGlobalDefinition
		static const char * somDS_SOMTEmitC_somtGetNextGlobalDefinition="SOMTEmitC::somtGetNextGlobalDefinition";
	#endif /* static_somDS_SOMTEmitC_somtGetNextGlobalDefinition */
	#ifndef static_somDI_SOMTEmitC_somtGetNextGlobalDefinition
		#define static_somDI_SOMTEmitC_somtGetNextGlobalDefinition
		static const somConstId somDI_SOMTEmitC_somtGetNextGlobalDefinition=&somDS_SOMTEmitC_somtGetNextGlobalDefinition;
	#endif /* static_somDI_SOMTEmitC_somtGetNextGlobalDefinition */
	SOM_Scope SOMTEntryC SOMSTAR SOMLINK somtGetNextGlobalDefinition(
	SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somtGetNextGlobalDefinition,system)
	#endif /* __IBMC__ */
#ifdef SOM_METHOD_STUBS
	#define somRD_SOMTEmitC_somtGetNextGlobalDefinition   0
	#define somAP_SOMTEmitC_somtGetNextGlobalDefinition   0
#else /* SOM_METHOD_STUBS */
	static SOMTEntryC SOMSTAR SOMLINK somRD_SOMTEmitC_somtGetNextGlobalDefinition(
			SOMTEmitC SOMSTAR somSelf);
	#ifdef __IBMC__
		#pragma linkage(somRD_SOMTEmitC_somtGetNextGlobalDefinition,system)
	#endif /* __IBMC__ */
	static SOMTEntryC SOMSTAR SOMLINK somRD_SOMTEmitC_somtGetNextGlobalDefinition(
			SOMTEmitC SOMSTAR somSelf)
	{
		SOMTEntryC SOMSTAR _somC_retVal;
#ifdef _DEBUG
		memset(&_somC_retVal,0xCC,sizeof(_somC_retVal));
#endif /* _DEBUG */
		somva_SOMObject_somDispatch(somSelf,(somToken *)(void *)&_somC_retVal,
			(somId)somId_somtGetNextGlobalDefinition,somSelf);

		return _somC_retVal;
	}
	static void SOMLINK somAP_SOMTEmitC_somtGetNextGlobalDefinition(
		SOMTEmitC SOMSTAR somSelf,
		SOMTEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap);
	#ifdef __IBMC__
		#pragma linkage(somAP_SOMTEmitC_somtGetNextGlobalDefinition,system)
	#endif /* __IBMC__ */
	static void SOMLINK somAP_SOMTEmitC_somtGetNextGlobalDefinition(
		SOMTEmitC SOMSTAR somSelf,
		SOMTEntryC SOMSTAR *_somC_retVal,
		somMethodPtr _somC_methodPtr,
		va_list _somC_ap)
	{

		somSelf=va_arg(_somC_ap,SOMTEmitC SOMSTAR );

		*_somC_retVal=((somTD_SOMTEmitC_somtGetNextGlobalDefinition)_somC_methodPtr)(somSelf);
	}

#endif /* SOM_METHOD_STUBS */
#ifdef SOM_METHOD_STUBS
static somMethodInfo somMethodInfo_SOMTEmitC_somtGetNextGlobalDefinition={
		SOMRdRetsimple|SOMRdNoFloatArgs,
		sizeof(SOMObject SOMSTAR)
		,NULL};
static somApRdInfo somApRdInfo_SOMTEmitC_somtGetNextGlobalDefinition={
		(somMethodPtr)somRD_SOMTEmitC_somtGetNextGlobalDefinition,
		(somMethodPtr)somAP_SOMTEmitC_somtGetNextGlobalDefinition,
		&somMethodInfo_SOMTEmitC_somtGetNextGlobalDefinition};
#endif /* SOM_METHOD_STUBS */
	#ifndef SOMTEmitCMethodDebug
		#define SOMTEmitCMethodDebug(x,y)
	#endif /* SOMTEmitCMethodDebug */
	#ifdef SOM_DATA_THUNKS
		#define SOMTEmitCGetData(somSelf) \
			(((SOMTEmitCData * (SOMLINK *)(SOMTEmitC SOMSTAR))(somMethodPtr)SOMTEmitCCClassData.instanceDataToken)(somSelf))
	#else /* SOM_DATA_THUNKS */
		#define SOMTEmitCGetData(somSelf) \
			((SOMTEmitCData *) \
				somDataResolve(somSelf,SOMTEmitCCClassData.instanceDataToken))
	#endif /* SOM_DATA_THUNKS */
	#ifndef static_somDS_SOMObject_somDumpSelfInt
		#define static_somDS_SOMObject_somDumpSelfInt
		static const char * somDS_SOMObject_somDumpSelfInt="SOMObject::somDumpSelfInt";
	#endif /* static_somDS_SOMObject_somDumpSelfInt */
	#ifndef static_somDI_SOMObject_somDumpSelfInt
		#define static_somDI_SOMObject_somDumpSelfInt
		static const somConstId somDI_SOMObject_somDumpSelfInt=&somDS_SOMObject_somDumpSelfInt;
	#endif /* static_somDI_SOMObject_somDumpSelfInt */
	SOM_Scope void SOMLINK somDumpSelfInt(
	SOMTEmitC SOMSTAR somSelf,
	/* in */ long level);
	#ifdef __IBMC__
		#pragma linkage(somDumpSelfInt,system)
	#endif /* __IBMC__ */
/* SOMTEmitC::somDefaultInit (..\src\rhbschdr.cpp:3254)*/
	#ifndef static_somDS_SOMObject_somDefaultInit
		#define static_somDS_SOMObject_somDefaultInit
		static const char * somDS_SOMObject_somDefaultInit="SOMObject::somDefaultInit";
	#endif /* static_somDS_SOMObject_somDefaultInit */
	#ifndef static_somDI_SOMObject_somDefaultInit
		#define static_somDI_SOMObject_somDefaultInit
		static const somConstId somDI_SOMObject_somDefaultInit=&somDS_SOMObject_somDefaultInit;
	#endif /* static_somDI_SOMObject_somDefaultInit */
	SOM_Scope void SOMLINK somDefaultInit(
	SOMTEmitC SOMSTAR somSelf,
	/* inout */ somInitCtrl *ctrl);
	#ifdef __IBMC__
		#pragma linkage(somDefaultInit,system)
	#endif /* __IBMC__ */
	#ifndef static_somCN_SOMTEmitC
		#define static_somCN_SOMTEmitC
		static const char * somCN_SOMTEmitC="SOMTEmitC";
	#endif /* static_somCN_SOMTEmitC */
	#ifndef static_somPCN_SOMTEmitC_SOMObject
		#define static_somPCN_SOMTEmitC_SOMObject
		static const char * somPCN_SOMTEmitC_SOMObject="SOMObject";
	#endif /* static_somPCN_SOMTEmitC_SOMObject */
static const somConstId somPCSOMTEmitC[1]={
	&somPCN_SOMTEmitC_SOMObject};

/* class ::SOMTEmitC introduces 93 methods, 0 procedures and overrides 2 */
/* should have ::SOMTEmitCClassData defined here */
/* set for attribute SOMTEmitC_somtTemplate */
SOM_Scope void SOMLINK _set_somtTemplate(SOMTEmitC SOMSTAR somSelf,SOMTTemplateOutputC SOMSTAR value)
{
	SOMTEmitCGetData(somSelf)->somtTemplate=value;
}
SOM_Scope SOMTTemplateOutputC SOMSTAR  SOMLINK _get_somtTemplate(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtTemplate;
}
/* set for attribute SOMTEmitC_somtTargetFile */
SOM_Scope void SOMLINK _set_somtTargetFile(SOMTEmitC SOMSTAR somSelf,FILE *value)
{
	SOMTEmitCGetData(somSelf)->somtTargetFile=value;
}
SOM_Scope FILE * SOMLINK _get_somtTargetFile(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtTargetFile;
}
/* set for attribute SOMTEmitC_somtTargetClass */
SOM_Scope void SOMLINK _set_somtTargetClass(SOMTEmitC SOMSTAR somSelf,SOMTClassEntryC SOMSTAR value)
{
	SOMTEmitCGetData(somSelf)->somtTargetClass=value;
}
SOM_Scope SOMTClassEntryC SOMSTAR  SOMLINK _get_somtTargetClass(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtTargetClass;
}
/* set for attribute SOMTEmitC_somtTargetModule */
SOM_Scope void SOMLINK _set_somtTargetModule(SOMTEmitC SOMSTAR somSelf,SOMTModuleEntryC SOMSTAR value)
{
	SOMTEmitCGetData(somSelf)->somtTargetModule=value;
}
SOM_Scope SOMTModuleEntryC SOMSTAR  SOMLINK _get_somtTargetModule(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtTargetModule;
}
/* set for attribute SOMTEmitC_somtTargetType */
SOM_Scope void SOMLINK _set_somtTargetType(SOMTEmitC SOMSTAR somSelf,SOMTTargetTypeT value)
{
	SOMTEmitCGetData(somSelf)->somtTargetType=value;
}
SOM_Scope SOMTTargetTypeT  SOMLINK _get_somtTargetType(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtTargetType;
}
/* set for attribute SOMTEmitC_somtEmitterName */
SOM_Scope void SOMLINK _set_somtEmitterName(SOMTEmitC SOMSTAR somSelf,string value)
{
	SOMTEmitCGetData(somSelf)->somtEmitterName=value;
}
SOM_Scope string  SOMLINK _get_somtEmitterName(SOMTEmitC SOMSTAR somSelf)
{
	return SOMTEmitCGetData(somSelf)->somtEmitterName;
}
static somStaticMethod_t SOMTEmitCSM[93]={
		{
			&SOMTEmitCClassData._set_somtTemplate,
			&somId__set_somtTemplate,
			&somDI_SOMTEmitC__set_somtTemplate,
			(somMethodPtr)_set_somtTemplate,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtTemplate
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtTemplate,
			(somMethodPtr)somAP_SOMTEmitC__set_somtTemplate
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtTemplate,
			&somId__get_somtTemplate,
			&somDI_SOMTEmitC__get_somtTemplate,
			(somMethodPtr)_get_somtTemplate,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtTemplate
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtTemplate,
			(somMethodPtr)somAP_SOMTEmitC__get_somtTemplate
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._set_somtTargetFile,
			&somId__set_somtTargetFile,
			&somDI_SOMTEmitC__set_somtTargetFile,
			(somMethodPtr)_set_somtTargetFile,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtTargetFile
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtTargetFile,
			(somMethodPtr)somAP_SOMTEmitC__set_somtTargetFile
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtTargetFile,
			&somId__get_somtTargetFile,
			&somDI_SOMTEmitC__get_somtTargetFile,
			(somMethodPtr)_get_somtTargetFile,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtTargetFile
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtTargetFile,
			(somMethodPtr)somAP_SOMTEmitC__get_somtTargetFile
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._set_somtTargetClass,
			&somId__set_somtTargetClass,
			&somDI_SOMTEmitC__set_somtTargetClass,
			(somMethodPtr)_set_somtTargetClass,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtTargetClass
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtTargetClass,
			(somMethodPtr)somAP_SOMTEmitC__set_somtTargetClass
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtTargetClass,
			&somId__get_somtTargetClass,
			&somDI_SOMTEmitC__get_somtTargetClass,
			(somMethodPtr)_get_somtTargetClass,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtTargetClass
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtTargetClass,
			(somMethodPtr)somAP_SOMTEmitC__get_somtTargetClass
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._set_somtTargetModule,
			&somId__set_somtTargetModule,
			&somDI_SOMTEmitC__set_somtTargetModule,
			(somMethodPtr)_set_somtTargetModule,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtTargetModule
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtTargetModule,
			(somMethodPtr)somAP_SOMTEmitC__set_somtTargetModule
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtTargetModule,
			&somId__get_somtTargetModule,
			&somDI_SOMTEmitC__get_somtTargetModule,
			(somMethodPtr)_get_somtTargetModule,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtTargetModule
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtTargetModule,
			(somMethodPtr)somAP_SOMTEmitC__get_somtTargetModule
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._set_somtTargetType,
			&somId__set_somtTargetType,
			&somDI_SOMTEmitC__set_somtTargetType,
			(somMethodPtr)_set_somtTargetType,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtTargetType
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtTargetType,
			(somMethodPtr)somAP_SOMTEmitC__set_somtTargetType
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtTargetType,
			&somId__get_somtTargetType,
			&somDI_SOMTEmitC__get_somtTargetType,
			(somMethodPtr)_get_somtTargetType,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtTargetType
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtTargetType,
			(somMethodPtr)somAP_SOMTEmitC__get_somtTargetType
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._set_somtEmitterName,
			&somId__set_somtEmitterName,
			&somDI_SOMTEmitC__set_somtEmitterName,
			(somMethodPtr)_set_somtEmitterName,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__set_somtEmitterName
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__set_somtEmitterName,
			(somMethodPtr)somAP_SOMTEmitC__set_somtEmitterName
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData._get_somtEmitterName,
			&somId__get_somtEmitterName,
			&somDI_SOMTEmitC__get_somtEmitterName,
			(somMethodPtr)_get_somtEmitterName,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC__get_somtEmitterName
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC__get_somtEmitterName,
			(somMethodPtr)somAP_SOMTEmitC__get_somtEmitterName
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtGenerateSections,
			&somId_somtGenerateSections,
			&somDI_SOMTEmitC_somtGenerateSections,
			(somMethodPtr)somtGenerateSections,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtGenerateSections
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtGenerateSections,
			(somMethodPtr)somAP_SOMTEmitC_somtGenerateSections
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtOpenSymbolsFile,
			&somId_somtOpenSymbolsFile,
			&somDI_SOMTEmitC_somtOpenSymbolsFile,
			(somMethodPtr)somtOpenSymbolsFile,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtOpenSymbolsFile
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtOpenSymbolsFile,
			(somMethodPtr)somAP_SOMTEmitC_somtOpenSymbolsFile
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtSetPredefinedSymbols,
			&somId_somtSetPredefinedSymbols,
			&somDI_SOMTEmitC_somtSetPredefinedSymbols,
			(somMethodPtr)somtSetPredefinedSymbols,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtSetPredefinedSymbols
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtSetPredefinedSymbols,
			(somMethodPtr)somAP_SOMTEmitC_somtSetPredefinedSymbols
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtFileSymbols,
			&somId_somtFileSymbols,
			&somDI_SOMTEmitC_somtFileSymbols,
			(somMethodPtr)somtFileSymbols,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtFileSymbols
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtFileSymbols,
			(somMethodPtr)somAP_SOMTEmitC_somtFileSymbols
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitProlog,
			&somId_somtEmitProlog,
			&somDI_SOMTEmitC_somtEmitProlog,
			(somMethodPtr)somtEmitProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBaseIncludesProlog,
			&somId_somtEmitBaseIncludesProlog,
			&somDI_SOMTEmitC_somtEmitBaseIncludesProlog,
			(somMethodPtr)somtEmitBaseIncludesProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBaseIncludesProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludesProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludesProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBaseIncludes,
			&somId_somtEmitBaseIncludes,
			&somDI_SOMTEmitC_somtEmitBaseIncludes,
			(somMethodPtr)somtEmitBaseIncludes,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBaseIncludes
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludes,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludes
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBaseIncludesEpilog,
			&somId_somtEmitBaseIncludesEpilog,
			&somDI_SOMTEmitC_somtEmitBaseIncludesEpilog,
			(somMethodPtr)somtEmitBaseIncludesEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBaseIncludesEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseIncludesEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseIncludesEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMetaInclude,
			&somId_somtEmitMetaInclude,
			&somDI_SOMTEmitC_somtEmitMetaInclude,
			(somMethodPtr)somtEmitMetaInclude,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMetaInclude
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMetaInclude,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMetaInclude
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitClass,
			&somId_somtEmitClass,
			&somDI_SOMTEmitC_somtEmitClass,
			(somMethodPtr)somtEmitClass,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitClass
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitClass,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitClass
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMeta,
			&somId_somtEmitMeta,
			&somDI_SOMTEmitC_somtEmitMeta,
			(somMethodPtr)somtEmitMeta,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMeta
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMeta,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMeta
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBaseProlog,
			&somId_somtEmitBaseProlog,
			&somDI_SOMTEmitC_somtEmitBaseProlog,
			(somMethodPtr)somtEmitBaseProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBaseProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBase,
			&somId_somtEmitBase,
			&somDI_SOMTEmitC_somtEmitBase,
			(somMethodPtr)somtEmitBase,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBase
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBase,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBase
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitBaseEpilog,
			&somId_somtEmitBaseEpilog,
			&somDI_SOMTEmitC_somtEmitBaseEpilog,
			(somMethodPtr)somtEmitBaseEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitBaseEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitBaseEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitBaseEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitPassthruProlog,
			&somId_somtEmitPassthruProlog,
			&somDI_SOMTEmitC_somtEmitPassthruProlog,
			(somMethodPtr)somtEmitPassthruProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitPassthruProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthruProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthruProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitPassthru,
			&somId_somtEmitPassthru,
			&somDI_SOMTEmitC_somtEmitPassthru,
			(somMethodPtr)somtEmitPassthru,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitPassthru
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthru,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthru
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitPassthruEpilog,
			&somId_somtEmitPassthruEpilog,
			&somDI_SOMTEmitC_somtEmitPassthruEpilog,
			(somMethodPtr)somtEmitPassthruEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitPassthruEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitPassthruEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitPassthruEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitRelease,
			&somId_somtEmitRelease,
			&somDI_SOMTEmitC_somtEmitRelease,
			(somMethodPtr)somtEmitRelease,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitRelease
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitRelease,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitRelease
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitDataProlog,
			&somId_somtEmitDataProlog,
			&somDI_SOMTEmitC_somtEmitDataProlog,
			(somMethodPtr)somtEmitDataProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitDataProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitDataProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitDataProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitData,
			&somId_somtEmitData,
			&somDI_SOMTEmitC_somtEmitData,
			(somMethodPtr)somtEmitData,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitData
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitData,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitData
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitDataEpilog,
			&somId_somtEmitDataEpilog,
			&somDI_SOMTEmitC_somtEmitDataEpilog,
			(somMethodPtr)somtEmitDataEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitDataEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitDataEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitDataEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitAttributeProlog,
			&somId_somtEmitAttributeProlog,
			&somDI_SOMTEmitC_somtEmitAttributeProlog,
			(somMethodPtr)somtEmitAttributeProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitAttributeProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitAttributeProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitAttributeProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitAttribute,
			&somId_somtEmitAttribute,
			&somDI_SOMTEmitC_somtEmitAttribute,
			(somMethodPtr)somtEmitAttribute,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitAttribute
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitAttribute,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitAttribute
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitAttributeEpilog,
			&somId_somtEmitAttributeEpilog,
			&somDI_SOMTEmitC_somtEmitAttributeEpilog,
			(somMethodPtr)somtEmitAttributeEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitAttributeEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitAttributeEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitAttributeEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitConstantProlog,
			&somId_somtEmitConstantProlog,
			&somDI_SOMTEmitC_somtEmitConstantProlog,
			(somMethodPtr)somtEmitConstantProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitConstantProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitConstantProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitConstantProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitConstant,
			&somId_somtEmitConstant,
			&somDI_SOMTEmitC_somtEmitConstant,
			(somMethodPtr)somtEmitConstant,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitConstant
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitConstant,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitConstant
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitConstantEpilog,
			&somId_somtEmitConstantEpilog,
			&somDI_SOMTEmitC_somtEmitConstantEpilog,
			(somMethodPtr)somtEmitConstantEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitConstantEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitConstantEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitConstantEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitTypedefProlog,
			&somId_somtEmitTypedefProlog,
			&somDI_SOMTEmitC_somtEmitTypedefProlog,
			(somMethodPtr)somtEmitTypedefProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitTypedefProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedefProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedefProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitTypedef,
			&somId_somtEmitTypedef,
			&somDI_SOMTEmitC_somtEmitTypedef,
			(somMethodPtr)somtEmitTypedef,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitTypedef
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedef,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedef
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitTypedefEpilog,
			&somId_somtEmitTypedefEpilog,
			&somDI_SOMTEmitC_somtEmitTypedefEpilog,
			(somMethodPtr)somtEmitTypedefEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitTypedefEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitTypedefEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitTypedefEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitStructProlog,
			&somId_somtEmitStructProlog,
			&somDI_SOMTEmitC_somtEmitStructProlog,
			(somMethodPtr)somtEmitStructProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitStructProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitStructProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitStructProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitStruct,
			&somId_somtEmitStruct,
			&somDI_SOMTEmitC_somtEmitStruct,
			(somMethodPtr)somtEmitStruct,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitStruct
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitStruct,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitStruct
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitStructEpilog,
			&somId_somtEmitStructEpilog,
			&somDI_SOMTEmitC_somtEmitStructEpilog,
			(somMethodPtr)somtEmitStructEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitStructEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitStructEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitStructEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitUnionProlog,
			&somId_somtEmitUnionProlog,
			&somDI_SOMTEmitC_somtEmitUnionProlog,
			(somMethodPtr)somtEmitUnionProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitUnionProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitUnionProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitUnionProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitUnion,
			&somId_somtEmitUnion,
			&somDI_SOMTEmitC_somtEmitUnion,
			(somMethodPtr)somtEmitUnion,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitUnion
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitUnion,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitUnion
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitUnionEpilog,
			&somId_somtEmitUnionEpilog,
			&somDI_SOMTEmitC_somtEmitUnionEpilog,
			(somMethodPtr)somtEmitUnionEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitUnionEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitUnionEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitUnionEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitEnumProlog,
			&somId_somtEmitEnumProlog,
			&somDI_SOMTEmitC_somtEmitEnumProlog,
			(somMethodPtr)somtEmitEnumProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitEnumProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitEnumProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitEnumProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitEnum,
			&somId_somtEmitEnum,
			&somDI_SOMTEmitC_somtEmitEnum,
			(somMethodPtr)somtEmitEnum,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitEnum
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitEnum,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitEnum
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitEnumEpilog,
			&somId_somtEmitEnumEpilog,
			&somDI_SOMTEmitC_somtEmitEnumEpilog,
			(somMethodPtr)somtEmitEnumEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitEnumEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitEnumEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitEnumEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitInterfaceProlog,
			&somId_somtEmitInterfaceProlog,
			&somDI_SOMTEmitC_somtEmitInterfaceProlog,
			(somMethodPtr)somtEmitInterfaceProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitInterfaceProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitInterfaceProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitInterfaceProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitInterface,
			&somId_somtEmitInterface,
			&somDI_SOMTEmitC_somtEmitInterface,
			(somMethodPtr)somtEmitInterface,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitInterface
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitInterface,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitInterface
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitInterfaceEpilog,
			&somId_somtEmitInterfaceEpilog,
			&somDI_SOMTEmitC_somtEmitInterfaceEpilog,
			(somMethodPtr)somtEmitInterfaceEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitInterfaceEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitInterfaceEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitInterfaceEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitModuleProlog,
			&somId_somtEmitModuleProlog,
			&somDI_SOMTEmitC_somtEmitModuleProlog,
			(somMethodPtr)somtEmitModuleProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitModuleProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitModuleProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitModuleProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitModule,
			&somId_somtEmitModule,
			&somDI_SOMTEmitC_somtEmitModule,
			(somMethodPtr)somtEmitModule,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitModule
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitModule,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitModule
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitModuleEpilog,
			&somId_somtEmitModuleEpilog,
			&somDI_SOMTEmitC_somtEmitModuleEpilog,
			(somMethodPtr)somtEmitModuleEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitModuleEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitModuleEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitModuleEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMethodsProlog,
			&somId_somtEmitMethodsProlog,
			&somDI_SOMTEmitC_somtEmitMethodsProlog,
			(somMethodPtr)somtEmitMethodsProlog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMethodsProlog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMethodsProlog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMethodsProlog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMethods,
			&somId_somtEmitMethods,
			&somDI_SOMTEmitC_somtEmitMethods,
			(somMethodPtr)somtEmitMethods,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMethods
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMethods,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMethods
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMethodsEpilog,
			&somId_somtEmitMethodsEpilog,
			&somDI_SOMTEmitC_somtEmitMethodsEpilog,
			(somMethodPtr)somtEmitMethodsEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMethodsEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMethodsEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMethodsEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitMethod,
			&somId_somtEmitMethod,
			&somDI_SOMTEmitC_somtEmitMethod,
			(somMethodPtr)somtEmitMethod,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitMethod
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitMethod,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitMethod
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitEpilog,
			&somId_somtEmitEpilog,
			&somDI_SOMTEmitC_somtEmitEpilog,
			(somMethodPtr)somtEmitEpilog,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitEpilog
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitEpilog,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitEpilog
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanBases,
			&somId_somtScanBases,
			&somDI_SOMTEmitC_somtScanBases,
			(somMethodPtr)somtScanBases,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanBases
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanBases,
			(somMethodPtr)somAP_SOMTEmitC_somtScanBases
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanBaseIncludes,
			&somId_somtScanBaseIncludes,
			&somDI_SOMTEmitC_somtScanBaseIncludes,
			(somMethodPtr)somtScanBaseIncludes,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanBaseIncludes
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanBaseIncludes,
			(somMethodPtr)somAP_SOMTEmitC_somtScanBaseIncludes
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtCheckVisibility,
			&somId_somtCheckVisibility,
			&somDI_SOMTEmitC_somtCheckVisibility,
			(somMethodPtr)somtCheckVisibility,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtCheckVisibility
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtCheckVisibility,
			(somMethodPtr)somAP_SOMTEmitC_somtCheckVisibility
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtNew,
			&somId_somtNew,
			&somDI_SOMTEmitC_somtNew,
			(somMethodPtr)somtNew,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtNew
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtNew,
			(somMethodPtr)somAP_SOMTEmitC_somtNew
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtImplemented,
			&somId_somtImplemented,
			&somDI_SOMTEmitC_somtImplemented,
			(somMethodPtr)somtImplemented,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtImplemented
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtImplemented,
			(somMethodPtr)somAP_SOMTEmitC_somtImplemented
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtOverridden,
			&somId_somtOverridden,
			&somDI_SOMTEmitC_somtOverridden,
			(somMethodPtr)somtOverridden,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtOverridden
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtOverridden,
			(somMethodPtr)somAP_SOMTEmitC_somtOverridden
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtInherited,
			&somId_somtInherited,
			&somDI_SOMTEmitC_somtInherited,
			(somMethodPtr)somtInherited,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtInherited
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtInherited,
			(somMethodPtr)somAP_SOMTEmitC_somtInherited
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtAllVisible,
			&somId_somtAllVisible,
			&somDI_SOMTEmitC_somtAllVisible,
			(somMethodPtr)somtAllVisible,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtAllVisible
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtAllVisible,
			(somMethodPtr)somAP_SOMTEmitC_somtAllVisible
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtAll,
			&somId_somtAll,
			&somDI_SOMTEmitC_somtAll,
			(somMethodPtr)somtAll,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtAll
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtAll,
			(somMethodPtr)somAP_SOMTEmitC_somtAll
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtNewNoProc,
			&somId_somtNewNoProc,
			&somDI_SOMTEmitC_somtNewNoProc,
			(somMethodPtr)somtNewNoProc,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtNewNoProc
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtNewNoProc,
			(somMethodPtr)somAP_SOMTEmitC_somtNewNoProc
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtPrivOrPub,
			&somId_somtPrivOrPub,
			&somDI_SOMTEmitC_somtPrivOrPub,
			(somMethodPtr)somtPrivOrPub,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtPrivOrPub
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtPrivOrPub,
			(somMethodPtr)somAP_SOMTEmitC_somtPrivOrPub
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtNewProc,
			&somId_somtNewProc,
			&somDI_SOMTEmitC_somtNewProc,
			(somMethodPtr)somtNewProc,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtNewProc
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtNewProc,
			(somMethodPtr)somAP_SOMTEmitC_somtNewProc
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtLink,
			&somId_somtLink,
			&somDI_SOMTEmitC_somtLink,
			(somMethodPtr)somtLink,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtLink
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtLink,
			(somMethodPtr)somAP_SOMTEmitC_somtLink
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtVA,
			&somId_somtVA,
			&somDI_SOMTEmitC_somtVA,
			(somMethodPtr)somtVA,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtVA
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtVA,
			(somMethodPtr)somAP_SOMTEmitC_somtVA
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanMethods,
			&somId_somtScanMethods,
			&somDI_SOMTEmitC_somtScanMethods,
			(somMethodPtr)somtScanMethods,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanMethods
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanMethods,
			(somMethodPtr)somAP_SOMTEmitC_somtScanMethods
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanConstants,
			&somId_somtScanConstants,
			&somDI_SOMTEmitC_somtScanConstants,
			(somMethodPtr)somtScanConstants,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanConstants
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanConstants,
			(somMethodPtr)somAP_SOMTEmitC_somtScanConstants
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanTypedefs,
			&somId_somtScanTypedefs,
			&somDI_SOMTEmitC_somtScanTypedefs,
			(somMethodPtr)somtScanTypedefs,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanTypedefs
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanTypedefs,
			(somMethodPtr)somAP_SOMTEmitC_somtScanTypedefs
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanStructs,
			&somId_somtScanStructs,
			&somDI_SOMTEmitC_somtScanStructs,
			(somMethodPtr)somtScanStructs,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanStructs
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanStructs,
			(somMethodPtr)somAP_SOMTEmitC_somtScanStructs
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanUnions,
			&somId_somtScanUnions,
			&somDI_SOMTEmitC_somtScanUnions,
			(somMethodPtr)somtScanUnions,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanUnions
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanUnions,
			(somMethodPtr)somAP_SOMTEmitC_somtScanUnions
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanEnums,
			&somId_somtScanEnums,
			&somDI_SOMTEmitC_somtScanEnums,
			(somMethodPtr)somtScanEnums,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanEnums
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanEnums,
			(somMethodPtr)somAP_SOMTEmitC_somtScanEnums
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanData,
			&somId_somtScanData,
			&somDI_SOMTEmitC_somtScanData,
			(somMethodPtr)somtScanData,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanData
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanData,
			(somMethodPtr)somAP_SOMTEmitC_somtScanData
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanAttributes,
			&somId_somtScanAttributes,
			&somDI_SOMTEmitC_somtScanAttributes,
			(somMethodPtr)somtScanAttributes,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanAttributes
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanAttributes,
			(somMethodPtr)somAP_SOMTEmitC_somtScanAttributes
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanInterfaces,
			&somId_somtScanInterfaces,
			&somDI_SOMTEmitC_somtScanInterfaces,
			(somMethodPtr)somtScanInterfaces,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanInterfaces
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanInterfaces,
			(somMethodPtr)somAP_SOMTEmitC_somtScanInterfaces
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanModules,
			&somId_somtScanModules,
			&somDI_SOMTEmitC_somtScanModules,
			(somMethodPtr)somtScanModules,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanModules
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanModules,
			(somMethodPtr)somAP_SOMTEmitC_somtScanModules
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanPassthru,
			&somId_somtScanPassthru,
			&somDI_SOMTEmitC_somtScanPassthru,
			(somMethodPtr)somtScanPassthru,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanPassthru
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanPassthru,
			(somMethodPtr)somAP_SOMTEmitC_somtScanPassthru
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtEmitFullPassthru,
			&somId_somtEmitFullPassthru,
			&somDI_SOMTEmitC_somtEmitFullPassthru,
			(somMethodPtr)somtEmitFullPassthru,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtEmitFullPassthru
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtEmitFullPassthru,
			(somMethodPtr)somAP_SOMTEmitC_somtEmitFullPassthru
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanDataF,
			&somId_somtScanDataF,
			&somDI_SOMTEmitC_somtScanDataF,
			(somMethodPtr)somtScanDataF,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanDataF
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanDataF,
			(somMethodPtr)somAP_SOMTEmitC_somtScanDataF
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtScanBasesF,
			&somId_somtScanBasesF,
			&somDI_SOMTEmitC_somtScanBasesF,
			(somMethodPtr)somtScanBasesF,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtScanBasesF
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtScanBasesF,
			(somMethodPtr)somAP_SOMTEmitC_somtScanBasesF
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtGetGlobalModifierValue,
			&somId_somtGetGlobalModifierValue,
			&somDI_SOMTEmitC_somtGetGlobalModifierValue,
			(somMethodPtr)somtGetGlobalModifierValue,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtGetGlobalModifierValue
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtGetGlobalModifierValue,
			(somMethodPtr)somAP_SOMTEmitC_somtGetGlobalModifierValue
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtGetFirstGlobalDefinition,
			&somId_somtGetFirstGlobalDefinition,
			&somDI_SOMTEmitC_somtGetFirstGlobalDefinition,
			(somMethodPtr)somtGetFirstGlobalDefinition,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtGetFirstGlobalDefinition
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtGetFirstGlobalDefinition,
			(somMethodPtr)somAP_SOMTEmitC_somtGetFirstGlobalDefinition
#endif /* SOM_METHOD_STUBS */
		},
		{
			&SOMTEmitCClassData.somtGetNextGlobalDefinition,
			&somId_somtGetNextGlobalDefinition,
			&somDI_SOMTEmitC_somtGetNextGlobalDefinition,
			(somMethodPtr)somtGetNextGlobalDefinition,
#ifdef SOM_METHOD_STUBS
			(somMethodPtr)-1L,
			(somMethodPtr)(size_t)&somApRdInfo_SOMTEmitC_somtGetNextGlobalDefinition
#else /* SOM_METHOD_STUBS */
			(somMethodPtr)somRD_SOMTEmitC_somtGetNextGlobalDefinition,
			(somMethodPtr)somAP_SOMTEmitC_somtGetNextGlobalDefinition
#endif /* SOM_METHOD_STUBS */
		}
	};
	#ifndef static_somDS_SOMObject_somDumpSelfInt
		#define static_somDS_SOMObject_somDumpSelfInt
		static const char * somDS_SOMObject_somDumpSelfInt="SOMObject::somDumpSelfInt";
	#endif /* static_somDS_SOMObject_somDumpSelfInt */
	#ifndef static_somDI_SOMObject_somDumpSelfInt
		#define static_somDI_SOMObject_somDumpSelfInt
		static const somConstId somDI_SOMObject_somDumpSelfInt=&somDS_SOMObject_somDumpSelfInt;
	#endif /* static_somDI_SOMObject_somDumpSelfInt */
	#ifndef static_somDS_SOMObject_somDefaultInit
		#define static_somDS_SOMObject_somDefaultInit
		static const char * somDS_SOMObject_somDefaultInit="SOMObject::somDefaultInit";
	#endif /* static_somDS_SOMObject_somDefaultInit */
	#ifndef static_somDI_SOMObject_somDefaultInit
		#define static_somDI_SOMObject_somDefaultInit
		static const somConstId somDI_SOMObject_somDefaultInit=&somDS_SOMObject_somDefaultInit;
	#endif /* static_somDI_SOMObject_somDefaultInit */
static somOverrideMethod_t SOMTEmitCOM[2]={
		{
			&somDI_SOMObject_somDumpSelfInt,
			(somMethodPtr)somDumpSelfInt
		},
		{
			&somDI_SOMObject_somDefaultInit,
			(somMethodPtr)somDefaultInit
		}
	};
static somMethodPtr _somC_SOMTEmitC_parent_SOMObject_somDumpSelfInt_resolved; /* 1 */
static void SOMLINK _somC_SOMTEmitC_classInit(SOMClass SOMSTAR);
static somStaticClassInfo SOMTEmitCSCI={
#ifdef SOMSCIVERSION
		3,  /* layoutVersion */
#else /* SOMSCIVERSION */
		2,  /* layoutVersion */
#endif /* SOMSCIVERSION */
		93, /* numStaticMethod */
		2, /* numStaticOverrides */
		0, /* numNonInternalData */
		0, /* numProcMethods */
		0, /* numVarargsFuncs */
		SOMTEmitC_MajorVersion,
		SOMTEmitC_MinorVersion,
		sizeof(SOMTEmitCData), /* instanceDataSize */
		93, /* maxMethods */
		1, /* numParents */
		&somCN_SOMTEmitC,
		0,
		0, /* implicitParentMeta */
		somPCSOMTEmitC, /* parents */
		(somClassDataStructure *)(void *)&SOMTEmitCClassData,
		(somCClassDataStructure *)(void *)&SOMTEmitCCClassData,
		SOMTEmitCSM,
		SOMTEmitCOM,
		0, /* nitReferenceBase */
		0, /* nit */
		0, /* pmt no procedures*/
		0, /* vft */
		_somC_SOMTEmitC_classInit,
		(int)(size_t)&(((struct { octet _o; SOMTEmitCData _d; } *)0)->_d)
#ifdef SOMSCIVERSION
		,		-1L,(somId *)0, /* directInitClasses */
		0,(somMethods_t *)0, /* numMethods */
		0, /* protected data offset */
		0, /* SOMSCIVERSION */
		0,(somInheritedMethod_t *)0, /* inherited methods */
		93,(somId *)0, /* class data entries */
		0,(somMigratedMethod_t *)0, /* migrated methods */
		0,(somId *)0, /* initializers */
		0,(somDynamicSCI *)0, /* DTS */
#endif /* SOMSCIVERSION */
	};
SOMClass SOMSTAR SOMLINK SOMTEmitCNewClass(
	integer4 somtmajorVersion,integer4 somtminorVersion)
{
	if (!SOMObjectNewClass(
		SOMObject_MajorVersion,
		SOMObject_MinorVersion))
	{
		return NULL;
	}
	return somBuildClass(0x1,&SOMTEmitCSCI,
		somtmajorVersion,
		somtminorVersion);
}
static void SOMLINK _somC_SOMTEmitC_classInit(SOMClass SOMSTAR somSelf)
{
/* do parent resolves... */
	_somC_SOMTEmitC_parent_SOMObject_somDumpSelfInt_resolved=somParentNumResolve(SOMTEmitCCClassData.parentMtab,1,SOMObjectClassData.somDumpSelfInt);
/* call classinit if defined... */
	SOM_IgnoreWarning(somSelf);
}
struct SOMTEmitCClassDataStructure SOMDLINK SOMTEmitCClassData={
	/* classObject */ 0,
	/* _get_somtTemplate */ 0,
	/* _get_somtTargetFile */ 0,
	/* _set_somtTargetFile */ 0,
	/* _get_somtTargetClass */ 0,
	/* _set_somtTargetClass */ 0,
	/* _get_somtTargetModule */ 0,
	/* _set_somtTargetModule */ 0,
	/* _get_somtTargetType */ 0,
	/* _set_somtTargetType */ 0,
	/* somtGenerateSections */ 0,
	/* somtOpenSymbolsFile */ 0,
	/* somtSetPredefinedSymbols */ 0,
	/* somtFileSymbols */ 0,
	/* somtEmitProlog */ 0,
	/* somtEmitBaseIncludesProlog */ 0,
	/* somtEmitBaseIncludes */ 0,
	/* somtEmitBaseIncludesEpilog */ 0,
	/* somtEmitMetaInclude */ 0,
	/* somtEmitClass */ 0,
	/* somtEmitMeta */ 0,
	/* somtEmitBaseProlog */ 0,
	/* somtEmitBase */ 0,
	/* somtEmitBaseEpilog */ 0,
	/* somtEmitPassthruProlog */ 0,
	/* somtEmitPassthru */ 0,
	/* somtEmitPassthruEpilog */ 0,
	/* somtEmitRelease */ 0,
	/* somtEmitDataProlog */ 0,
	/* somtEmitData */ 0,
	/* somtEmitDataEpilog */ 0,
	/* somtEmitMethodsProlog */ 0,
	/* somtEmitMethods */ 0,
	/* somtEmitMethodsEpilog */ 0,
	/* somtEmitMethod */ 0,
	/* somtEmitEpilog */ 0,
	/* somtScanBases */ 0,
	/* somtScanConstants */ 0,
	/* somtCheckVisibility */ 0,
	/* somtNew */ 0,
	/* somtImplemented */ 0,
	/* somtOverridden */ 0,
	/* somtInherited */ 0,
	/* somtAllVisible */ 0,
	/* somtAll */ 0,
	/* somtNewNoProc */ 0,
	/* somtPrivOrPub */ 0,
	/* somtNewProc */ 0,
	/* somtLink */ 0,
	/* somtVA */ 0,
	/* somtScanMethods */ 0,
	/* somtScanData */ 0,
	/* somtScanPassthru */ 0,
	/* somtEmitFullPassthru */ 0,
	/* somtScanDataF */ 0,
	/* somtScanBasesF */ 0,
	/* _set_somtTemplate */ 0,
	/* _set_somtEmitterName */ 0,
	/* _get_somtEmitterName */ 0,
	/* somtEmitAttributeProlog */ 0,
	/* somtEmitAttribute */ 0,
	/* somtEmitAttributeEpilog */ 0,
	/* somtEmitConstantProlog */ 0,
	/* somtEmitConstant */ 0,
	/* somtEmitConstantEpilog */ 0,
	/* somtEmitTypedefProlog */ 0,
	/* somtEmitTypedef */ 0,
	/* somtEmitTypedefEpilog */ 0,
	/* somtEmitStructProlog */ 0,
	/* somtEmitStruct */ 0,
	/* somtEmitStructEpilog */ 0,
	/* somtEmitUnionProlog */ 0,
	/* somtEmitUnion */ 0,
	/* somtEmitUnionEpilog */ 0,
	/* somtEmitEnumProlog */ 0,
	/* somtEmitEnum */ 0,
	/* somtEmitEnumEpilog */ 0,
	/* somtEmitInterfaceProlog */ 0,
	/* somtEmitInterface */ 0,
	/* somtEmitInterfaceEpilog */ 0,
	/* somtEmitModuleProlog */ 0,
	/* somtEmitModule */ 0,
	/* somtEmitModuleEpilog */ 0,
	/* somtScanAttributes */ 0,
	/* somtScanTypedefs */ 0,
	/* somtScanStructs */ 0,
	/* somtScanUnions */ 0,
	/* somtScanEnums */ 0,
	/* somtScanInterfaces */ 0,
	/* somtScanModules */ 0,
	/* somtGetGlobalModifierValue */ 0,
	/* somtGetFirstGlobalDefinition */ 0,
	/* somtGetNextGlobalDefinition */ 0,
	/* somtScanBaseIncludes */ 0};
struct SOMTEmitCCClassDataStructure SOMDLINK SOMTEmitCCClassData;
#ifdef SOM_RESOLVE_DATA
	SOMEXTERN struct SOMTEmitCClassDataStructure * SOMLINK resolve_SOMTEmitCClassData(void)
	{ return &_SOMTEmitCClassData; }
#endif /* SOM_RESOLVE_DATA */
#ifdef SOM_RESOLVE_DATA
	SOMEXTERN struct SOMTEmitCCClassDataStructure * SOMLINK resolve_SOMTEmitCCClassData(void)
	{ return &_SOMTEmitCCClassData; }
#endif /* SOM_RESOLVE_DATA */
	#ifndef SOMTEmitC_parent_SOMObject_somInit
		#define SOMTEmitC_parent_SOMObject_somInit(somSelf)
	#endif /* SOMTEmitC_parent_SOMObject_somInit */
	#ifndef SOMTEmitC_parent_SOMObject_somUninit
		#define SOMTEmitC_parent_SOMObject_somUninit(somSelf)
	#endif /* SOMTEmitC_parent_SOMObject_somUninit */
	#define SOMTEmitC_parent_SOMObject_somFree(somSelf)   \
		((somTD_SOMObject_somFree)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somFree))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somGetClass(somSelf)   \
		((somTD_SOMObject_somGetClass)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somGetClass))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somGetClassName(somSelf)   \
		((somTD_SOMObject_somGetClassName)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somGetClassName))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somGetSize(somSelf)   \
		((somTD_SOMObject_somGetSize)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somGetSize))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somIsA(somSelf,aClassObj)   \
		((somTD_SOMObject_somIsA)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somIsA))\
					(somSelf,aClassObj)
	#define SOMTEmitC_parent_SOMObject_somIsInstanceOf(somSelf,aClassObj)   \
		((somTD_SOMObject_somIsInstanceOf)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somIsInstanceOf))\
					(somSelf,aClassObj)
	#define SOMTEmitC_parent_SOMObject_somRespondsTo(somSelf,mId)   \
		((somTD_SOMObject_somRespondsTo)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somRespondsTo))\
					(somSelf,mId)
	#define SOMTEmitC_parent_SOMObject_somDispatch(somSelf,retValue,methodId,ap)   \
		((somTD_SOMObject_somDispatch)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDispatch))\
					(somSelf,retValue,methodId,ap)
	#define SOMTEmitC_parent_SOMObject_somClassDispatch(somSelf,clsObj,retValue,methodId,ap)   \
		((somTD_SOMObject_somClassDispatch)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somClassDispatch))\
					(somSelf,clsObj,retValue,methodId,ap)
	#define SOMTEmitC_parent_SOMObject_somCastObj(somSelf,castedCls)   \
		((somTD_SOMObject_somCastObj)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somCastObj))\
					(somSelf,castedCls)
	#define SOMTEmitC_parent_SOMObject_somResetObj(somSelf)   \
		((somTD_SOMObject_somResetObj)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somResetObj))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somPrintSelf(somSelf)   \
		((somTD_SOMObject_somPrintSelf)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somPrintSelf))\
					(somSelf)
	#define SOMTEmitC_parent_SOMObject_somDumpSelf(somSelf,level)   \
		((somTD_SOMObject_somDumpSelf)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDumpSelf))\
					(somSelf,level)
	#define SOMTEmitC_parent_SOMObject_somDumpSelfInt(somSelf,level)   \
		((somTD_SOMObject_somDumpSelfInt)\
			_somC_SOMTEmitC_parent_SOMObject_somDumpSelfInt_resolved)\
					(somSelf,level)
#define SOMTEmitC_Init_SOMObject_somDefaultInit(somSelf,ctrl)\
if (myMask[0]&1) {\
ctrl->info=(somInitInfo *)(ctrl->infoSize+(char *)ctrl->info); \
}
	#define SOMTEmitC_parent_SOMObject_somDefaultCopyInit(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultCopyInit)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultCopyInit))\
					(somSelf,ctrl,fromObj)
	#define SOMTEmitC_parent_SOMObject_somDefaultConstCopyInit(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultConstCopyInit)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultConstCopyInit))\
					(somSelf,ctrl,fromObj)
	#define SOMTEmitC_parent_SOMObject_somDefaultVCopyInit(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultVCopyInit)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultVCopyInit))\
					(somSelf,ctrl,fromObj)
	#define SOMTEmitC_parent_SOMObject_somDefaultConstVCopyInit(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultConstVCopyInit)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultConstVCopyInit))\
					(somSelf,ctrl,fromObj)
#define SOMTEmitC_Assign_SOMObject_somDefaultAssign(somSelf,ctrl,fromObj)\
if (myMask[0]&1) {\
ctrl->info=(somAssignInfo *)(ctrl->infoSize+(char *)ctrl->info); \
}
#define SOMTEmitC_Assign_SOMObject_somDefaultConstAssign(somSelf,ctrl,fromObj)\
if (myMask[0]&1) {\
ctrl->info=(somAssignInfo *)(ctrl->infoSize+(char *)ctrl->info); \
}
	#define SOMTEmitC_parent_SOMObject_somDefaultVAssign(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultVAssign)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultVAssign))\
					(somSelf,ctrl,fromObj)
	#define SOMTEmitC_parent_SOMObject_somDefaultConstVAssign(somSelf,ctrl,fromObj)   \
		((somTD_SOMObject_somDefaultConstVAssign)\
			somParentNumResolve(SOMTEmitCCClassData.parentMtab,\
				1,SOMObjectClassData.somDefaultConstVAssign))\
					(somSelf,ctrl,fromObj)
#define SOMTEmitC_DeInit_SOMObject_somDestruct(somSelf,doFree,ctrl)\
if (myMask[0]&1) {\
ctrl->info=(somDestructInfo *)(ctrl->infoSize+(char *)ctrl->info); \
}
/* special macros for somDefaultInit */
#ifndef SOMTEmitC_BeginInitializer_somDefaultInit
#define SOMTEmitC_BeginInitializer_somDefaultInit \
if (!ctrl) { \
ctrl=&globalCtrl; \
memcpy(ctrl,&(((somParentMtabStructPtr)(void *)SOMTEmitCCClassData.parentMtab)->initCtrl),sizeof(somInitCtrl)); \
} \
somThis=(SOMTEmitCData*)(((char *)somSelf)+ctrl->info->dataOffset); \
myMask=ctrl->mask; \
ctrl->mask+=1; \
ctrl->info=(somInitInfo *)(ctrl->infoSize+(char*)(ctrl->info));
#endif /* SOMTEmitC_BeginInitializer_somDefaultInit */
	#endif /* SOMTEmitC_Class_Source */
#endif /* SOM_Module_scemit_Header_ih */
