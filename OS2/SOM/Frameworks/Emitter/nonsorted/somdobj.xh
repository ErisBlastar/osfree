/* generated from somdobj.idl */
/* internal conditional is SOM_Module_somdobj_Source */
#ifndef SOM_Module_somdobj_Header_xh
	#define SOM_Module_somdobj_Header_xh 1
	#include <som.xh>
	#include <somobj.xh>
	#include <unotypes.xh>
	#include <containd.xh>
	#include <somdtype.xh>
	class ImplementationDef;
	#ifndef _IDL_SEQUENCE_ImplementationDef_defined
		#define _IDL_SEQUENCE_ImplementationDef_defined
		SOM_SEQUENCE_TYPEDEF_NAME(ImplementationDef * ,sequence(ImplementationDef));
	#endif /* _IDL_SEQUENCE_ImplementationDef_defined */
	class InterfaceDef;
	#ifndef _IDL_SEQUENCE_InterfaceDef_defined
		#define _IDL_SEQUENCE_InterfaceDef_defined
		SOM_SEQUENCE_TYPEDEF_NAME(InterfaceDef * ,sequence(InterfaceDef));
	#endif /* _IDL_SEQUENCE_InterfaceDef_defined */
	class NVList;
	#ifndef _IDL_SEQUENCE_NVList_defined
		#define _IDL_SEQUENCE_NVList_defined
		SOM_SEQUENCE_TYPEDEF_NAME(NVList * ,sequence(NVList));
	#endif /* _IDL_SEQUENCE_NVList_defined */
	class Request;
	#ifndef _IDL_SEQUENCE_Request_defined
		#define _IDL_SEQUENCE_Request_defined
		SOM_SEQUENCE_TYPEDEF_NAME(Request * ,sequence(Request));
	#endif /* _IDL_SEQUENCE_Request_defined */
	class Context;
	#ifndef _IDL_SEQUENCE_Context_defined
		#define _IDL_SEQUENCE_Context_defined
		SOM_SEQUENCE_TYPEDEF_NAME(Context * ,sequence(Context));
	#endif /* _IDL_SEQUENCE_Context_defined */
	class SOMDObject;
	#ifndef _IDL_SEQUENCE_SOMDObject_defined
		#define _IDL_SEQUENCE_SOMDObject_defined
		SOM_SEQUENCE_TYPEDEF_NAME(SOMDObject * ,sequence(SOMDObject));
	#endif /* _IDL_SEQUENCE_SOMDObject_defined */
#ifndef SOMDObject_API
#define SOMDObject_API
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_is_nil)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_is_nil,system)
		typedef somTP_SOMDObject_is_nil *somTD_SOMDObject_is_nil;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_is_nil)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_is_SOM_ref)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_is_SOM_ref,system)
		typedef somTP_SOMDObject_is_SOM_ref *somTD_SOMDObject_is_SOM_ref;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_is_SOM_ref)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_is_constant)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_is_constant,system)
		typedef somTP_SOMDObject_is_constant *somTD_SOMDObject_is_constant;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_is_constant)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ImplementationDef * (somTP_SOMDObject_get_implementation)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_get_implementation,system)
		typedef somTP_SOMDObject_get_implementation *somTD_SOMDObject_get_implementation;
	#else /* __IBMC__ */
		typedef ImplementationDef * (SOMLINK * somTD_SOMDObject_get_implementation)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef InterfaceDef * (somTP_SOMDObject_get_interface)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_get_interface,system)
		typedef somTP_SOMDObject_get_interface *somTD_SOMDObject_get_interface;
	#else /* __IBMC__ */
		typedef InterfaceDef * (SOMLINK * somTD_SOMDObject_get_interface)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_is_proxy)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_is_proxy,system)
		typedef somTP_SOMDObject_is_proxy *somTD_SOMDObject_is_proxy;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_is_proxy)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_duplicate)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_duplicate,system)
		typedef somTP_SOMDObject_duplicate *somTD_SOMDObject_duplicate;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_duplicate)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_release)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject_release,system)
		typedef somTP_SOMDObject_release *somTD_SOMDObject_release;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_release)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_SOMDObject_create_request)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ Context * ctx,
			/* in */ Identifier operation,
			/* in */ NVList * arg_list,
			/* inout */ NamedValue *result,
			/* out */ Request * *request,
			/* in */ Flags req_flags);
		#pragma linkage(somTP_SOMDObject_create_request,system)
		typedef somTP_SOMDObject_create_request *somTD_SOMDObject_create_request;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_SOMDObject_create_request)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ Context * ctx,
			/* in */ Identifier operation,
			/* in */ NVList * arg_list,
			/* inout */ NamedValue *result,
			/* out */ Request * *request,
			/* in */ Flags req_flags);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef ORBStatus (somTP_SOMDObject_create_request_args)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ Identifier operation,
			/* out */ NVList * *arg_list,
			/* out */ NamedValue *result);
		#pragma linkage(somTP_SOMDObject_create_request_args,system)
		typedef somTP_SOMDObject_create_request_args *somTD_SOMDObject_create_request_args;
	#else /* __IBMC__ */
		typedef ORBStatus (SOMLINK * somTD_SOMDObject_create_request_args)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ Identifier operation,
			/* out */ NVList * *arg_list,
			/* out */ NamedValue *result);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_SOMDObject__set_type_id
		#error somTD_SOMDObject__set_type_id already defined
	#else /* somTD_SOMDObject__set_type_id */
		#define somTD_SOMDObject__set_type_id somTD_SOMDObject_somC_set_type_id
	#endif /* somTD_SOMDObject__set_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_SOMDObject__set_type_id
		#error somTP_SOMDObject__set_type_id already defined
	#else /* somTP_SOMDObject__set_type_id */
		#define somTP_SOMDObject__set_type_id somTP_SOMDObject_somC_set_type_id
	#endif /* somTP_SOMDObject__set_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_SOMDObject__set_type_id)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ string type_id);
		#pragma linkage(somTP_SOMDObject__set_type_id,system)
		typedef somTP_SOMDObject__set_type_id *somTD_SOMDObject__set_type_id;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_SOMDObject__set_type_id
		#error somTD_SOMDObject__set_type_id already defined
	#else /* somTD_SOMDObject__set_type_id */
		#define somTD_SOMDObject__set_type_id somTD_SOMDObject_somC_set_type_id
	#endif /* somTD_SOMDObject__set_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_SOMDObject__set_type_id)(
			SOMDObject * somSelf,
			Environment *ev,
			/* in */ string type_id);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_SOMDObject__get_type_id
		#error somTD_SOMDObject__get_type_id already defined
	#else /* somTD_SOMDObject__get_type_id */
		#define somTD_SOMDObject__get_type_id somTD_SOMDObject_somC_get_type_id
	#endif /* somTD_SOMDObject__get_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_SOMDObject__get_type_id
		#error somTP_SOMDObject__get_type_id already defined
	#else /* somTP_SOMDObject__get_type_id */
		#define somTP_SOMDObject__get_type_id somTP_SOMDObject_somC_get_type_id
	#endif /* somTP_SOMDObject__get_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (somTP_SOMDObject__get_type_id)(
			SOMDObject * somSelf,
			Environment *ev);
		#pragma linkage(somTP_SOMDObject__get_type_id,system)
		typedef somTP_SOMDObject__get_type_id *somTD_SOMDObject__get_type_id;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_SOMDObject__get_type_id
		#error somTD_SOMDObject__get_type_id already defined
	#else /* somTD_SOMDObject__get_type_id */
		#define somTD_SOMDObject__get_type_id somTD_SOMDObject_somC_get_type_id
	#endif /* somTD_SOMDObject__get_type_id */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (SOMLINK * somTD_SOMDObject__get_type_id)(
			SOMDObject * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somInit)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somInit,system)
		typedef somTP_SOMDObject_somInit *somTD_SOMDObject_somInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somInit)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somUninit)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somUninit,system)
		typedef somTP_SOMDObject_somUninit *somTD_SOMDObject_somUninit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somUninit)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somFree)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somFree,system)
		typedef somTP_SOMDObject_somFree *somTD_SOMDObject_somFree;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somFree)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMClass * (somTP_SOMDObject_somGetClass)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somGetClass,system)
		typedef somTP_SOMDObject_somGetClass *somTD_SOMDObject_somGetClass;
	#else /* __IBMC__ */
		typedef SOMClass * (SOMLINK * somTD_SOMDObject_somGetClass)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef string (somTP_SOMDObject_somGetClassName)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somGetClassName,system)
		typedef somTP_SOMDObject_somGetClassName *somTD_SOMDObject_somGetClassName;
	#else /* __IBMC__ */
		typedef string (SOMLINK * somTD_SOMDObject_somGetClassName)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef long (somTP_SOMDObject_somGetSize)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somGetSize,system)
		typedef somTP_SOMDObject_somGetSize *somTD_SOMDObject_somGetSize;
	#else /* __IBMC__ */
		typedef long (SOMLINK * somTD_SOMDObject_somGetSize)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somIsA)(
			SOMDObject * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_SOMDObject_somIsA,system)
		typedef somTP_SOMDObject_somIsA *somTD_SOMDObject_somIsA;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somIsA)(
			SOMDObject * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somIsInstanceOf)(
			SOMDObject * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_SOMDObject_somIsInstanceOf,system)
		typedef somTP_SOMDObject_somIsInstanceOf *somTD_SOMDObject_somIsInstanceOf;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somIsInstanceOf)(
			SOMDObject * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somRespondsTo)(
			SOMDObject * somSelf,
			/* in */ somId mId);
		#pragma linkage(somTP_SOMDObject_somRespondsTo,system)
		typedef somTP_SOMDObject_somRespondsTo *somTD_SOMDObject_somRespondsTo;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somRespondsTo)(
			SOMDObject * somSelf,
			/* in */ somId mId);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somDispatch)(
			SOMDObject * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_SOMDObject_somDispatch,system)
		typedef somTP_SOMDObject_somDispatch *somTD_SOMDObject_somDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somDispatch)(
			SOMDObject * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somClassDispatch)(
			SOMDObject * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_SOMDObject_somClassDispatch,system)
		typedef somTP_SOMDObject_somClassDispatch *somTD_SOMDObject_somClassDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somClassDispatch)(
			SOMDObject * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somCastObj)(
			SOMDObject * somSelf,
			/* in */ SOMClass * castedCls);
		#pragma linkage(somTP_SOMDObject_somCastObj,system)
		typedef somTP_SOMDObject_somCastObj *somTD_SOMDObject_somCastObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somCastObj)(
			SOMDObject * somSelf,
			/* in */ SOMClass * castedCls);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_SOMDObject_somResetObj)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somResetObj,system)
		typedef somTP_SOMDObject_somResetObj *somTD_SOMDObject_somResetObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_SOMDObject_somResetObj)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_somPrintSelf)(
			SOMDObject * somSelf);
		#pragma linkage(somTP_SOMDObject_somPrintSelf,system)
		typedef somTP_SOMDObject_somPrintSelf *somTD_SOMDObject_somPrintSelf;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_somPrintSelf)(
			SOMDObject * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDumpSelf)(
			SOMDObject * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_SOMDObject_somDumpSelf,system)
		typedef somTP_SOMDObject_somDumpSelf *somTD_SOMDObject_somDumpSelf;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDumpSelf)(
			SOMDObject * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDumpSelfInt)(
			SOMDObject * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_SOMDObject_somDumpSelfInt,system)
		typedef somTP_SOMDObject_somDumpSelfInt *somTD_SOMDObject_somDumpSelfInt;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDumpSelfInt)(
			SOMDObject * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDefaultInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl);
		#pragma linkage(somTP_SOMDObject_somDefaultInit,system)
		typedef somTP_SOMDObject_somDefaultInit *somTD_SOMDObject_somDefaultInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDefaultInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDefaultCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultCopyInit,system)
		typedef somTP_SOMDObject_somDefaultCopyInit *somTD_SOMDObject_somDefaultCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDefaultCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDefaultConstCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultConstCopyInit,system)
		typedef somTP_SOMDObject_somDefaultConstCopyInit *somTD_SOMDObject_somDefaultConstCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDefaultConstCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDefaultVCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultVCopyInit,system)
		typedef somTP_SOMDObject_somDefaultVCopyInit *somTD_SOMDObject_somDefaultVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDefaultVCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDefaultConstVCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultConstVCopyInit,system)
		typedef somTP_SOMDObject_somDefaultConstVCopyInit *somTD_SOMDObject_somDefaultConstVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDefaultConstVCopyInit)(
			SOMDObject * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_somDefaultAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultAssign,system)
		typedef somTP_SOMDObject_somDefaultAssign *somTD_SOMDObject_somDefaultAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_somDefaultAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_somDefaultConstAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultConstAssign,system)
		typedef somTP_SOMDObject_somDefaultConstAssign *somTD_SOMDObject_somDefaultConstAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_somDefaultConstAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_somDefaultVAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultVAssign,system)
		typedef somTP_SOMDObject_somDefaultVAssign *somTD_SOMDObject_somDefaultVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_somDefaultVAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_SOMDObject_somDefaultConstVAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_SOMDObject_somDefaultConstVAssign,system)
		typedef somTP_SOMDObject_somDefaultConstVAssign *somTD_SOMDObject_somDefaultConstVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_SOMDObject_somDefaultConstVAssign)(
			SOMDObject * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_SOMDObject_somDestruct)(
			SOMDObject * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
		#pragma linkage(somTP_SOMDObject_somDestruct,system)
		typedef somTP_SOMDObject_somDestruct *somTD_SOMDObject_somDestruct;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_SOMDObject_somDestruct)(
			SOMDObject * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
	#ifndef SOMDObject_MajorVersion
		#define SOMDObject_MajorVersion   2
	#endif /* SOMDObject_MajorVersion */
	#ifndef SOMDObject_MinorVersion
		#define SOMDObject_MinorVersion   1
	#endif /* SOMDObject_MinorVersion */
	typedef struct SOMDObjectClassDataStructure
	{
		SOMClass * classObject;
		somMToken get_implementation;
		somMToken get_interface;
		somMToken get_c_proxy;
		somTD_SOMDObject_is_nil is_nil;
		somMToken is_SOM_ref;
		somMToken is_constant;
		somMToken is_proxy;
		somMToken duplicate;
		somMToken release;
		somMToken create_request;
		somMToken create_request_args;
		somMToken _get_somd_tag;
		somMToken _get_somd_flags;
		somMToken _set_somd_flags;
		somMToken _get_somd_impl;
		somMToken _set_somd_impl;
		somMToken _get_somd_rid;
		somMToken _set_somd_rid;
		somMToken _get_somd_id;
		somMToken _set_somd_id;
		somMToken somdMarshal;
		somMToken set_to_nil;
		somMToken _get_type_id;
		somMToken _set_type_id;
	} SOMDObjectClassDataStructure;
	typedef struct SOMDObjectCClassDataStructure
	{
		somMethodTabs parentMtab;
		somDToken instanceDataToken;
	} SOMDObjectCClassDataStructure;
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_somdobj_Source) || defined(SOMDObject_Class_Source)
			SOMEXTERN struct SOMDObjectClassDataStructure _SOMDObjectClassData;
			#ifndef SOMDObjectClassData
				#define SOMDObjectClassData    _SOMDObjectClassData
			#endif /* SOMDObjectClassData */
		#else
			SOMEXTERN struct SOMDObjectClassDataStructure * SOMLINK resolve_SOMDObjectClassData(void);
			#ifndef SOMDObjectClassData
				#define SOMDObjectClassData    (*(resolve_SOMDObjectClassData()))
			#endif /* SOMDObjectClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_somdobj_Source) || defined(SOMDObject_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
		struct SOMDObjectClassDataStructure SOMDLINK SOMDObjectClassData;
	#endif /* SOM_RESOLVE_DATA */
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_somdobj_Source) || defined(SOMDObject_Class_Source)
			SOMEXTERN struct SOMDObjectCClassDataStructure _SOMDObjectCClassData;
			#ifndef SOMDObjectCClassData
				#define SOMDObjectCClassData    _SOMDObjectCClassData
			#endif /* SOMDObjectCClassData */
		#else
			SOMEXTERN struct SOMDObjectCClassDataStructure * SOMLINK resolve_SOMDObjectCClassData(void);
			#ifndef SOMDObjectCClassData
				#define SOMDObjectCClassData    (*(resolve_SOMDObjectCClassData()))
			#endif /* SOMDObjectCClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_somdobj_Source) || defined(SOMDObject_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
		struct SOMDObjectCClassDataStructure SOMDLINK SOMDObjectCClassData;
	#endif /* SOM_RESOLVE_DATA */
	extern "C" {
	extern 
	#if defined(SOM_Module_somdobj_Source) || defined(SOMDObject_Class_Source)
		#ifdef SOMDLLEXPORT
			SOMDLLEXPORT
		#endif /* SOMDLLEXPORT */
	#else /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
		#ifdef SOMDLLIMPORT
			SOMDLLIMPORT
		#endif /* SOMDLLIMPORT */
	#endif /* SOM_Module_somdobj_Source || SOMDObject_Class_Source */
	SOMClass * SOMLINK SOMDObjectNewClass
			(integer4 somtmajorVersion,integer4 somtminorVersion);
	}
	#define _SOMCLASS_SOMDObject (SOMDObjectClassData.classObject)
	#ifndef SOMGD_SOMDObject
		#if (defined(_SOMDObject) || defined(__SOMDObject))
			#undef _SOMDObject
			#undef __SOMDObject
			#define SOMGD_SOMDObject 1
		#else
			#define _SOMDObject _SOMCLASS_SOMDObject
		#endif /* _SOMDObject */
	#endif /* SOMGD_SOMDObject */
	#define SOMDObject_classObj _SOMCLASS_SOMDObject
	#define _SOMMTOKEN_SOMDObject(method) ((somMToken)(SOMDObjectClassData.method))
#endif /* SOMDObject_API */

	class SOMDObject : public SOMObject
	{
	protected:
		SOMDObject(somMethodTab & mtab)
			: SOMObject(mtab)
		{}
	public:

		inline boolean is_nil(
			Environment *ev)
		{
			return SOMDObjectClassData.is_nil
					((SOMDObject *)(void *)this,ev);
		};

		inline boolean is_SOM_ref(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,is_SOM_ref)
					((SOMDObject *)(void *)this,ev);
		};

		inline boolean is_constant(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,is_constant)
					((SOMDObject *)(void *)this,ev);
		};

		inline ImplementationDef * get_implementation(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,get_implementation)
					((SOMDObject *)(void *)this,ev);
		};

		inline InterfaceDef * get_interface(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,get_interface)
					((SOMDObject *)(void *)this,ev);
		};

		inline boolean is_proxy(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,is_proxy)
					((SOMDObject *)(void *)this,ev);
		};

		inline SOMObject * duplicate(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,duplicate)
					((SOMDObject *)(void *)this,ev);
		};

		inline void release(
			Environment *ev)
		{
			SOM_Resolve((void *)this,SOMDObject,release)
					((SOMDObject *)(void *)this,ev);
		};

		inline ORBStatus create_request(
			Environment *ev,
			/* in */ Context * ctx,
			/* in */ Identifier operation,
			/* in */ NVList * arg_list,
			/* inout */ NamedValue *result,
			/* out */ Request * *request,
			/* in */ Flags req_flags)
		{
			return SOM_Resolve((void *)this,SOMDObject,create_request)
					((SOMDObject *)(void *)this,ev,ctx,operation,arg_list,result,request,req_flags);
		};

		inline ORBStatus create_request_args(
			Environment *ev,
			/* in */ Identifier operation,
			/* out */ NVList * *arg_list,
			/* out */ NamedValue *result)
		{
			return SOM_Resolve((void *)this,SOMDObject,create_request_args)
					((SOMDObject *)(void *)this,ev,operation,arg_list,result);
		};

		inline void _set_type_id(
			Environment *ev,
			/* in */ string type_id)
		{
			SOM_Resolve((void *)this,SOMDObject,_set_type_id)
					((SOMDObject *)(void *)this,ev,type_id);
		};

		inline string _get_type_id(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,SOMDObject,_get_type_id)
					((SOMDObject *)(void *)this,ev);
		};

		inline void operator delete(void *x)
			{ ((SOMObject *)x)->somFree(); };

		inline void * operator new(size_t /* len */)
		{ if (!SOMDObjectClassData.classObject)
			{ SOMDObjectNewClass(SOMDObject_MajorVersion,SOMDObject_MinorVersion); }
			return (void *)SOM_Resolve((SOMObject *)(void *)SOMDObjectClassData.classObject,
				SOMClass,somNewNoInit)((SOMClass *)(void *)SOMDObjectClassData.classObject);
		};
		SOMDObject()
			: SOMObject(*(SOMDObjectCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==SOMDObjectCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultInit(0); }
		SOMDObject(SOMDObject *fromObj)
			: SOMObject(*(SOMDObjectCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==SOMDObjectCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
	};
#endif /* SOM_Module_somdobj_Header_xh */
