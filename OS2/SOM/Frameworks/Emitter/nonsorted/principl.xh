/* generated from principl.idl */
/* internal conditional is SOM_Module_principl_Source */
#ifndef SOM_Module_principl_Header_xh
	#define SOM_Module_principl_Header_xh 1
	#include <som.xh>
	#include <somobj.xh>
	class Principal;
	#ifndef _IDL_SEQUENCE_Principal_defined
		#define _IDL_SEQUENCE_Principal_defined
		SOM_SEQUENCE_TYPEDEF_NAME(Principal * ,sequence(Principal));
	#endif /* _IDL_SEQUENCE_Principal_defined */
#ifndef Principal_API
#define Principal_API
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__set_userName
		#error somTD_Principal__set_userName already defined
	#else /* somTD_Principal__set_userName */
		#define somTD_Principal__set_userName somTD_Principal_somC_set_userName
	#endif /* somTD_Principal__set_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_Principal__set_userName
		#error somTP_Principal__set_userName already defined
	#else /* somTP_Principal__set_userName */
		#define somTP_Principal__set_userName somTP_Principal_somC_set_userName
	#endif /* somTP_Principal__set_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_Principal__set_userName)(
			Principal * somSelf,
			Environment *ev,
			/* in */ string userName);
		#pragma linkage(somTP_Principal__set_userName,system)
		typedef somTP_Principal__set_userName *somTD_Principal__set_userName;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__set_userName
		#error somTD_Principal__set_userName already defined
	#else /* somTD_Principal__set_userName */
		#define somTD_Principal__set_userName somTD_Principal_somC_set_userName
	#endif /* somTD_Principal__set_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_Principal__set_userName)(
			Principal * somSelf,
			Environment *ev,
			/* in */ string userName);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__get_userName
		#error somTD_Principal__get_userName already defined
	#else /* somTD_Principal__get_userName */
		#define somTD_Principal__get_userName somTD_Principal_somC_get_userName
	#endif /* somTD_Principal__get_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_Principal__get_userName
		#error somTP_Principal__get_userName already defined
	#else /* somTP_Principal__get_userName */
		#define somTP_Principal__get_userName somTP_Principal_somC_get_userName
	#endif /* somTP_Principal__get_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (somTP_Principal__get_userName)(
			Principal * somSelf,
			Environment *ev);
		#pragma linkage(somTP_Principal__get_userName,system)
		typedef somTP_Principal__get_userName *somTD_Principal__get_userName;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__get_userName
		#error somTD_Principal__get_userName already defined
	#else /* somTD_Principal__get_userName */
		#define somTD_Principal__get_userName somTD_Principal_somC_get_userName
	#endif /* somTD_Principal__get_userName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (SOMLINK * somTD_Principal__get_userName)(
			Principal * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__set_hostName
		#error somTD_Principal__set_hostName already defined
	#else /* somTD_Principal__set_hostName */
		#define somTD_Principal__set_hostName somTD_Principal_somC_set_hostName
	#endif /* somTD_Principal__set_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_Principal__set_hostName
		#error somTP_Principal__set_hostName already defined
	#else /* somTP_Principal__set_hostName */
		#define somTP_Principal__set_hostName somTP_Principal_somC_set_hostName
	#endif /* somTP_Principal__set_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (somTP_Principal__set_hostName)(
			Principal * somSelf,
			Environment *ev,
			/* in */ string hostName);
		#pragma linkage(somTP_Principal__set_hostName,system)
		typedef somTP_Principal__set_hostName *somTD_Principal__set_hostName;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__set_hostName
		#error somTD_Principal__set_hostName already defined
	#else /* somTD_Principal__set_hostName */
		#define somTD_Principal__set_hostName somTD_Principal_somC_set_hostName
	#endif /* somTD_Principal__set_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef void (SOMLINK * somTD_Principal__set_hostName)(
			Principal * somSelf,
			Environment *ev,
			/* in */ string hostName);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__get_hostName
		#error somTD_Principal__get_hostName already defined
	#else /* somTD_Principal__get_hostName */
		#define somTD_Principal__get_hostName somTD_Principal_somC_get_hostName
	#endif /* somTD_Principal__get_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTP_Principal__get_hostName
		#error somTP_Principal__get_hostName already defined
	#else /* somTP_Principal__get_hostName */
		#define somTP_Principal__get_hostName somTP_Principal_somC_get_hostName
	#endif /* somTP_Principal__get_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (somTP_Principal__get_hostName)(
			Principal * somSelf,
			Environment *ev);
		#pragma linkage(somTP_Principal__get_hostName,system)
		typedef somTP_Principal__get_hostName *somTD_Principal__get_hostName;
	#else /* __IBMC__ */
#ifdef SOM_AVOID_DOUBLE_UNDERSCORES
	#ifdef somTD_Principal__get_hostName
		#error somTD_Principal__get_hostName already defined
	#else /* somTD_Principal__get_hostName */
		#define somTD_Principal__get_hostName somTD_Principal_somC_get_hostName
	#endif /* somTD_Principal__get_hostName */
#endif /* SOM_AVOID_DOUBLE_UNDERSCORES */
		typedef string (SOMLINK * somTD_Principal__get_hostName)(
			Principal * somSelf,
			Environment *ev);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somInit)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somInit,system)
		typedef somTP_Principal_somInit *somTD_Principal_somInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somInit)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somUninit)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somUninit,system)
		typedef somTP_Principal_somUninit *somTD_Principal_somUninit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somUninit)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somFree)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somFree,system)
		typedef somTP_Principal_somFree *somTD_Principal_somFree;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somFree)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMClass * (somTP_Principal_somGetClass)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somGetClass,system)
		typedef somTP_Principal_somGetClass *somTD_Principal_somGetClass;
	#else /* __IBMC__ */
		typedef SOMClass * (SOMLINK * somTD_Principal_somGetClass)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef string (somTP_Principal_somGetClassName)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somGetClassName,system)
		typedef somTP_Principal_somGetClassName *somTD_Principal_somGetClassName;
	#else /* __IBMC__ */
		typedef string (SOMLINK * somTD_Principal_somGetClassName)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef long (somTP_Principal_somGetSize)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somGetSize,system)
		typedef somTP_Principal_somGetSize *somTD_Principal_somGetSize;
	#else /* __IBMC__ */
		typedef long (SOMLINK * somTD_Principal_somGetSize)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somIsA)(
			Principal * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_Principal_somIsA,system)
		typedef somTP_Principal_somIsA *somTD_Principal_somIsA;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somIsA)(
			Principal * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somIsInstanceOf)(
			Principal * somSelf,
			/* in */ SOMClass * aClassObj);
		#pragma linkage(somTP_Principal_somIsInstanceOf,system)
		typedef somTP_Principal_somIsInstanceOf *somTD_Principal_somIsInstanceOf;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somIsInstanceOf)(
			Principal * somSelf,
			/* in */ SOMClass * aClassObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somRespondsTo)(
			Principal * somSelf,
			/* in */ somId mId);
		#pragma linkage(somTP_Principal_somRespondsTo,system)
		typedef somTP_Principal_somRespondsTo *somTD_Principal_somRespondsTo;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somRespondsTo)(
			Principal * somSelf,
			/* in */ somId mId);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somDispatch)(
			Principal * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_Principal_somDispatch,system)
		typedef somTP_Principal_somDispatch *somTD_Principal_somDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somDispatch)(
			Principal * somSelf,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somClassDispatch)(
			Principal * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
		#pragma linkage(somTP_Principal_somClassDispatch,system)
		typedef somTP_Principal_somClassDispatch *somTD_Principal_somClassDispatch;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somClassDispatch)(
			Principal * somSelf,
			/* in */ SOMClass * clsObj,
			/* out */ somToken *retValue,
			/* in */ somId methodId,
			/* in */ va_list ap);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somCastObj)(
			Principal * somSelf,
			/* in */ SOMClass * castedCls);
		#pragma linkage(somTP_Principal_somCastObj,system)
		typedef somTP_Principal_somCastObj *somTD_Principal_somCastObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somCastObj)(
			Principal * somSelf,
			/* in */ SOMClass * castedCls);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef boolean (somTP_Principal_somResetObj)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somResetObj,system)
		typedef somTP_Principal_somResetObj *somTD_Principal_somResetObj;
	#else /* __IBMC__ */
		typedef boolean (SOMLINK * somTD_Principal_somResetObj)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Principal_somPrintSelf)(
			Principal * somSelf);
		#pragma linkage(somTP_Principal_somPrintSelf,system)
		typedef somTP_Principal_somPrintSelf *somTD_Principal_somPrintSelf;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Principal_somPrintSelf)(
			Principal * somSelf);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDumpSelf)(
			Principal * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_Principal_somDumpSelf,system)
		typedef somTP_Principal_somDumpSelf *somTD_Principal_somDumpSelf;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDumpSelf)(
			Principal * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDumpSelfInt)(
			Principal * somSelf,
			/* in */ long level);
		#pragma linkage(somTP_Principal_somDumpSelfInt,system)
		typedef somTP_Principal_somDumpSelfInt *somTD_Principal_somDumpSelfInt;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDumpSelfInt)(
			Principal * somSelf,
			/* in */ long level);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDefaultInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl);
		#pragma linkage(somTP_Principal_somDefaultInit,system)
		typedef somTP_Principal_somDefaultInit *somTD_Principal_somDefaultInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDefaultInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDefaultCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultCopyInit,system)
		typedef somTP_Principal_somDefaultCopyInit *somTD_Principal_somDefaultCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDefaultCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDefaultConstCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultConstCopyInit,system)
		typedef somTP_Principal_somDefaultConstCopyInit *somTD_Principal_somDefaultConstCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDefaultConstCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDefaultVCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultVCopyInit,system)
		typedef somTP_Principal_somDefaultVCopyInit *somTD_Principal_somDefaultVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDefaultVCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDefaultConstVCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultConstVCopyInit,system)
		typedef somTP_Principal_somDefaultConstVCopyInit *somTD_Principal_somDefaultConstVCopyInit;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDefaultConstVCopyInit)(
			Principal * somSelf,
			/* inout */ somInitCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Principal_somDefaultAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultAssign,system)
		typedef somTP_Principal_somDefaultAssign *somTD_Principal_somDefaultAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Principal_somDefaultAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Principal_somDefaultConstAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultConstAssign,system)
		typedef somTP_Principal_somDefaultConstAssign *somTD_Principal_somDefaultConstAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Principal_somDefaultConstAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Principal_somDefaultVAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultVAssign,system)
		typedef somTP_Principal_somDefaultVAssign *somTD_Principal_somDefaultVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Principal_somDefaultVAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef SOMObject * (somTP_Principal_somDefaultConstVAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
		#pragma linkage(somTP_Principal_somDefaultConstVAssign,system)
		typedef somTP_Principal_somDefaultConstVAssign *somTD_Principal_somDefaultConstVAssign;
	#else /* __IBMC__ */
		typedef SOMObject * (SOMLINK * somTD_Principal_somDefaultConstVAssign)(
			Principal * somSelf,
			/* inout */ somAssignCtrl *ctrl,
			/* in */ SOMObject * fromObj);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
#ifdef SOM_EXTERN_C_STATIC
	extern "C" {
#endif
	#ifdef __IBMC__
		typedef void (somTP_Principal_somDestruct)(
			Principal * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
		#pragma linkage(somTP_Principal_somDestruct,system)
		typedef somTP_Principal_somDestruct *somTD_Principal_somDestruct;
	#else /* __IBMC__ */
		typedef void (SOMLINK * somTD_Principal_somDestruct)(
			Principal * somSelf,
			/* in */ octet doFree,
			/* inout */ somDestructCtrl *ctrl);
	#endif /* __IBMC__ */
#ifdef SOM_EXTERN_C_STATIC
	}
#endif
	#ifndef Principal_MajorVersion
		#define Principal_MajorVersion   2
	#endif /* Principal_MajorVersion */
	#ifndef Principal_MinorVersion
		#define Principal_MinorVersion   2
	#endif /* Principal_MinorVersion */
	typedef struct PrincipalClassDataStructure
	{
		SOMClass * classObject;
		somMToken _set_userName;
		somMToken _get_userName;
		somMToken _set_hostName;
		somMToken _get_hostName;
	} PrincipalClassDataStructure;
	typedef struct PrincipalCClassDataStructure
	{
		somMethodTabs parentMtab;
		somDToken instanceDataToken;
	} PrincipalCClassDataStructure;
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_principl_Source) || defined(Principal_Class_Source)
			SOMEXTERN struct PrincipalClassDataStructure _PrincipalClassData;
			#ifndef PrincipalClassData
				#define PrincipalClassData    _PrincipalClassData
			#endif /* PrincipalClassData */
		#else
			SOMEXTERN struct PrincipalClassDataStructure * SOMLINK resolve_PrincipalClassData(void);
			#ifndef PrincipalClassData
				#define PrincipalClassData    (*(resolve_PrincipalClassData()))
			#endif /* PrincipalClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_principl_Source) || defined(Principal_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_principl_Source || Principal_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_principl_Source || Principal_Class_Source */
		struct PrincipalClassDataStructure SOMDLINK PrincipalClassData;
	#endif /* SOM_RESOLVE_DATA */
	#ifdef SOM_RESOLVE_DATA
		#if defined(SOM_Module_principl_Source) || defined(Principal_Class_Source)
			SOMEXTERN struct PrincipalCClassDataStructure _PrincipalCClassData;
			#ifndef PrincipalCClassData
				#define PrincipalCClassData    _PrincipalCClassData
			#endif /* PrincipalCClassData */
		#else
			SOMEXTERN struct PrincipalCClassDataStructure * SOMLINK resolve_PrincipalCClassData(void);
			#ifndef PrincipalCClassData
				#define PrincipalCClassData    (*(resolve_PrincipalCClassData()))
			#endif /* PrincipalCClassData */
		#endif
	#else /* SOM_RESOLVE_DATA */
		SOMEXTERN 
		#if defined(SOM_Module_principl_Source) || defined(Principal_Class_Source)
			#ifdef SOMDLLEXPORT
				SOMDLLEXPORT
			#endif /* SOMDLLEXPORT */
		#else /* SOM_Module_principl_Source || Principal_Class_Source */
			#ifdef SOMDLLIMPORT
				SOMDLLIMPORT
			#endif /* SOMDLLIMPORT */
		#endif /* SOM_Module_principl_Source || Principal_Class_Source */
		struct PrincipalCClassDataStructure SOMDLINK PrincipalCClassData;
	#endif /* SOM_RESOLVE_DATA */
	extern "C" {
	extern 
	#if defined(SOM_Module_principl_Source) || defined(Principal_Class_Source)
		#ifdef SOMDLLEXPORT
			SOMDLLEXPORT
		#endif /* SOMDLLEXPORT */
	#else /* SOM_Module_principl_Source || Principal_Class_Source */
		#ifdef SOMDLLIMPORT
			SOMDLLIMPORT
		#endif /* SOMDLLIMPORT */
	#endif /* SOM_Module_principl_Source || Principal_Class_Source */
	SOMClass * SOMLINK PrincipalNewClass
			(integer4 somtmajorVersion,integer4 somtminorVersion);
	}
	#define _SOMCLASS_Principal (PrincipalClassData.classObject)
	#ifndef SOMGD_Principal
		#if (defined(_Principal) || defined(__Principal))
			#undef _Principal
			#undef __Principal
			#define SOMGD_Principal 1
		#else
			#define _Principal _SOMCLASS_Principal
		#endif /* _Principal */
	#endif /* SOMGD_Principal */
	#define Principal_classObj _SOMCLASS_Principal
	#define _SOMMTOKEN_Principal(method) ((somMToken)(PrincipalClassData.method))
#endif /* Principal_API */

	class Principal : public SOMObject
	{
	protected:
		Principal(somMethodTab & mtab)
			: SOMObject(mtab)
		{}
	public:

		inline void _set_userName(
			Environment *ev,
			/* in */ string userName)
		{
			SOM_Resolve((void *)this,Principal,_set_userName)
					((Principal *)(void *)this,ev,userName);
		};

		inline string _get_userName(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Principal,_get_userName)
					((Principal *)(void *)this,ev);
		};

		inline void _set_hostName(
			Environment *ev,
			/* in */ string hostName)
		{
			SOM_Resolve((void *)this,Principal,_set_hostName)
					((Principal *)(void *)this,ev,hostName);
		};

		inline string _get_hostName(
			Environment *ev)
		{
			return SOM_Resolve((void *)this,Principal,_get_hostName)
					((Principal *)(void *)this,ev);
		};

		inline void operator delete(void *x)
			{ ((SOMObject *)x)->somFree(); };

		inline void * operator new(size_t /* len */)
		{ if (!PrincipalClassData.classObject)
			{ PrincipalNewClass(Principal_MajorVersion,Principal_MinorVersion); }
			return (void *)SOM_Resolve((SOMObject *)(void *)PrincipalClassData.classObject,
				SOMClass,somNewNoInit)((SOMClass *)(void *)PrincipalClassData.classObject);
		};
		Principal()
			: SOMObject(*(PrincipalCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==PrincipalCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultInit(0); }
		Principal(Principal *fromObj)
			: SOMObject(*(PrincipalCClassData.parentMtab->mtab))
		{ if ((*(void **)(void *)this)==PrincipalCClassData.parentMtab->mtab)
			((SOMObject *)(void *)this)->somDefaultCopyInit(0,(SOMObject*)(void*)fromObj); }
	};
#endif /* SOM_Module_principl_Header_xh */
