#
# Makefile for Regina REXX Interpreter
#
# Using Borland C++ 5.5 under Win32
# Usage:
#    make -f [DEBUG=Y [TRACEMEM=Y]] [FLISTS=N] [MULTI=Y] [WDOSX=Y]
#
# generated files without giving a target on the command line:
# rexx.exe    statically bounded REXX interpreter
# rexx.lib    static link library of the REXX interpreter, place anywhere
#             in a directory of your LIB-variable.
# regina.lib  link file for regina.dll, place anywhere in a directory of
#             your LIB-variable.
# regina.dll  dynamic link library of the REXX interpreter, place anywhere
#             in a directory of your PATH.
# regina.exe  dynamically bounded REXX interpreter
#
# let the make utility do the hard work:
.AUTODEPEND
.CACHEAUTODEPEND
#
SRCDIR=$(REGINA_SRCDIR)
COMMONSRCDIR=$(SRCDIR)\common
BORLAND=C:\Bcc55
#
CC = bcc32
LD = ilink32
BASE_COPT = -q -DWIN32 -w-aus -w-par -K
#
!if "$(DEBUG)" == "Y"
BASE_LINKOPT = -v
DEBUGFLAG = -v
OPTIMIZE = -Od
! if "$(TRACEMEM)" == "Y"
MEMTRACE = -DTRACEMEM
! else
MEMTRACE =
! endif
!else
BASE_LINKOPT =
DEBUGFLAG = -DNDEBUG
OPTIMIZE = -O2 -d
!endif
#
!if "$(FLISTS)" == "N"
NOFLISTS = -UFLISTS
!else
NOFLISTS =
!endif
#
!if "$(WDOSX)" == "Y"
FORWDOSX = -DWDOSX
!else
FORWDOSX =
!endif
#
!if "$(MULTI)" == "Y"
THREADING = -tWM
MT_FILE = mt_win32
MT_LIB = cw32mt.lib
THREADER = threader.exe
STAT_COMP =
DYN_COMP = -DDYNAMIC
!else
THREADING =
MT_FILE = mt_notmt
MT_LIB = cw32.lib
THREADER =
STAT_COMP = -tWC
DYN_COMP = -tWD -DDYNAMIC
!endif
#
LIBS = import32.lib $(MT_LIB)
SHL_TARGETS= regina.exe rxtest1.dll rxtest2.dll $(THREADER)
LIBFLAGS = rexx.lib
LINKSHL = regina.lib
GETOPT = getopt.obj
DLLDIR = dll-obj
LD_RXLIB1= $(SRCDIR)\test1_w32_dll.def
LD_RXLIB2= $(SRCDIR)\test2_w32_dll.def
MV= -ren
#
CC2O=-c -o$@
#
# Include the common rules for the interpreter
#

#
# Some settings that you may wish to change, these are used only
# for the 'install' target:
#
#   TOPDIR    The top of the directory hierarchy in which to install
#   BINDIR    Where to install the compiled 'rexx' program
#   LIBDIR    Where to install the 'regina' library
#   MANEXT    The extention of the manual page
#   MANDIR    Where to install the manual page
#   PROGNAME  What to call the compiled program
#
BINDIR = $(TOPDIR)/bin
LIBDIR = $(TOPDIR)/lib
!include $(SRCDIR)/regina.ver
VERDOT=$(VER_DOT)
CEXTRA = -DREGINA_VERSION_DATE=\"$(VER_DATE)\" -DREGINA_VERSION_MAJOR=\"$(VER_MAJOR)\" -DREGINA_VERSION_MINOR=\"$(VER_MINOR)\" -DREGINA_VERSION_SUPP=\"$(VER_SUPP)\"

COPT = $(CEXTRA) $(OPTIMIZE) $(DEBUGFLAG) $(BASE_COPT) -I$(SRCDIR) $(FORWDOSX) $(MEMTRACE) $(NOFLISTS) $(WINMULTI) $(THREADING)
LINKOPT = $(BASE_LINKOPT) -L$(BORLAND)\lib -ap -q

README = $(SRCDIR)/README.??? $(SRCDIR)/COPYING-LIB $(SRCDIR)/BUGS $(SRCDIR)/yaccsrc.bound

CSRCFILES = $(SRCDIR)/funcs.c $(SRCDIR)/builtin.c $(SRCDIR)/error.c $(SRCDIR)/variable.c \
	$(SRCDIR)/interprt.c $(SRCDIR)/debug.c $(SRCDIR)/dbgfuncs.c $(SRCDIR)/memory.c $(SRCDIR)/parsing.c $(SRCDIR)/files.c \
	$(SRCDIR)/misc.c $(SRCDIR)/unxfuncs.c $(SRCDIR)/cmsfuncs.c $(SRCDIR)/os2funcs.c $(SRCDIR)/shell.c $(SRCDIR)/rexxext.c $(SRCDIR)/stack.c \
	$(SRCDIR)/tracing.c $(SRCDIR)/interp.c $(SRCDIR)/cmath.c $(SRCDIR)/convert.c $(SRCDIR)/strings.c $(SRCDIR)/library.c \
	$(SRCDIR)/strmath.c $(SRCDIR)/signals.c $(SRCDIR)/macros.c $(SRCDIR)/envir.c $(SRCDIR)/expr.c \
	$(SRCDIR)/wrappers.c $(SRCDIR)/options.c $(SRCDIR)/os_win.c $(SRCDIR)/os_other.c \
	$(SRCDIR)/mt_notmt.c $(SRCDIR)/mt_win32.c $(SRCDIR)/mt_posix.c $(SRCDIR)/nosaa.c

OFILES = funcs.obj builtin.obj error.obj variable.obj \
	interprt.obj debug.obj dbgfuncs.obj memory.obj parsing.obj files.obj \
	misc.obj unxfuncs.obj arxfuncs.obj cmsfuncs.obj os2funcs.obj shell.obj rexxext.obj stack.obj extstack.obj \
	tracing.obj interp.obj cmath.obj convert.obj strings.obj library.obj \
	strmath.obj signals.obj macros.obj envir.obj expr.obj instore.obj rexxbif.obj \
	yaccsrc.obj lexsrc.obj options.obj os_win.obj os_other.obj wrappers.obj $(MT_FILE).obj

SHOFILES = $(DLLDIR)\funcs.obj $(DLLDIR)\builtin.obj $(DLLDIR)\error.obj $(DLLDIR)\variable.obj $(DLLDIR)\extstack.obj $(DLLDIR)\rexxbif.obj \
	$(DLLDIR)\interprt.obj $(DLLDIR)\debug.obj $(DLLDIR)\dbgfuncs.obj $(DLLDIR)\memory.obj $(DLLDIR)\parsing.obj $(DLLDIR)\files.obj \
	$(DLLDIR)\misc.obj $(DLLDIR)\unxfuncs.obj $(DLLDIR)\arxfuncs.obj $(DLLDIR)\cmsfuncs.obj $(DLLDIR)\os2funcs.obj $(DLLDIR)\shell.obj $(DLLDIR)\rexxext.obj $(DLLDIR)\stack.obj \
	$(DLLDIR)\tracing.obj $(DLLDIR)\interp.obj $(DLLDIR)\cmath.obj $(DLLDIR)\convert.obj $(DLLDIR)\strings.obj $(DLLDIR)\library.obj \
	$(DLLDIR)\strmath.obj $(DLLDIR)\signals.obj $(DLLDIR)\macros.obj $(DLLDIR)\envir.obj $(DLLDIR)\expr.obj $(DLLDIR)\instore.obj \
	$(DLLDIR)\yaccsrc.obj $(DLLDIR)\lexsrc.obj $(DLLDIR)\wrappers.obj $(DLLDIR)\options.obj \
	$(DLLDIR)\os_win.obj $(DLLDIR)\os_other.obj \
	$(DLLDIR)\rexx.obj $(DLLDIR)\client.obj $(DLLDIR)\rexxsaa.obj $(DLLDIR)\$(MT_FILE).obj

DEMODIR = $(SRCDIR)/demo
DEMOFILES = $(DEMODIR)/*
TRIPDIR = $(SRCDIR)/trip
TRIPFILES = $(TRIPDIR)/*
UNIXFILES = $(SRCDIR)/*.in $(SRCDIR)/configure $(SRCDIR)/config.sub \
	$(SRCDIR)/config.guess $(SRCDIR)/aclocal.m4 $(SRCDIR)/install-sh \
	$(SRCDIR)/INSTALL $(SRCDIR)/yaccsrc.y $(SRCDIR)/lexsrc.l

ALLSRC = $(CFILES) $(HFILES)

HFILES = $(SRCDIR)/rexx.h $(SRCDIR)/defs.h $(SRCDIR)/extern.h $(SRCDIR)/regina_t.h \
	 $(SRCDIR)/config.h $(SRCDIR)/strings.h $(SRCDIR)/configur.h \
	 $(SRCDIR)/rxiface.h $(SRCDIR)/rexxsaa.h $(SRCDIR)/utsname.h \
	 $(SRCDIR)/mt.h $(SRCDIR)/mt_notmt.h $(SRCDIR)/mt_win32.h $(SRCDIR)/mt_posix.h

MTSSRC = $(SRCDIR)/en.mts $(SRCDIR)/pt.mts $(SRCDIR)/no.mts \
	$(SRCDIR)/de.mts $(SRCDIR)/es.mts $(SRCDIR)/pl.mts \
	$(SRCDIR)/tr.mts

#.SUFFIXES: .sho $(SUFFIXES)
#
# Do not use default suffixes rule
#
.SUFFIXES:

all : rexx.exe rexx.lib execiser.exe $(SHL_TARGETS) rxstack.exe rxqueue.exe mtb_files

$(CSRCFILES) : $(SRCDIR)/rexx.h

$(SRCDIR)/rexx.h : $(SRCDIR)/extern.h $(SRCDIR)/strings.h $(SRCDIR)/defs.h $(SRCDIR)/regina_t.h $(SRCDIR)/mt.h

$(SRCDIR)/mt.h : $(SRCDIR)/$(MT_FILE).h

$(DLLDIR):
         -@if not exist $(DLLDIR)\nul mkdir $(DLLDIR)

rexx.exe : $(OFILES) rexx.obj nosaa.obj rexxw32exe.res
	 $(LD) $(LINKOPT) /Tpe c0x32.obj $(OFILES) rexx.obj nosaa.obj , rexx.exe, , $(LIBS), , rexxw32exe.res

regina.exe : regina.dll regina.obj $(GETOPT) reginaw32exe.res
	 $(LD) $(LINKOPT) /Tpe c0x32.obj regina.obj $(GETOPT), regina.exe, ,$(LINKSHL) $(LIBS), , reginaw32exe.res

execiser.exe : execiser.obj regina.dll
	 $(LD) $(LINKOPT) /Tpe c0x32.obj execiser.obj, execiser.exe, , $(LINKSHL) $(LIBS), ,

rxqueue.exe : rxqueue.obj erexxbif.obj eextstack.obj reginaw32exe.res
	 $(LD) $(LINKOPT) /Tpe c0x32.obj rxqueue.obj+erexxbif.obj+eextstack.obj, rxqueue.exe, , $(LINKSHL) $(LIBS), , reginaw32exe.res

rxstack.exe : rxstack.obj erexxbif.obj eextstack.obj reginaw32exe.res
	 $(LD) $(LINKOPT) /Tpe c0x32.obj rxstack.obj+erexxbif.obj+eextstack.obj, rxstack.exe, , $(LINKSHL) $(LIBS), , reginaw32exe.res

threader.exe : threader.obj regina.dll
	 $(LD) $(LINKOPT) /Tpe c0x32.obj threader.obj, threader.exe, , $(LINKSHL) import32.lib cw32mt.lib, ,

rexx.lib: $(OFILES) client.obj drexx.obj rexxsaa.obj
	tlib $(LIBFLAGS) /u $(OFILES) client.obj drexx.obj rexxsaa.obj

regina.dll: $(DLLDIR) $(SHOFILES) reginaw32dll.res
	$(LD) $(LINKOPT) -Gi /Tpd c0d32.obj $(SHOFILES), regina.dll, regina_dd.map, $(LIBS), $(SRCDIR)\regina_w32_dll.def, reginaw32dll.res

#
# Convert .mts to .mtb
#
mtb_files: msgcmp.exe $(MTSSRC)
	msgcmp $(MTSSRC)

msgcmp.exe: msgcmp.obj reginaw32exe.res
	 $(LD) $(LINKOPT) /Tpe c0x32.obj msgcmp.obj, msgcmp, , $(LINKSHL) $(LIBS), , reginaw32exe.res

msgcmp.obj: $(SRCDIR)/msgcmp.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/msgcmp.c

#
# Rules for static objects
#
funcs.obj :   $(SRCDIR)/funcs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/funcs.c

builtin.obj : $(SRCDIR)/builtin.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/builtin.c

error.obj :   $(SRCDIR)/error.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/error.c

variable.obj :$(SRCDIR)/variable.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/variable.c

interprt.obj :$(SRCDIR)/interprt.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/interprt.c

debug.obj :   $(SRCDIR)/debug.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/debug.c

dbgfuncs.obj :$(SRCDIR)/dbgfuncs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/dbgfuncs.c

memory.obj :  $(SRCDIR)/memory.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/memory.c

parsing.obj : $(SRCDIR)/parsing.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/parsing.c

files.obj :   $(SRCDIR)/files.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/files.c

misc.obj :    $(SRCDIR)/misc.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/misc.c

unxfuncs.obj :$(SRCDIR)/unxfuncs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/unxfuncs.c

arxfuncs.obj :$(SRCDIR)/arxfuncs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/arxfuncs.c

os2funcs.obj :$(SRCDIR)/os2funcs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/os2funcs.c

cmsfuncs.obj :$(SRCDIR)/cmsfuncs.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/cmsfuncs.c

shell.obj :   $(SRCDIR)/shell.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/shell.c

rexxext.obj : $(SRCDIR)/rexxext.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rexxext.c

stack.obj :   $(SRCDIR)/stack.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/stack.c

extstack.obj :   $(SRCDIR)/extstack.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/extstack.c

eextstack.obj : $(SRCDIR)/extstack.c $(SRCDIR)/rexx.h
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/extstack.c

rexxbif.obj :   $(SRCDIR)/rexxbif.c $(SRCDIR)/rexxbif.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rexxbif.c

erexxbif.obj :   $(SRCDIR)/rexxbif.c $(SRCDIR)/rexxbif.h
	$(CC) $(COPT) -DEXTERNAL_TO_REGINA $(CC2O) $(STAT_COMP) $(SRCDIR)/rexxbif.c

tracing.obj : $(SRCDIR)/tracing.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/tracing.c

interp.obj :  $(SRCDIR)/interp.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/interp.c

cmath.obj :   $(SRCDIR)/cmath.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/cmath.c

convert.obj : $(SRCDIR)/convert.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/convert.c

strings.obj : $(SRCDIR)/strings.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/strings.c

library.obj : $(SRCDIR)/library.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/library.c

strmath.obj : $(SRCDIR)/strmath.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/strmath.c

signals.obj : $(SRCDIR)/signals.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/signals.c

macros.obj :  $(SRCDIR)/macros.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/macros.c

envir.obj :   $(SRCDIR)/envir.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/envir.c

expr.obj :    $(SRCDIR)/expr.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/expr.c

wrappers.obj :$(SRCDIR)/wrappers.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/wrappers.c

options.obj : $(SRCDIR)/options.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/options.c

os_win.obj :  $(SRCDIR)/os_win.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/os_win.c

os_other.obj :  $(SRCDIR)/os_other.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/os_other.c

rexx.obj :    $(SRCDIR)/rexx.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rexx.c

client.obj :    $(SRCDIR)/client.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/client.c

rexxsaa.obj :    $(SRCDIR)/rexxsaa.c   $(SRCDIR)\rexxsaa.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rexxsaa.c

regina.obj :  $(SRCDIR)/regina.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/regina.c

drexx.obj : $(SRCDIR)/rexx.c
	$(CC) $(COPT) -DRXLIB $(CC2O) $(STAT_COMP) $(SRCDIR)/rexx.c

mt_notmt.obj : $(SRCDIR)/mt_notmt.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/mt_notmt.c

mt_win32.obj : $(SRCDIR)/mt_win32.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/mt_win32.c

nosaa.obj : $(SRCDIR)/nosaa.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/nosaa.c

instore.obj : $(SRCDIR)/instore.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/instore.c

lexsrc.obj : $(SRCDIR)/lexsrc.c $(SRCDIR)/rexx.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/lexsrc.c

yaccsrc.obj : $(SRCDIR)/yaccsrc.c $(SRCDIR)/defs.h $(SRCDIR)/rexx.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) -A -DYYMAXDEPTH=10000 $(SRCDIR)/yaccsrc.c

execiser.obj : $(SRCDIR)/execiser.c $(SRCDIR)/rexx.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/execiser.c

threader.obj : $(SRCDIR)/threader.c $(SRCDIR)/rexxsaa.h
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) -DWIN32_THREADS $(SRCDIR)/threader.c

getopt.obj : $(SRCDIR)/getopt.c
	$(CC) $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/getopt.c

rxqueue.obj : $(SRCDIR)/rxqueue.c $(SRCDIR)/rexx.h
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rxqueue.c

rxstack.obj : $(SRCDIR)/rxstack.c $(SRCDIR)/rexx.h
	$(CC) -DEXTERNAL_TO_REGINA $(COPT) $(CC2O) $(STAT_COMP) $(SRCDIR)/rxstack.c

#
# Rules for shared objects
#
$(DLLDIR)\funcs.obj :   $(SRCDIR)/funcs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/funcs.c

$(DLLDIR)\builtin.obj : $(SRCDIR)/builtin.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/builtin.c

$(DLLDIR)\error.obj :   $(SRCDIR)/error.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/error.c

$(DLLDIR)\variable.obj :$(SRCDIR)/variable.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/variable.c

$(DLLDIR)\interprt.obj :$(SRCDIR)/interprt.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/interprt.c

$(DLLDIR)\debug.obj :   $(SRCDIR)/debug.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/debug.c

$(DLLDIR)\dbgfuncs.obj :$(SRCDIR)/dbgfuncs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/dbgfuncs.c

$(DLLDIR)\memory.obj :  $(SRCDIR)/memory.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/memory.c

$(DLLDIR)\parsing.obj : $(SRCDIR)/parsing.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/parsing.c

$(DLLDIR)\files.obj :   $(SRCDIR)/files.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/files.c

$(DLLDIR)\misc.obj :    $(SRCDIR)/misc.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/misc.c

$(DLLDIR)\unxfuncs.obj :$(SRCDIR)/unxfuncs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/unxfuncs.c

$(DLLDIR)\arxfuncs.obj :$(SRCDIR)/arxfuncs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/arxfuncs.c

$(DLLDIR)\os2funcs.obj :$(SRCDIR)/os2funcs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/os2funcs.c

$(DLLDIR)\cmsfuncs.obj :$(SRCDIR)/cmsfuncs.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/cmsfuncs.c

$(DLLDIR)\shell.obj :   $(SRCDIR)/shell.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/shell.c

$(DLLDIR)\rexxext.obj : $(SRCDIR)/rexxext.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/rexxext.c

$(DLLDIR)\stack.obj :   $(SRCDIR)/stack.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/stack.c

$(DLLDIR)\extstack.obj :   $(SRCDIR)/extstack.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/extstack.c

$(DLLDIR)\rexxbif.obj :   $(SRCDIR)/rexxbif.c $(SRCDIR)/rexxbif.h
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/rexxbif.c

$(DLLDIR)\tracing.obj : $(SRCDIR)/tracing.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/tracing.c

$(DLLDIR)\interp.obj :  $(SRCDIR)/interp.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/interp.c

$(DLLDIR)\cmath.obj :   $(SRCDIR)/cmath.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/cmath.c

$(DLLDIR)\convert.obj : $(SRCDIR)/convert.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/convert.c

$(DLLDIR)\strings.obj : $(SRCDIR)/strings.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/strings.c

$(DLLDIR)\library.obj : $(SRCDIR)/library.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/library.c

$(DLLDIR)\strmath.obj : $(SRCDIR)/strmath.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/strmath.c

$(DLLDIR)\signals.obj : $(SRCDIR)/signals.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/signals.c

$(DLLDIR)\macros.obj :  $(SRCDIR)/macros.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/macros.c

$(DLLDIR)\envir.obj :   $(SRCDIR)/envir.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/envir.c

$(DLLDIR)\expr.obj :    $(SRCDIR)/expr.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/expr.c

$(DLLDIR)\wrappers.obj :$(SRCDIR)/wrappers.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/wrappers.c

$(DLLDIR)\options.obj : $(SRCDIR)/options.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/options.c

$(DLLDIR)\os_win.obj :  $(SRCDIR)/os_win.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/os_win.c

$(DLLDIR)\os_other.obj :  $(SRCDIR)/os_other.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/os_other.c

$(DLLDIR)\client.obj :  $(SRCDIR)/client.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/client.c

$(DLLDIR)\rexxsaa.obj :  $(SRCDIR)/rexxsaa.c  $(SRCDIR)\rexxsaa.h
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/rexxsaa.c

$(DLLDIR)\rexx.obj : $(SRCDIR)/rexx.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) -DRXLIB $(SRCDIR)/rexx.c

$(DLLDIR)\mt_win32.obj : $(SRCDIR)/mt_win32.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/mt_win32.c

$(DLLDIR)\mt_notmt.obj : $(SRCDIR)/mt_notmt.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/mt_notmt.c

$(DLLDIR)\instore.obj : $(SRCDIR)/instore.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/instore.c

$(DLLDIR)\lexsrc.obj : $(SRCDIR)/lexsrc.c $(SRCDIR)/rexx.h
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/lexsrc.c

$(DLLDIR)\yaccsrc.obj : $(SRCDIR)/yaccsrc.c $(SRCDIR)/defs.h $(SRCDIR)/rexx.h
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) -A -DYYMAXDEPTH=10000 $(SRCDIR)/yaccsrc.c

#
# Rules for sample programs
#
test1.obj: $(SRCDIR)/test1.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/test1.c

rxtest1.dll: test1.obj regina.dll
	$(LD) $(LINKOPT) /Tpd c0d32.obj test1.obj, rxtest1.dll, , $(LINKSHL) $(LIBS), $(LD_RXLIB1),

test2.obj: $(SRCDIR)/test2.c
	$(CC) $(COPT) $(CC2O) $(DYN_COMP) $(SRCDIR)/test2.c

rxtest2.dll: test2.obj regina.dll
	$(LD) $(LINKOPT) /Tpd c0d32.obj test2.obj, rxtest2.dll, , $(LINKSHL) $(LIBS), $(LD_RXLIB2),

#
# Rules for resource files and version details
# We assume we have an already functional regina.exe
#
reginaw32dll.rc: $(SRCDIR)\regina.ver $(SRCDIR)\reginaw32dll.rc
        regina $(COMMONSRCDIR)\fixrc.rexx $(SRCDIR)\reginaw32dll.rc $@ $(VERDOT) $(VERDATE)
reginaw32exe.rc: $(SRCDIR)\regina.ver $(SRCDIR)\reginaw32exe.rc
        regina $(COMMONSRCDIR)\fixrc.rexx $(SRCDIR)\reginaw32exe.rc $@ $(VERDOT) $(VERDATE)
rxstackw32exe.rc: $(SRCDIR)\regina.ver $(SRCDIR)\rxstackw32exe.rc
        regina $(COMMONSRCDIR)\fixrc.rexx $(SRCDIR)\rxstackw32exe.rc $@ $(VERDOT) $(VERDATE)
rxqueuew32exe.rc: $(SRCDIR)\regina.ver $(SRCDIR)\rxqueuew32exe.rc
        regina $(COMMONSRCDIR)\fixrc.rexx $(SRCDIR)\rxqueuew32exe.rc $@ $(VERDOT) $(VERDATE)
rexxw32exe.rc: $(SRCDIR)/regina.ver $(SRCDIR)/rexxw32exe.rc
        regina $(COMMONSRCDIR)\fixrc.rexx $(SRCDIR)\rexxw32exe.rc $@ $(VERDOT) $(VERDATE)

#
# Rules for resources
#
reginaw32dll.res: reginaw32dll.rc
	-copy $(SRCDIR)\reginaw32.ico .
	brcc32 -foreginaw32dll.res -i$(SRCDIR)\;$(BORLAND)\include reginaw32dll.rc
#
reginaw32exe.res: reginaw32exe.rc
	-copy $(SRCDIR)\reginaw32.ico .
	brcc32 -foreginaw32exe.res -i$(SRCDIR)\;$(BORLAND)\include reginaw32exe.rc
#
rexxw32exe.res: rexxw32exe.rc
	-copy $(SRCDIR)\reginaw32.ico .
	brcc32 -forexxw32exe.res -i$(SRCDIR)\;$(BORLAND)\include rexxw32exe.rc
#

clean:
	-del /Q *.*
	-cd $(DLLDIR)
	-del /Q *.*
	-cd ..
	-rd $(DLLDIR)

ARCHIVE_FILES = $(ALLSRC) $(README) $(SRCDIR)/makefile.* $(SRCDIR)/oldmakefiles/makefile* \
	$(SRCDIR)/oldmakefiles/README $(SRCDIR)/*.rsp $(DEMOFILES) $(TRIPFILES) \
	$(CONFFILES) $(SRCDIR)/*.def $(SRCDIR)/*.ico $(SRCDIR)/*.rc \
	$(SRCDIR)/file_id* $(SRCDIR)/*.bat $(SRCDIR)/*.cmd $(YACCLEX_FILES) \
	$(SRCDIR)/*.rexx $(UNIXFILES)

dist:
	tar -cvf - $(ARCHIVE_FILES) | gzip > Regina_$(VERDOT).tar.gz

tar:
	tar -cvf - $(ARCHIVE_FILES) | compress > Regina_$(VERDOT).tar.Z

zip:
	zip regna$(VER) $(ARCHIVE_FILES)

